{"ast":null,"code":"import _classCallCheck from\"/Users/igostu/test/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/igostu/test/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/igostu/test/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/igostu/test/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/igostu/test/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Redirect}from'react-router-dom';import constants from'../../globals/constants';import GameManager from'../../mechanics/GameManager';import{GameNavBar}from'./GameNavBar';import{GameText}from'./GameText';import{GameChoicesList}from'./GameChoicesList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var GamePage=/*#__PURE__*/function(_React$Component){_inherits(GamePage,_React$Component);var _super=_createSuper(GamePage);function GamePage(props){var _this;_classCallCheck(this,GamePage);_this=_super.call(this,props);_this.state={dispatchSent:false};_this.checkIfModuleLoaded=_this.checkIfModuleLoaded.bind(_assertThisInitialized(_this));return _this;}_createClass(GamePage,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.checkIfModuleLoaded()){GameManager.loadGame();}}// Check if text data is loaded in Redux store\n},{key:\"checkIfModuleLoaded\",value:function checkIfModuleLoaded(){return GameManager.checkIfModuleLoaded(constants.MODULE_INCIDENT);}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,text=_this$props.text,choices=_this$props.choices,textWasUpdated=_this$props.textWasUpdated,resetTextUpdate=_this$props.resetTextUpdate;// Add and then remove fade-in CSS class when text was updated\n// This allows text to fade in once a decision is made.\n// A timer is used to reset the textWasUpdated variable in the Redux store\n// so that the fade-in effect can be used again the next time the text changes.\n// The dispatchSent property is used in the component state so the render function\n// doesn't keep sending resetTextUpdate() dispatches to Redux.\nvar faderClass=textWasUpdated?'game-text-container fade-in':'game-text-container';if(textWasUpdated&&!this.state.dispatchSent){this.setState({dispatchSent:true});setTimeout(function(){resetTextUpdate();_this2.setState({dispatchSent:false});},1000);}// If module isn't loaded, redirect to menu screen\nif(!this.checkIfModuleLoaded()){return/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"game-page\",children:[/*#__PURE__*/_jsx(GameNavBar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:faderClass,children:[/*#__PURE__*/_jsx(GameText,{text:text}),/*#__PURE__*/_jsx(GameChoicesList,{choices:choices})]})})]});}}]);return GamePage;}(React.Component);","map":{"version":3,"names":["React","Redirect","constants","GameManager","GameNavBar","GameText","GameChoicesList","GamePage","props","state","dispatchSent","checkIfModuleLoaded","bind","loadGame","MODULE_INCIDENT","text","choices","textWasUpdated","resetTextUpdate","faderClass","setState","setTimeout","Component"],"sources":["/Users/igostu/test/project/src/components/GamePage/GamePage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport constants from '../../globals/constants';\r\nimport GameManager from '../../mechanics/GameManager';\r\n\r\nimport { GameNavBar } from './GameNavBar';\r\nimport { GameText } from './GameText';\r\nimport { GameChoicesList } from './GameChoicesList';\r\n\r\nexport class GamePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dispatchSent: false\r\n    };\r\n\r\n    this.checkIfModuleLoaded = this.checkIfModuleLoaded.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.checkIfModuleLoaded()) {    \r\n      GameManager.loadGame();\r\n    }\r\n  }\r\n\r\n  // Check if text data is loaded in Redux store\r\n  checkIfModuleLoaded() {\r\n    return (GameManager.checkIfModuleLoaded(constants.MODULE_INCIDENT));\r\n  }\r\n\r\n  render() {\r\n    const { text,choices, textWasUpdated, resetTextUpdate } = this.props;\r\n\r\n    // Add and then remove fade-in CSS class when text was updated\r\n    // This allows text to fade in once a decision is made.\r\n    // A timer is used to reset the textWasUpdated variable in the Redux store\r\n    // so that the fade-in effect can be used again the next time the text changes.\r\n    // The dispatchSent property is used in the component state so the render function\r\n    // doesn't keep sending resetTextUpdate() dispatches to Redux.\r\n    const faderClass = textWasUpdated ? 'game-text-container fade-in' : 'game-text-container';\r\n\r\n    if (textWasUpdated && !this.state.dispatchSent) {\r\n      this.setState({dispatchSent: true});\r\n\r\n      setTimeout(() => {\r\n        resetTextUpdate();\r\n        this.setState({dispatchSent: false});\r\n      }, 1000)\r\n    }\r\n\r\n    // If module isn't loaded, redirect to menu screen\r\n    if (!this.checkIfModuleLoaded()) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n      <div className=\"game-page\">\r\n        <GameNavBar />\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className={faderClass}>\r\n            <GameText text={text} />\r\n            <GameChoicesList choices={choices} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"],"mappings":"qtBAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CAEA,MAAOC,UAAP,KAAsB,yBAAtB,CACA,MAAOC,YAAP,KAAwB,6BAAxB,CAEA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,eAAT,KAAgC,mBAAhC,C,wFAEA,UAAaC,SAAb,gHACE,kBAAYC,KAAZ,CAAmB,0CACjB,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACXC,YAAY,CAAE,KADH,CAAb,CAIA,MAAKC,mBAAL,CAA2B,MAAKA,mBAAL,CAAyBC,IAAzB,+BAA3B,CAPiB,aAQlB,CATH,sDAWE,4BAAoB,CAClB,GAAI,KAAKD,mBAAL,EAAJ,CAAgC,CAC9BR,WAAW,CAACU,QAAZ,GACD,CACF,CAED;AAjBF,mCAkBE,8BAAsB,CACpB,MAAQV,YAAW,CAACQ,mBAAZ,CAAgCT,SAAS,CAACY,eAA1C,CAAR,CACD,CApBH,sBAsBE,iBAAS,iBACP,gBAA0D,KAAKN,KAA/D,CAAQO,IAAR,aAAQA,IAAR,CAAaC,OAAb,aAAaA,OAAb,CAAsBC,cAAtB,aAAsBA,cAAtB,CAAsCC,eAAtC,aAAsCA,eAAtC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMC,WAAU,CAAGF,cAAc,CAAG,6BAAH,CAAmC,qBAApE,CAEA,GAAIA,cAAc,EAAI,CAAC,KAAKR,KAAL,CAAWC,YAAlC,CAAgD,CAC9C,KAAKU,QAAL,CAAc,CAACV,YAAY,CAAE,IAAf,CAAd,EAEAW,UAAU,CAAC,UAAM,CACfH,eAAe,GACf,MAAI,CAACE,QAAL,CAAc,CAACV,YAAY,CAAE,KAAf,CAAd,EACD,CAHS,CAGP,IAHO,CAAV,CAID,CAED;AACA,GAAI,CAAC,KAAKC,mBAAL,EAAL,CAAiC,CAC/B,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAAP,CACD,CAED,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,KAAC,UAAD,IADF,cAEE,YAAK,SAAS,CAAC,+BAAf,uBACE,aAAK,SAAS,CAAEQ,UAAhB,wBACE,KAAC,QAAD,EAAU,IAAI,CAAEJ,IAAhB,EADF,cAEE,KAAC,eAAD,EAAiB,OAAO,CAAEC,OAA1B,EAFF,GADF,EAFF,GADF,CAWD,CA1DH,sBAA8BhB,KAAK,CAACsB,SAApC"},"metadata":{},"sourceType":"module"}