{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nvar OUTLINE_PADDING = 2;\n/**\n * The component renders empty SVG rectangles corresponding to the bar group slots.\n * The highlighted group rectangle is used for the pseudo-focus and therefore requires ARIA attributes.\n * Other rectangles are only needed for the \"findBarGroups\" test-utils selector.\n */\n\nexport default function BarGroups(_a) {\n  var ariaLabel = _a.ariaLabel,\n      isRefresh = _a.isRefresh,\n      isPopoverPinned = _a.isPopoverPinned,\n      barGroups = _a.barGroups,\n      highlightedGroupIndex = _a.highlightedGroupIndex,\n      highlightedGroupRef = _a.highlightedGroupRef;\n  return React.createElement(\"g\", {\n    role: \"group\",\n    \"aria-hidden\": \"true\"\n  }, barGroups.map(function (group, index) {\n    return React.createElement(\"rect\", {\n      key: index,\n      x: Math.max(0, group.position.x - OUTLINE_PADDING),\n      y: Math.max(0, group.position.y - OUTLINE_PADDING),\n      width: group.position.width + 2 * OUTLINE_PADDING,\n      height: group.position.height + 2 * OUTLINE_PADDING,\n      ref: index === highlightedGroupIndex ? highlightedGroupRef : undefined,\n      rx: isRefresh ? 4 : 2,\n      role: \"button\",\n      \"aria-label\": ariaLabel,\n      \"aria-haspopup\": true,\n      \"aria-expanded\": isPopoverPinned,\n      fill: \"none\",\n      className: styles['bar-group']\n    });\n  }));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,IAAMC,eAAe,GAAG,CAAxB;AAWA;;;;;;AAKA,eAAc,SAAUC,SAAV,CAA8CC,EAA9C,EAOC;MANbC,SAAS;MACTC,SAAS;MACTC,eAAe;MACfC,SAAS;MACTC,qBAAqB;MACrBC,mBAAmB;EAEnB,OACEV;IAAGW,IAAI,EAAC,OAAR;IAAe,eAAa;EAA5B,GACGH,SAAS,CAACI,GAAV,CAAc,UAACC,KAAD,EAAQC,KAAR,EAAa;IAAK,OAC/Bd;MACEe,GAAG,EAAED,KADP;MAEEE,CAAC,EAAEC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYL,KAAK,CAACM,QAAN,CAAeH,CAAf,GAAmBd,eAA/B,CAFL;MAGEkB,CAAC,EAAEH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYL,KAAK,CAACM,QAAN,CAAeC,CAAf,GAAmBlB,eAA/B,CAHL;MAIEmB,KAAK,EAAER,KAAK,CAACM,QAAN,CAAeE,KAAf,GAAuB,IAAInB,eAJpC;MAKEoB,MAAM,EAAET,KAAK,CAACM,QAAN,CAAeG,MAAf,GAAwB,IAAIpB,eALtC;MAMEqB,GAAG,EAAET,KAAK,KAAKL,qBAAV,GAAkCC,mBAAlC,GAAwDc,SAN/D;MAOEC,EAAE,EAAEnB,SAAS,GAAG,CAAH,GAAO,CAPtB;MAQEK,IAAI,EAAC,QARP;MAQe,cACDN,SATd;MASuB,iBACN,IAVjB;MAUqB,iBACJE,eAXjB;MAYEmB,IAAI,EAAC,MAZP;MAaEC,SAAS,EAAE1B,MAAM,CAAC,WAAD;IAbnB,EAD+B;EAgBhC,CAhBA,CADH,CADF;AAqBD","names":["React","styles","OUTLINE_PADDING","BarGroups","_a","ariaLabel","isRefresh","isPopoverPinned","barGroups","highlightedGroupIndex","highlightedGroupRef","role","map","group","index","key","x","Math","max","position","y","width","height","ref","undefined","rx","fill","className"],"sourceRoot":"","sources":["../../../src/mixed-line-bar-chart/bar-groups.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { ChartDataTypes } from './interfaces';\n\nimport { ScaledBarGroup } from './make-scaled-bar-groups';\nimport styles from './styles.css.js';\n\nconst OUTLINE_PADDING = 2;\n\nexport interface BarGroups<T extends ChartDataTypes> {\n  ariaLabel: string;\n  isRefresh: boolean;\n  isPopoverPinned: boolean;\n  barGroups: ScaledBarGroup<T>[];\n  highlightedGroupIndex: null | number;\n  highlightedGroupRef: React.RefObject<SVGRectElement>;\n}\n\n/**\n * The component renders empty SVG rectangles corresponding to the bar group slots.\n * The highlighted group rectangle is used for the pseudo-focus and therefore requires ARIA attributes.\n * Other rectangles are only needed for the \"findBarGroups\" test-utils selector.\n */\nexport default function BarGroups<T extends ChartDataTypes>({\n  ariaLabel,\n  isRefresh,\n  isPopoverPinned,\n  barGroups,\n  highlightedGroupIndex,\n  highlightedGroupRef,\n}: BarGroups<T>) {\n  return (\n    <g role=\"group\" aria-hidden=\"true\">\n      {barGroups.map((group, index) => (\n        <rect\n          key={index}\n          x={Math.max(0, group.position.x - OUTLINE_PADDING)}\n          y={Math.max(0, group.position.y - OUTLINE_PADDING)}\n          width={group.position.width + 2 * OUTLINE_PADDING}\n          height={group.position.height + 2 * OUTLINE_PADDING}\n          ref={index === highlightedGroupIndex ? highlightedGroupRef : undefined}\n          rx={isRefresh ? 4 : 2}\n          role=\"button\"\n          aria-label={ariaLabel}\n          aria-haspopup={true}\n          aria-expanded={isPopoverPinned}\n          fill=\"none\"\n          className={styles['bar-group']}\n        />\n      ))}\n    </g>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}