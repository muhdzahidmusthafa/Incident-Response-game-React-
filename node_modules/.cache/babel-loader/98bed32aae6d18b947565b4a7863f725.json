{"ast":null,"code":"import { __assign, __rest, __spreadArray } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport InternalIcon from '../icon/internal';\nimport InternalButtonDropdown from '../button-dropdown/internal';\nimport { InternalButton } from '../button/internal';\nimport { BreadcrumbItem } from './item/item';\nimport { fireCancelableEvent } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\n\nvar DropdownTrigger = function (clickHandler, ref, isDisabled, isExpanded) {\n  return React.createElement(InternalButton, {\n    disabled: isDisabled,\n    onClick: function (event) {\n      event.preventDefault();\n      clickHandler();\n    },\n    ref: ref,\n    \"aria-expanded\": isExpanded ? true : undefined,\n    \"aria-haspopup\": true,\n    variant: \"breadcrumb-group\"\n  }, \"...\");\n};\n\nvar EllipsisDropdown = function (_a) {\n  var ariaLabel = _a.ariaLabel,\n      dropdownItems = _a.dropdownItems,\n      onDropdownItemClick = _a.onDropdownItemClick,\n      onDropdownItemFollow = _a.onDropdownItemFollow;\n  return React.createElement(\"li\", {\n    className: styles.ellipsis,\n    \"aria-label\": ariaLabel\n  }, React.createElement(InternalButtonDropdown, {\n    items: dropdownItems,\n    onItemClick: onDropdownItemClick,\n    onItemFollow: onDropdownItemFollow,\n    customTriggerBuilder: DropdownTrigger\n  }), React.createElement(\"span\", {\n    className: styles.icon\n  }, React.createElement(InternalIcon, {\n    name: \"angle-right\"\n  })));\n};\n\nexport var getEventDetail = function (item) {\n  return {\n    item: item,\n    text: item.text,\n    href: item.href\n  };\n};\nexport default function InternalBreadcrumbGroup(_a) {\n  var _b = _a.items,\n      items = _b === void 0 ? [] : _b,\n      ariaLabel = _a.ariaLabel,\n      expandAriaLabel = _a.expandAriaLabel,\n      onClick = _a.onClick,\n      onFollow = _a.onFollow,\n      __internalRootRef = _a.__internalRootRef,\n      props = __rest(_a, [\"items\", \"ariaLabel\", \"expandAriaLabel\", \"onClick\", \"onFollow\", \"__internalRootRef\"]);\n\n  for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n    var item = items_1[_i];\n    checkSafeUrl('BreadcrumbGroup', item.href);\n  }\n\n  var baseProps = getBaseProps(props);\n  var isMobile = useMobile();\n  var breadcrumbItems = items.map(function (item, index) {\n    return React.createElement(\"li\", {\n      className: styles.item,\n      key: index\n    }, React.createElement(BreadcrumbItem, {\n      item: item,\n      onClick: onClick,\n      onFollow: onFollow,\n      isCompressed: isMobile,\n      isLast: index === items.length - 1\n    }));\n  });\n\n  var getEventItem = function (e) {\n    var id = e.detail.id;\n    return items[parseInt(id)];\n  }; // Add ellipsis\n\n\n  if (breadcrumbItems.length >= 3) {\n    var dropdownItems = items.slice(1, items.length - 1).map(function (item, index) {\n      return {\n        id: (index + 1).toString(),\n        text: item.text,\n        href: item.href || '#'\n      };\n    });\n    breadcrumbItems = __spreadArray([breadcrumbItems[0], React.createElement(EllipsisDropdown, {\n      key: 'ellipsis',\n      ariaLabel: expandAriaLabel,\n      dropdownItems: dropdownItems,\n      onDropdownItemClick: function (e) {\n        return fireCancelableEvent(onClick, getEventDetail(getEventItem(e)), e);\n      },\n      onDropdownItemFollow: function (e) {\n        return fireCancelableEvent(onFollow, getEventDetail(getEventItem(e)), e);\n      }\n    })], breadcrumbItems.slice(1), true);\n  }\n\n  return React.createElement(\"nav\", __assign({}, baseProps, {\n    className: clsx(styles['breadcrumb-group'], isMobile && styles.mobile, baseProps.className),\n    \"aria-label\": ariaLabel || undefined,\n    ref: __internalRootRef\n  }), React.createElement(\"ol\", {\n    className: styles['breadcrumb-group-list']\n  }, breadcrumbItems));\n}","map":{"version":3,"mappings":"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","names":["React","styles","clsx","InternalIcon","InternalButtonDropdown","InternalButton","BreadcrumbItem","fireCancelableEvent","getBaseProps","useMobile","checkSafeUrl","DropdownTrigger","clickHandler","ref","isDisabled","isExpanded","disabled","onClick","event","preventDefault","undefined","variant","EllipsisDropdown","_a","ariaLabel","dropdownItems","onDropdownItemClick","onDropdownItemFollow","className","ellipsis","items","onItemClick","onItemFollow","customTriggerBuilder","icon","name","getEventDetail","item","text","href","InternalBreadcrumbGroup","_b","expandAriaLabel","onFollow","__internalRootRef","props","_i","baseProps","isMobile","breadcrumbItems","map","index","key","isCompressed","isLast","length","getEventItem","e","detail","id","parseInt","slice","toString","mobile"],"sourceRoot":"","sources":["../../../src/breadcrumb-group/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport InternalIcon from '../icon/internal';\nimport InternalButtonDropdown from '../button-dropdown/internal';\nimport { LinkItem } from '../button-dropdown/interfaces';\nimport { InternalButton } from '../button/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { BreadcrumbItem } from './item/item';\nimport { BreadcrumbGroupProps, EllipsisDropdownProps } from './interfaces';\nimport { fireCancelableEvent } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { SomeRequired } from '../internal/types.js';\n\nconst DropdownTrigger = (\n  clickHandler: () => void,\n  ref: React.Ref<ButtonProps.Ref>,\n  isDisabled: boolean,\n  isExpanded: boolean\n) => {\n  return (\n    <InternalButton\n      disabled={isDisabled}\n      onClick={event => {\n        event.preventDefault();\n        clickHandler();\n      }}\n      ref={ref}\n      aria-expanded={isExpanded ? true : undefined}\n      aria-haspopup={true}\n      variant=\"breadcrumb-group\"\n    >\n      ...\n    </InternalButton>\n  );\n};\n\nconst EllipsisDropdown = ({\n  ariaLabel,\n  dropdownItems,\n  onDropdownItemClick,\n  onDropdownItemFollow,\n}: EllipsisDropdownProps) => {\n  return (\n    <li className={styles.ellipsis} aria-label={ariaLabel}>\n      <InternalButtonDropdown\n        items={dropdownItems}\n        onItemClick={onDropdownItemClick}\n        onItemFollow={onDropdownItemFollow}\n        customTriggerBuilder={DropdownTrigger}\n      />\n      <span className={styles.icon}>\n        <InternalIcon name=\"angle-right\" />\n      </span>\n    </li>\n  );\n};\n\nexport const getEventDetail = <T extends BreadcrumbGroupProps.Item>(item: T) => ({\n  item,\n  text: item.text,\n  href: item.href,\n});\n\ntype InternalBreadcrumbGroupProps<T extends BreadcrumbGroupProps.Item = BreadcrumbGroupProps.Item> = SomeRequired<\n  BreadcrumbGroupProps<T>,\n  'expandAriaLabel'\n> &\n  InternalBaseComponentProps;\n\nexport default function InternalBreadcrumbGroup<T extends BreadcrumbGroupProps.Item = BreadcrumbGroupProps.Item>({\n  items = [],\n  ariaLabel,\n  expandAriaLabel,\n  onClick,\n  onFollow,\n  __internalRootRef,\n  ...props\n}: InternalBreadcrumbGroupProps<T>) {\n  for (const item of items) {\n    checkSafeUrl('BreadcrumbGroup', item.href);\n  }\n  const baseProps = getBaseProps(props);\n  const isMobile = useMobile();\n\n  let breadcrumbItems = items.map((item, index) => {\n    return (\n      <li className={styles.item} key={index}>\n        <BreadcrumbItem\n          item={item}\n          onClick={onClick}\n          onFollow={onFollow}\n          isCompressed={isMobile}\n          isLast={index === items.length - 1}\n        />\n      </li>\n    );\n  });\n\n  const getEventItem = (e: CustomEvent<{ id: string }>) => {\n    const { id } = e.detail;\n    return items[parseInt(id)];\n  };\n\n  // Add ellipsis\n  if (breadcrumbItems.length >= 3) {\n    const dropdownItems: Array<LinkItem> = items\n      .slice(1, items.length - 1)\n      .map((item: BreadcrumbGroupProps.Item, index: number) => ({\n        id: (index + 1).toString(), // the first item doesn't get inside dropdown\n        text: item.text,\n        href: item.href || '#',\n      }));\n\n    breadcrumbItems = [\n      breadcrumbItems[0],\n      <EllipsisDropdown\n        key={'ellipsis'}\n        ariaLabel={expandAriaLabel}\n        dropdownItems={dropdownItems}\n        onDropdownItemClick={e => fireCancelableEvent(onClick, getEventDetail(getEventItem(e)), e)}\n        onDropdownItemFollow={e => fireCancelableEvent(onFollow, getEventDetail(getEventItem(e)), e)}\n      />,\n      ...breadcrumbItems.slice(1),\n    ];\n  }\n\n  return (\n    <nav\n      {...baseProps}\n      className={clsx(styles['breadcrumb-group'], isMobile && styles.mobile, baseProps.className)}\n      aria-label={ariaLabel || undefined}\n      ref={__internalRootRef}\n    >\n      <ol className={styles['breadcrumb-group-list']}>{breadcrumbItems}</ol>\n    </nav>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}