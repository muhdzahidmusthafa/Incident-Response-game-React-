{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useEffect, useRef } from 'react';\nexport default memo(ResponsiveText);\n\nfunction ResponsiveText(_a) {\n  var x = _a.x,\n      y = _a.y,\n      rightSide = _a.rightSide,\n      className = _a.className,\n      children = _a.children,\n      containerBoundaries = _a.containerBoundaries;\n  var actualRef = useRef(null);\n  var virtualRef = useRef(null); // Determine the visible width of the text and if necessary truncate it until it fits.\n\n  useEffect(function () {\n    // The debouncing is necessary for visual smoothness.\n    var timeoutId = setTimeout(function () {\n      var groupRect = virtualRef.current.getBoundingClientRect();\n      var visibleWidth = containerBoundaries ? getVisibleWidth(groupRect, containerBoundaries) : 0;\n      renderTextContent(actualRef.current, children, visibleWidth);\n    }, 25);\n    return function () {\n      return clearTimeout(timeoutId);\n    };\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"text\", {\n    ref: virtualRef,\n    x: x,\n    y: y,\n    style: {\n      textAnchor: rightSide ? 'start' : 'end',\n      visibility: 'hidden'\n    },\n    \"aria-hidden\": \"true\",\n    className: className\n  }, children), React.createElement(\"text\", {\n    ref: actualRef,\n    x: x,\n    y: y,\n    style: {\n      textAnchor: rightSide ? 'start' : 'end'\n    },\n    className: className\n  }, children));\n}\n\nfunction getVisibleWidth(element, container) {\n  if (element.left < container.left) {\n    return element.right - container.left;\n  } else if (element.right > container.right) {\n    return container.right - element.left;\n  } else {\n    return container.right - container.left;\n  }\n}\n\nfunction renderTextContent(textNode, text, visibleWidth) {\n  var visibleLength = text.length;\n\n  while (visibleLength >= 0) {\n    textNode.textContent = truncateText(text, visibleLength);\n\n    if (!textNode.getComputedTextLength || textNode.getComputedTextLength() <= visibleWidth) {\n      return;\n    } else {\n      visibleLength--;\n    }\n  }\n}\n\nfunction truncateText(text, maxLength) {\n  if (text.length === maxLength) {\n    return text;\n  }\n\n  return text.slice(0, maxLength) + '…';\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;AAWA,eAAeF,IAAI,CAACG,cAAD,CAAnB;;AAEA,SAASA,cAAT,CAAwBC,EAAxB,EAA0G;MAAhFC,CAAC;MAAEC,CAAC;MAAEC,SAAS;MAAEC,SAAS;MAAEC,QAAQ;MAAEC,mBAAmB;EACjF,IAAMC,SAAS,GAAGT,MAAM,CAAiB,IAAjB,CAAxB;EACA,IAAMU,UAAU,GAAGV,MAAM,CAAiB,IAAjB,CAAzB,CAFwG,CAIxG;;EACAD,SAAS,CAAC;IACR;IACA,IAAMY,SAAS,GAAGC,UAAU,CAAC;MAC3B,IAAMC,SAAS,GAAGH,UAAU,CAACI,OAAX,CAAoBC,qBAApB,EAAlB;MACA,IAAMC,YAAY,GAAGR,mBAAmB,GAAGS,eAAe,CAACJ,SAAD,EAAYL,mBAAZ,CAAlB,GAAqD,CAA7F;MACAU,iBAAiB,CAACT,SAAS,CAACK,OAAX,EAAqBP,QAArB,EAA+BS,YAA/B,CAAjB;IACD,CAJ2B,EAIzB,EAJyB,CAA5B;IAKA,OAAO;MAAM,mBAAY,CAACL,SAAD,CAAZ;IAAuB,CAApC;EACD,CARQ,CAAT;EAUA,OACEd,0CAEEA;IACEsB,GAAG,EAAET,UADP;IAEEP,CAAC,EAAEA,CAFL;IAGEC,CAAC,EAAEA,CAHL;IAIEgB,KAAK,EAAE;MAAEC,UAAU,EAAEhB,SAAS,GAAG,OAAH,GAAa,KAApC;MAA2CiB,UAAU,EAAE;IAAvD,CAJT;IAI0E,eAC5D,MALd;IAMEhB,SAAS,EAAEA;EANb,GAQGC,QARH,CAFF,EAcEV;IAAMsB,GAAG,EAAEV,SAAX;IAAsBN,CAAC,EAAEA,CAAzB;IAA4BC,CAAC,EAAEA,CAA/B;IAAkCgB,KAAK,EAAE;MAAEC,UAAU,EAAEhB,SAAS,GAAG,OAAH,GAAa;IAApC,CAAzC;IAAsFC,SAAS,EAAEA;EAAjG,GACGC,QADH,CAdF,CADF;AAoBD;;AAED,SAASU,eAAT,CAAyBM,OAAzB,EAAmEC,SAAnE,EAA6G;EAC3G,IAAID,OAAO,CAACE,IAAR,GAAeD,SAAS,CAACC,IAA7B,EAAmC;IACjC,OAAOF,OAAO,CAACG,KAAR,GAAgBF,SAAS,CAACC,IAAjC;EACD,CAFD,MAEO,IAAIF,OAAO,CAACG,KAAR,GAAgBF,SAAS,CAACE,KAA9B,EAAqC;IAC1C,OAAOF,SAAS,CAACE,KAAV,GAAkBH,OAAO,CAACE,IAAjC;EACD,CAFM,MAEA;IACL,OAAOD,SAAS,CAACE,KAAV,GAAkBF,SAAS,CAACC,IAAnC;EACD;AACF;;AAED,SAASP,iBAAT,CAA2BS,QAA3B,EAAqDC,IAArD,EAAmEZ,YAAnE,EAAuF;EACrF,IAAIa,aAAa,GAAGD,IAAI,CAACE,MAAzB;;EACA,OAAOD,aAAa,IAAI,CAAxB,EAA2B;IACzBF,QAAQ,CAACI,WAAT,GAAuBC,YAAY,CAACJ,IAAD,EAAOC,aAAP,CAAnC;;IACA,IAAI,CAACF,QAAQ,CAACM,qBAAV,IAAmCN,QAAQ,CAACM,qBAAT,MAAoCjB,YAA3E,EAAyF;MACvF;IACD,CAFD,MAEO;MACLa,aAAa;IACd;EACF;AACF;;AAED,SAASG,YAAT,CAAsBJ,IAAtB,EAAoCM,SAApC,EAAqD;EACnD,IAAIN,IAAI,CAACE,MAAL,KAAgBI,SAApB,EAA+B;IAC7B,OAAON,IAAP;EACD;;EACD,OAAOA,IAAI,CAACO,KAAL,CAAW,CAAX,EAAcD,SAAd,IAA2B,GAAlC;AACD","names":["React","memo","useEffect","useRef","ResponsiveText","_a","x","y","rightSide","className","children","containerBoundaries","actualRef","virtualRef","timeoutId","setTimeout","groupRect","current","getBoundingClientRect","visibleWidth","getVisibleWidth","renderTextContent","ref","style","textAnchor","visibility","element","container","left","right","textNode","text","visibleLength","length","textContent","truncateText","getComputedTextLength","maxLength","slice"],"sourceRoot":"","sources":["../../../src/pie-chart/responsive-text.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useEffect, useRef } from 'react';\n\ninterface ResponsiveTextProps {\n  x: number;\n  y: number;\n  rightSide?: boolean;\n  className?: string;\n  children: string;\n  containerBoundaries: null | { left: number; right: number };\n}\n\nexport default memo(ResponsiveText);\n\nfunction ResponsiveText({ x, y, rightSide, className, children, containerBoundaries }: ResponsiveTextProps) {\n  const actualRef = useRef<SVGTextElement>(null);\n  const virtualRef = useRef<SVGTextElement>(null);\n\n  // Determine the visible width of the text and if necessary truncate it until it fits.\n  useEffect(() => {\n    // The debouncing is necessary for visual smoothness.\n    const timeoutId = setTimeout(() => {\n      const groupRect = virtualRef.current!.getBoundingClientRect();\n      const visibleWidth = containerBoundaries ? getVisibleWidth(groupRect, containerBoundaries) : 0;\n      renderTextContent(actualRef.current!, children, visibleWidth);\n    }, 25);\n    return () => clearTimeout(timeoutId);\n  });\n\n  return (\n    <>\n      {/* Invisible sample text used for measurement */}\n      <text\n        ref={virtualRef}\n        x={x}\n        y={y}\n        style={{ textAnchor: rightSide ? 'start' : 'end', visibility: 'hidden' }}\n        aria-hidden=\"true\"\n        className={className}\n      >\n        {children}\n      </text>\n\n      {/* Text node to render truncated text into */}\n      <text ref={actualRef} x={x} y={y} style={{ textAnchor: rightSide ? 'start' : 'end' }} className={className}>\n        {children}\n      </text>\n    </>\n  );\n}\n\nfunction getVisibleWidth(element: { left: number; right: number }, container: { left: number; right: number }): number {\n  if (element.left < container.left) {\n    return element.right - container.left;\n  } else if (element.right > container.right) {\n    return container.right - element.left;\n  } else {\n    return container.right - container.left;\n  }\n}\n\nfunction renderTextContent(textNode: SVGTextElement, text: string, visibleWidth: number) {\n  let visibleLength = text.length;\n  while (visibleLength >= 0) {\n    textNode.textContent = truncateText(text, visibleLength);\n    if (!textNode.getComputedTextLength || textNode.getComputedTextLength() <= visibleWidth) {\n      return;\n    } else {\n      visibleLength--;\n    }\n  }\n}\n\nfunction truncateText(text: string, maxLength: number) {\n  if (text.length === maxLength) {\n    return text;\n  }\n  return text.slice(0, maxLength) + '…';\n}\n"]},"metadata":{},"sourceType":"module"}