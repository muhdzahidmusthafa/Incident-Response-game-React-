{"ast":null,"code":"import { warnOnce } from '../internal/logging';\nexport function hasActiveLink(items, activeHref) {\n  for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n    var item = items_1[_i];\n\n    if ((item.type === 'link' || item.type === 'link-group' || item.type === 'expandable-link-group') && item.href === activeHref) {\n      return true;\n    }\n\n    if ((item.type === 'section' || item.type === 'link-group' || item.type === 'expandable-link-group') && hasActiveLink(item.items, activeHref)) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport function generateExpandableItemsMapping(items, mapping, expandableParents) {\n  if (mapping === void 0) {\n    mapping = new WeakMap();\n  }\n\n  if (expandableParents === void 0) {\n    expandableParents = [];\n  }\n\n  items.forEach(function (item) {\n    var nextLevelParents = expandableParents.slice();\n\n    if (item.type === 'section' || item.type === 'expandable-link-group') {\n      mapping.set(item, expandableParents);\n      nextLevelParents.unshift(item);\n    }\n\n    if (item.type === 'section' || item.type === 'link-group' || item.type === 'expandable-link-group') {\n      generateExpandableItemsMapping(item.items, mapping, nextLevelParents);\n    }\n  });\n  return mapping;\n}\nexport function checkDuplicateHrefs(items) {\n  var hrefs = new Set();\n  var queue = items.slice();\n\n  while (queue.length > 0) {\n    // We just checked that there's items in the queue.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var item = queue.shift(); // Check duplicated hrefs\n\n    if ('href' in item) {\n      if (hrefs.has(item.href)) {\n        warnOnce('SideNavigation', \"duplicate href in \\\"\".concat(item.text, \"\\\": \").concat(item.href));\n      }\n\n      hrefs.add(item.href);\n    }\n\n    if ('items' in item) {\n      queue.push.apply(queue, item.items);\n    }\n  }\n}","map":{"version":3,"mappings":"AAGA,SAASA,QAAT,QAAyB,qBAAzB;AAIA,OAAM,SAAUC,aAAV,CAAwBC,KAAxB,EAAwEC,UAAxE,EAA0F;EAC9F,KAAmB,2BAAnB,EAAmBC,mBAAnB,EAAmBA,IAAnB,EAA0B;IAArB,IAAMC,IAAI,cAAV;;IACH,IACE,CAACA,IAAI,CAACC,IAAL,KAAc,MAAd,IAAwBD,IAAI,CAACC,IAAL,KAAc,YAAtC,IAAsDD,IAAI,CAACC,IAAL,KAAc,uBAArE,KACAD,IAAI,CAACE,IAAL,KAAcJ,UAFhB,EAGE;MACA,OAAO,IAAP;IACD;;IACD,IACE,CAACE,IAAI,CAACC,IAAL,KAAc,SAAd,IAA2BD,IAAI,CAACC,IAAL,KAAc,YAAzC,IAAyDD,IAAI,CAACC,IAAL,KAAc,uBAAxE,KACAL,aAAa,CAACI,IAAI,CAACH,KAAN,EAAaC,UAAb,CAFf,EAGE;MACA,OAAO,IAAP;IACD;EACF;;EACD,OAAO,KAAP;AACD;AAED,OAAM,SAAUK,8BAAV,CACJN,KADI,EAEJO,OAFI,EAGJC,iBAHI,EAGiD;EADrD;IAAAD,cAAgFE,OAAhF;EAAyF;;EACzF;IAAAD;EAAqD;;EAErDR,KAAK,CAACU,OAAN,CAAc,gBAAI;IAChB,IAAMC,gBAAgB,GAAGH,iBAAiB,CAACI,KAAlB,EAAzB;;IACA,IAAIT,IAAI,CAACC,IAAL,KAAc,SAAd,IAA2BD,IAAI,CAACC,IAAL,KAAc,uBAA7C,EAAsE;MACpEG,OAAO,CAACM,GAAR,CAAYV,IAAZ,EAAkBK,iBAAlB;MACAG,gBAAgB,CAACG,OAAjB,CAAyBX,IAAzB;IACD;;IACD,IAAIA,IAAI,CAACC,IAAL,KAAc,SAAd,IAA2BD,IAAI,CAACC,IAAL,KAAc,YAAzC,IAAyDD,IAAI,CAACC,IAAL,KAAc,uBAA3E,EAAoG;MAClGE,8BAA8B,CAACH,IAAI,CAACH,KAAN,EAAaO,OAAb,EAAsBI,gBAAtB,CAA9B;IACD;EACF,CATD;EAUA,OAAOJ,OAAP;AACD;AAED,OAAM,SAAUQ,mBAAV,CAA8Bf,KAA9B,EAA4E;EAChF,IAAMgB,KAAK,GAAG,IAAIC,GAAJ,EAAd;EACA,IAAMC,KAAK,GAAGlB,KAAK,CAACY,KAAN,EAAd;;EACA,OAAOM,KAAK,CAACC,MAAN,GAAe,CAAtB,EAAyB;IACvB;IACA;IACA,IAAMhB,IAAI,GAAGe,KAAK,CAACE,KAAN,EAAb,CAHuB,CAKvB;;IACA,IAAI,UAAUjB,IAAd,EAAoB;MAClB,IAAIa,KAAK,CAACK,GAAN,CAAUlB,IAAI,CAACE,IAAf,CAAJ,EAA0B;QACxBP,QAAQ,CAAC,gBAAD,EAAmB,8BAAsBK,IAAI,CAACmB,IAA3B,EAA+B,MAA/B,EAA+BC,MAA/B,CAAqCpB,IAAI,CAACE,IAA1C,CAAnB,CAAR;MACD;;MACDW,KAAK,CAACQ,GAAN,CAAUrB,IAAI,CAACE,IAAf;IACD;;IAED,IAAI,WAAWF,IAAf,EAAqB;MACnBe,KAAK,CAACO,IAAN,CAAUC,KAAV,QAAcvB,IAAI,CAACH,KAAnB;IACD;EACF;AACF","names":["warnOnce","hasActiveLink","items","activeHref","_i","item","type","href","generateExpandableItemsMapping","mapping","expandableParents","WeakMap","forEach","nextLevelParents","slice","set","unshift","checkDuplicateHrefs","hrefs","Set","queue","length","shift","has","text","concat","add","push","apply"],"sourceRoot":"","sources":["../../../src/side-navigation/util.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SideNavigationProps } from './interfaces';\nimport { warnOnce } from '../internal/logging';\n\ntype ExpandableItem = SideNavigationProps.Section | SideNavigationProps.ExpandableLinkGroup;\n\nexport function hasActiveLink(items: ReadonlyArray<SideNavigationProps.Item>, activeHref: string): boolean {\n  for (const item of items) {\n    if (\n      (item.type === 'link' || item.type === 'link-group' || item.type === 'expandable-link-group') &&\n      item.href === activeHref\n    ) {\n      return true;\n    }\n    if (\n      (item.type === 'section' || item.type === 'link-group' || item.type === 'expandable-link-group') &&\n      hasActiveLink(item.items, activeHref)\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function generateExpandableItemsMapping(\n  items: ReadonlyArray<SideNavigationProps.Item>,\n  mapping: WeakMap<SideNavigationProps.Item, ReadonlyArray<ExpandableItem>> = new WeakMap(),\n  expandableParents: ReadonlyArray<ExpandableItem> = []\n): WeakMap<SideNavigationProps.Item, ReadonlyArray<ExpandableItem>> {\n  items.forEach(item => {\n    const nextLevelParents = expandableParents.slice();\n    if (item.type === 'section' || item.type === 'expandable-link-group') {\n      mapping.set(item, expandableParents);\n      nextLevelParents.unshift(item);\n    }\n    if (item.type === 'section' || item.type === 'link-group' || item.type === 'expandable-link-group') {\n      generateExpandableItemsMapping(item.items, mapping, nextLevelParents);\n    }\n  });\n  return mapping;\n}\n\nexport function checkDuplicateHrefs(items: ReadonlyArray<SideNavigationProps.Item>) {\n  const hrefs = new Set();\n  const queue = items.slice();\n  while (queue.length > 0) {\n    // We just checked that there's items in the queue.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const item = queue.shift()!;\n\n    // Check duplicated hrefs\n    if ('href' in item) {\n      if (hrefs.has(item.href)) {\n        warnOnce('SideNavigation', `duplicate href in \"${item.text}\": ${item.href}`);\n      }\n      hrefs.add(item.href);\n    }\n\n    if ('items' in item) {\n      queue.push(...item.items);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}