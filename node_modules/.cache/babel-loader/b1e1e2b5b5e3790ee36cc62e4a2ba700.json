{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styles from './styles.css.js';\nimport { InternalButton } from '../../../button/internal';\nimport InternalBox from '../../../box/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport { Task } from './task';\nimport { getStepInfo } from '../../../annotation-context/index.js';\nexport function TaskList(_a) {\n  var _b;\n\n  var tasks = _a.tasks,\n      onExitTutorial = _a.onExitTutorial,\n      currentGlobalStepIndex = _a.currentGlobalStepIndex,\n      i18nStrings = _a.i18nStrings;\n  var currentTaskIndex = getStepInfo(tasks, currentGlobalStepIndex !== null && currentGlobalStepIndex !== void 0 ? currentGlobalStepIndex : 0).taskIndex;\n\n  var _c = useState((_b = {}, _b[currentTaskIndex] = true, _b)),\n      expandedTasks = _c[0],\n      setExpandedTasks = _c[1];\n\n  var onToggleExpand = useCallback(function (stepIndex) {\n    setExpandedTasks(function (prevTasks) {\n      var _a;\n\n      return __assign(__assign({}, prevTasks), (_a = {}, _a[stepIndex] = !prevTasks[stepIndex], _a));\n    });\n  }, []); // When the user progresses to a different task, all tasks except this one are collapsed.\n\n  useEffect(function () {\n    var _a;\n\n    setExpandedTasks((_a = {}, _a[currentTaskIndex] = true, _a));\n  }, [currentTaskIndex]);\n  return React.createElement(InternalSpaceBetween, {\n    size: \"xxl\"\n  }, React.createElement(\"ol\", {\n    className: styles['tutorial-list']\n  }, tasks.map(function (task, index) {\n    var _a;\n\n    return React.createElement(Task, {\n      task: task,\n      key: index,\n      taskIndex: index,\n      currentTaskIndex: currentTaskIndex,\n      expanded: (_a = expandedTasks[index]) !== null && _a !== void 0 ? _a : false,\n      onToggleExpand: onToggleExpand,\n      i18nStrings: i18nStrings\n    });\n  })), React.createElement(InternalBox, {\n    margin: {\n      top: 'xxxs'\n    }\n  }, React.createElement(InternalButton, {\n    onClick: onExitTutorial,\n    formAction: \"none\",\n    className: styles['dismiss-button']\n  }, i18nStrings.dismissTutorialButtonText)));\n}","map":{"version":3,"mappings":"kCAAA;AACA;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AAEA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,WAAT,QAA4B,sCAA5B;AASA,OAAM,SAAUC,QAAV,CAAmBC,EAAnB,EAAgG;;;MAA3EC,KAAK;MAAEC,cAAc;MAAEC,sBAAsB;MAAEC,WAAW;EACnF,IAAMC,gBAAgB,GAAGP,WAAW,CAACG,KAAD,EAAQE,sBAAsB,SAAtB,0BAAsB,WAAtB,4BAA0B,CAAlC,CAAX,CAAgDG,SAAzE;;EACM,SAAoCd,QAAQ,WAAGe,GAACF,gBAAD,IAAoB,IAAvB,EAA2BE,EAA3B,EAA5C;EAAA,IAACC,aAAa,QAAd;EAAA,IAAgBC,gBAAgB,QAAhC;;EAEN,IAAMC,cAAc,GAAGpB,WAAW,CAAC,UAACqB,SAAD,EAAkB;IACnDF,gBAAgB,CAAC,qBAAS;;;MAAI,6BAAMG,SAAN,IAAeZ,YAAGW,SAAH,IAAe,CAACC,SAAS,CAACD,SAAD,CAAzB,EAAoCX,EAAnD;IAAsD,CAApE,CAAhB;EACD,CAFiC,EAE/B,EAF+B,CAAlC,CAJoG,CAQpG;;EACAT,SAAS,CAAC;;;IACRkB,gBAAgB,WAAGT,GAACK,gBAAD,IAAoB,IAAvB,EAA2BL,EAA3B,EAAhB;EACD,CAFQ,EAEN,CAACK,gBAAD,CAFM,CAAT;EAIA,OACEhB,oBAACO,oBAAD,EAAqB;IAACiB,IAAI,EAAC;EAAN,CAArB,EACExB;IAAIyB,SAAS,EAAErB,MAAM,CAAC,eAAD;EAArB,GACGQ,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAY;;;IAAK,OAC1B5B,oBAACQ,IAAD,EAAK;MACHmB,IAAI,EAAEA,IADH;MAEHE,GAAG,EAAED,KAFF;MAGHX,SAAS,EAAEW,KAHR;MAIHZ,gBAAgB,EAAEA,gBAJf;MAKHc,QAAQ,EAAE,mBAAa,CAACF,KAAD,CAAb,MAAoB,IAApB,IAAoBjB,aAApB,GAAoBA,EAApB,GAAwB,KAL/B;MAMHU,cAAc,EAAEA,cANb;MAOHN,WAAW,EAAEA;IAPV,CAAL,CAD0B;EAU3B,CAVA,CADH,CADF,EAcEf,oBAACM,WAAD,EAAY;IAACyB,MAAM,EAAE;MAAEC,GAAG,EAAE;IAAP;EAAT,CAAZ,EACEhC,oBAACK,cAAD,EAAe;IAAC4B,OAAO,EAAEpB,cAAV;IAA0BqB,UAAU,EAAC,MAArC;IAA4CT,SAAS,EAAErB,MAAM,CAAC,gBAAD;EAA7D,CAAf,EACGW,WAAW,CAACoB,yBADf,CADF,CAdF,CADF;AAsBD","names":["React","useCallback","useEffect","useState","styles","InternalButton","InternalBox","InternalSpaceBetween","Task","getStepInfo","TaskList","_a","tasks","onExitTutorial","currentGlobalStepIndex","i18nStrings","currentTaskIndex","taskIndex","_b","expandedTasks","setExpandedTasks","onToggleExpand","stepIndex","prevTasks","size","className","map","task","index","key","expanded","margin","top","onClick","formAction","dismissTutorialButtonText"],"sourceRoot":"","sources":["../../../../../src/tutorial-panel/components/tutorial-detail-view/task-list.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styles from './styles.css.js';\nimport { TutorialPanelProps } from '../../interfaces';\nimport { InternalButton } from '../../../button/internal';\nimport InternalBox from '../../../box/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport { HotspotContext } from '../../../annotation-context/context';\nimport { Task } from './task';\nimport { getStepInfo } from '../../../annotation-context/index.js';\n\nexport interface TaskListProps {\n  tasks: ReadonlyArray<TutorialPanelProps.Task>;\n  onExitTutorial: () => void;\n  currentGlobalStepIndex: HotspotContext['currentStepIndex'];\n  i18nStrings: TutorialPanelProps['i18nStrings'];\n}\n\nexport function TaskList({ tasks, onExitTutorial, currentGlobalStepIndex, i18nStrings }: TaskListProps) {\n  const currentTaskIndex = getStepInfo(tasks, currentGlobalStepIndex ?? 0).taskIndex;\n  const [expandedTasks, setExpandedTasks] = useState({ [currentTaskIndex]: true });\n\n  const onToggleExpand = useCallback((stepIndex: number) => {\n    setExpandedTasks(prevTasks => ({ ...prevTasks, [stepIndex]: !prevTasks[stepIndex] }));\n  }, []);\n\n  // When the user progresses to a different task, all tasks except this one are collapsed.\n  useEffect(() => {\n    setExpandedTasks({ [currentTaskIndex]: true });\n  }, [currentTaskIndex]);\n\n  return (\n    <InternalSpaceBetween size=\"xxl\">\n      <ol className={styles['tutorial-list']}>\n        {tasks.map((task, index) => (\n          <Task\n            task={task}\n            key={index}\n            taskIndex={index}\n            currentTaskIndex={currentTaskIndex}\n            expanded={expandedTasks[index] ?? false}\n            onToggleExpand={onToggleExpand}\n            i18nStrings={i18nStrings}\n          />\n        ))}\n      </ol>\n      <InternalBox margin={{ top: 'xxxs' }}>\n        <InternalButton onClick={onExitTutorial} formAction=\"none\" className={styles['dismiss-button']}>\n          {i18nStrings.dismissTutorialButtonText}\n        </InternalButton>\n      </InternalBox>\n    </InternalSpaceBetween>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}