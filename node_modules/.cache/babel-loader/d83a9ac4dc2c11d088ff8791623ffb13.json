{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var isoToDisplay = function (value) {\n  return value.replace(/-/g, '/');\n};\nexport var displayToIso = function (value) {\n  return value.replace(/\\//g, '-');\n};\nexport var daysInMonth = function (date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n}; // we cannot use new Date(string) constructor, because it produces GMT time that may have different date than the local\n\nexport var parseDate = function (value) {\n  var _a = value.split('-'),\n      year = _a[0],\n      month = _a[1],\n      day = _a[2];\n\n  return new Date(Number(year), (Number(month) || 1) - 1, Number(day) || 1);\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAO,IAAMA,YAAY,GAAG,UAACC,KAAD,EAAc;EAAK,YAAK,CAACC,OAAN,CAAc,IAAd,EAAoB,GAApB;AAAwB,CAAhE;AACP,OAAO,IAAMC,YAAY,GAAG,UAACF,KAAD,EAAc;EAAK,YAAK,CAACC,OAAN,CAAc,KAAd,EAAqB,GAArB;AAAyB,CAAjE;AACP,OAAO,IAAME,WAAW,GAAG,UAACC,IAAD,EAAW;EAAK,WAAIC,IAAJ,CAASD,IAAI,CAACE,WAAL,EAAT,EAA6BF,IAAI,CAACG,QAAL,KAAkB,CAA/C,EAAkD,CAAlD,EAAqDC,OAArD;AAA8D,CAAlG,C,CAEP;;AACA,OAAO,IAAMC,SAAS,GAAG,UAACT,KAAD,EAAc;EAC/B,SAAqBA,KAAK,CAACU,KAAN,CAAY,GAAZ,CAArB;EAAA,IAACC,IAAI,QAAL;EAAA,IAAOC,KAAK,QAAZ;EAAA,IAAcC,GAAG,QAAjB;;EACN,OAAO,IAAIR,IAAJ,CAASS,MAAM,CAACH,IAAD,CAAf,EAAuB,CAACG,MAAM,CAACF,KAAD,CAAN,IAAiB,CAAlB,IAAuB,CAA9C,EAAiDE,MAAM,CAACD,GAAD,CAAN,IAAe,CAAhE,CAAP;AACD,CAHM","names":["isoToDisplay","value","replace","displayToIso","daysInMonth","date","Date","getFullYear","getMonth","getDate","parseDate","split","year","month","day","Number"],"sourceRoot":"","sources":["../../../../../../src/internal/components/date-input/utils/date.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const isoToDisplay = (value: string) => value.replace(/-/g, '/');\nexport const displayToIso = (value: string) => value.replace(/\\//g, '-');\nexport const daysInMonth = (date: Date) => new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n\n// we cannot use new Date(string) constructor, because it produces GMT time that may have different date than the local\nexport const parseDate = (value: string): Date => {\n  const [year, month, day] = value.split('-');\n  return new Date(Number(year), (Number(month) || 1) - 1, Number(day) || 1);\n};\n"]},"metadata":{},"sourceType":"module"}