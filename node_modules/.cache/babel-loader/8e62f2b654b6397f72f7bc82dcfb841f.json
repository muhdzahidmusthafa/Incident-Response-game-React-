{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport clsx from 'clsx';\nimport InternalExpandableSection from '../expandable-section/internal';\nimport InternalIcon from '../icon/internal';\nimport styles from './styles.css.js';\nimport { isPlainLeftClick } from '../internal/events';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { hasActiveLink } from './util';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nexport function Header(_a) {\n  var _b, _c;\n\n  var definition = _a.definition,\n      activeHref = _a.activeHref,\n      fireFollow = _a.fireFollow;\n  checkSafeUrl('SideNavigation', definition.href);\n  var focusVisible = useFocusVisible();\n  var onClick = useCallback(function (event) {\n    if (isPlainLeftClick(event)) {\n      fireFollow(definition, event);\n    }\n  }, [fireFollow, definition]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: styles.header\n  }, React.createElement(\"a\", __assign({}, focusVisible, {\n    href: definition.href,\n    className: clsx(styles['header-link'], (_b = {}, _b[styles['header-link--has-logo']] = !!definition.logo, _b)),\n    \"aria-current\": definition.href === activeHref ? 'page' : undefined,\n    onClick: onClick\n  }), definition.logo && React.createElement(\"img\", __assign({\n    className: clsx(styles['header-logo'], (_c = {}, _c[styles['header-logo--stretched']] = !definition.text, _c))\n  }, definition.logo)), React.createElement(\"span\", {\n    className: styles['header-link-text']\n  }, definition.text))), React.createElement(Divider, {\n    variant: \"header\"\n  }));\n}\nexport function ItemList(_a) {\n  var variant = _a.variant,\n      items = _a.items,\n      activeHref = _a.activeHref,\n      fireChange = _a.fireChange,\n      fireFollow = _a.fireFollow;\n  return React.createElement(\"ul\", {\n    className: clsx(styles.list, styles[\"list-variant-\".concat(variant)])\n  }, items.map(function (item, i) {\n    return React.createElement(\"li\", {\n      key: i,\n      className: styles['list-item']\n    }, item.type === 'divider' && React.createElement(Divider, {\n      variant: \"default\"\n    }), item.type === 'link' && React.createElement(Link, {\n      definition: item,\n      activeHref: activeHref,\n      fireChange: fireChange,\n      fireFollow: fireFollow\n    }), item.type === 'section' && React.createElement(Section, {\n      definition: item,\n      activeHref: activeHref,\n      fireChange: fireChange,\n      fireFollow: fireFollow\n    }), item.type === 'link-group' && React.createElement(LinkGroup, {\n      definition: item,\n      activeHref: activeHref,\n      fireChange: fireChange,\n      fireFollow: fireFollow\n    }), item.type === 'expandable-link-group' && React.createElement(ExpandableLinkGroup, {\n      definition: item,\n      activeHref: activeHref,\n      fireChange: fireChange,\n      fireFollow: fireFollow\n    }));\n  }));\n}\n\nfunction Divider(_a) {\n  var _b = _a.variant,\n      variant = _b === void 0 ? 'default' : _b;\n  return React.createElement(\"hr\", {\n    className: clsx(styles.divider, styles[\"divider-\".concat(variant)])\n  });\n}\n\nfunction Link(_a) {\n  var _b;\n\n  var definition = _a.definition,\n      expanded = _a.expanded,\n      activeHref = _a.activeHref,\n      fireFollow = _a.fireFollow;\n  checkSafeUrl('SideNavigation', definition.href);\n  var isActive = definition.href === activeHref;\n  var focusVisible = useFocusVisible();\n  var onClick = useCallback(function (event) {\n    // Prevent the click event from toggling outer expandable sections.\n    event.stopPropagation();\n\n    if (isPlainLeftClick(event)) {\n      fireFollow(definition, event);\n    }\n  }, [fireFollow, definition]);\n  return React.createElement(React.Fragment, null, React.createElement(\"a\", __assign({}, focusVisible, {\n    href: definition.href,\n    className: clsx(styles.link, (_b = {}, _b[styles['link-active']] = isActive, _b)),\n    target: definition.external ? '_blank' : undefined,\n    rel: definition.external ? 'noopener noreferrer' : undefined,\n    \"aria-expanded\": expanded,\n    \"aria-current\": definition.href === activeHref ? 'page' : undefined,\n    onClick: onClick\n  }), definition.text, definition.external && React.createElement(\"span\", {\n    \"aria-label\": definition.externalIconAriaLabel,\n    role: definition.externalIconAriaLabel ? 'img' : undefined\n  }, React.createElement(InternalIcon, {\n    name: \"external\",\n    className: styles['external-icon']\n  }))), definition.info && React.createElement(\"span\", {\n    className: styles.info\n  }, definition.info));\n}\n\nfunction Section(_a) {\n  var _b;\n\n  var definition = _a.definition,\n      activeHref = _a.activeHref,\n      fireFollow = _a.fireFollow,\n      fireChange = _a.fireChange;\n\n  var _c = useState((_b = definition.defaultExpanded) !== null && _b !== void 0 ? _b : true),\n      expanded = _c[0],\n      setExpanded = _c[1];\n\n  var onExpandedChange = useCallback(function (e) {\n    fireChange(definition, e.detail.expanded);\n    setExpanded(e.detail.expanded);\n  }, [definition, fireChange]);\n  useEffect(function () {\n    var _a;\n\n    setExpanded((_a = definition.defaultExpanded) !== null && _a !== void 0 ? _a : true);\n  }, [definition]);\n  return React.createElement(InternalExpandableSection, {\n    variant: \"footer\",\n    expanded: expanded,\n    onChange: onExpandedChange,\n    className: styles.section,\n    header: definition.text\n  }, React.createElement(ItemList, {\n    variant: \"section\",\n    items: definition.items,\n    fireFollow: fireFollow,\n    fireChange: fireChange,\n    activeHref: activeHref\n  }));\n}\n\nfunction LinkGroup(_a) {\n  var definition = _a.definition,\n      activeHref = _a.activeHref,\n      fireFollow = _a.fireFollow,\n      fireChange = _a.fireChange;\n  checkSafeUrl('SideNavigation', definition.href);\n  return React.createElement(React.Fragment, null, React.createElement(Link, {\n    definition: {\n      type: 'link',\n      href: definition.href,\n      text: definition.text\n    },\n    fireFollow: function (_, event) {\n      return fireFollow(definition, event);\n    },\n    fireChange: fireChange,\n    activeHref: activeHref\n  }), React.createElement(ItemList, {\n    variant: \"link-group\",\n    items: definition.items,\n    fireFollow: fireFollow,\n    fireChange: fireChange,\n    activeHref: activeHref\n  }));\n}\n\nfunction ExpandableLinkGroup(_a) {\n  var definition = _a.definition,\n      fireFollow = _a.fireFollow,\n      fireChange = _a.fireChange,\n      activeHref = _a.activeHref; // Check whether the definition contains an active link and memoize it to avoid\n  // rechecking every time.\n\n  var containsActiveLink = useMemo(function () {\n    return activeHref ? hasActiveLink(definition.items, activeHref) : false;\n  }, [activeHref, definition.items]);\n\n  var _b = useState(function () {\n    var _a;\n\n    return (_a = definition.defaultExpanded) !== null && _a !== void 0 ? _a : definition.href === activeHref || containsActiveLink;\n  }),\n      expanded = _b[0],\n      setExpanded = _b[1];\n\n  var _c = useState(),\n      userExpanded = _c[0],\n      setUserExpanded = _c[1]; // Reset user expansion status when the items property is updated.\n\n\n  useEffect(function () {\n    return setUserExpanded(undefined);\n  }, [definition]); // By default, the expandable section is open when there's an active link inside.\n\n  useEffect(function () {\n    setExpanded(definition.href === activeHref || containsActiveLink);\n  }, [definition.href, containsActiveLink, activeHref]); // If the definition object itself is updated, reset the expansion state to default.\n\n  useEffect(function () {\n    if (definition.defaultExpanded !== undefined) {\n      setExpanded(definition.defaultExpanded);\n    }\n  }, [definition]);\n  var onExpandedChange = useCallback(function (e) {\n    fireChange(definition, e.detail.expanded);\n    setUserExpanded(e.detail.expanded);\n  }, [definition, fireChange]);\n\n  var onHeaderFollow = function (_, event) {\n    fireFollow(definition, event);\n    setUserExpanded(true);\n\n    if (!expanded) {\n      fireChange(definition, true);\n    }\n  };\n\n  return React.createElement(InternalExpandableSection, {\n    className: styles['expandable-link-group'],\n    variant: \"navigation\",\n    expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded,\n    onChange: onExpandedChange,\n    header: React.createElement(Link, {\n      definition: {\n        type: 'link',\n        href: definition.href,\n        text: definition.text\n      },\n      expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded,\n      fireFollow: onHeaderFollow,\n      fireChange: fireChange,\n      activeHref: activeHref\n    })\n  }, React.createElement(ItemList, {\n    variant: \"expandable-link-group\",\n    items: definition.items,\n    fireFollow: fireFollow,\n    fireChange: fireChange,\n    activeHref: activeHref\n  }));\n}","map":{"version":3,"mappings":"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","names":["React","useCallback","useState","useEffect","useMemo","clsx","InternalExpandableSection","InternalIcon","styles","isPlainLeftClick","useFocusVisible","hasActiveLink","checkSafeUrl","Header","_a","definition","activeHref","fireFollow","href","focusVisible","onClick","event","className","header","_b","logo","undefined","_c","text","Divider","variant","ItemList","items","fireChange","list","map","item","i","key","type","Link","Section","LinkGroup","ExpandableLinkGroup","divider","expanded","isActive","stopPropagation","link","target","external","rel","externalIconAriaLabel","role","name","info","defaultExpanded","setExpanded","onExpandedChange","e","detail","onChange","section","_","containsActiveLink","userExpanded","setUserExpanded","onHeaderFollow"],"sourceRoot":"","sources":["../../../src/side-navigation/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport clsx from 'clsx';\nimport { ExpandableSectionProps } from '../expandable-section/interfaces';\nimport InternalExpandableSection from '../expandable-section/internal';\nimport InternalIcon from '../icon/internal';\n\nimport { SideNavigationProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { NonCancelableCustomEvent, isPlainLeftClick } from '../internal/events';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { hasActiveLink } from './util';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\n\ninterface BaseItemComponentProps {\n  activeHref?: string;\n  fireChange: (item: SideNavigationProps.Section | SideNavigationProps.ExpandableLinkGroup, expanded: boolean) => void;\n  fireFollow: (\n    item:\n      | SideNavigationProps.Link\n      | SideNavigationProps.Header\n      | SideNavigationProps.LinkGroup\n      | SideNavigationProps.ExpandableLinkGroup,\n    event: React.SyntheticEvent | Event\n  ) => void;\n}\n\nexport interface HeaderProps extends BaseItemComponentProps {\n  definition: SideNavigationProps.Header;\n}\n\nexport function Header({ definition, activeHref, fireFollow }: HeaderProps) {\n  checkSafeUrl('SideNavigation', definition.href);\n  const focusVisible = useFocusVisible();\n\n  const onClick = useCallback(\n    (event: React.MouseEvent) => {\n      if (isPlainLeftClick(event)) {\n        fireFollow(definition, event);\n      }\n    },\n    [fireFollow, definition]\n  );\n\n  return (\n    <>\n      <div className={styles.header}>\n        <a\n          {...focusVisible}\n          href={definition.href}\n          className={clsx(styles['header-link'], { [styles['header-link--has-logo']]: !!definition.logo })}\n          aria-current={definition.href === activeHref ? 'page' : undefined}\n          onClick={onClick}\n        >\n          {definition.logo && (\n            <img\n              className={clsx(styles['header-logo'], {\n                [styles['header-logo--stretched']]: !definition.text,\n              })}\n              {...definition.logo}\n            />\n          )}\n          <span className={styles['header-link-text']}>{definition.text}</span>\n        </a>\n      </div>\n      <Divider variant=\"header\" />\n    </>\n  );\n}\n\nexport interface ItemListProps extends BaseItemComponentProps {\n  items: ReadonlyArray<SideNavigationProps.Item>;\n  variant: 'section' | 'link-group' | 'expandable-link-group' | 'root';\n}\n\nexport function ItemList({ variant, items, activeHref, fireChange, fireFollow }: ItemListProps) {\n  return (\n    <ul className={clsx(styles.list, styles[`list-variant-${variant}`])}>\n      {items.map((item, i) => (\n        <li key={i} className={styles['list-item']}>\n          {item.type === 'divider' && <Divider variant=\"default\" />}\n          {item.type === 'link' && (\n            <Link definition={item} activeHref={activeHref} fireChange={fireChange} fireFollow={fireFollow} />\n          )}\n          {item.type === 'section' && (\n            <Section definition={item} activeHref={activeHref} fireChange={fireChange} fireFollow={fireFollow} />\n          )}\n          {item.type === 'link-group' && (\n            <LinkGroup definition={item} activeHref={activeHref} fireChange={fireChange} fireFollow={fireFollow} />\n          )}\n          {item.type === 'expandable-link-group' && (\n            <ExpandableLinkGroup\n              definition={item}\n              activeHref={activeHref}\n              fireChange={fireChange}\n              fireFollow={fireFollow}\n            />\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\ninterface DividerProps {\n  variant: 'default' | 'header';\n}\n\nfunction Divider({ variant = 'default' }: DividerProps) {\n  return <hr className={clsx(styles.divider, styles[`divider-${variant}`])} />;\n}\n\ninterface LinkProps extends BaseItemComponentProps {\n  definition: SideNavigationProps.Link;\n  expanded?: boolean;\n}\n\nfunction Link({ definition, expanded, activeHref, fireFollow }: LinkProps) {\n  checkSafeUrl('SideNavigation', definition.href);\n  const isActive = definition.href === activeHref;\n  const focusVisible = useFocusVisible();\n\n  const onClick = useCallback(\n    (event: React.MouseEvent) => {\n      // Prevent the click event from toggling outer expandable sections.\n      event.stopPropagation();\n\n      if (isPlainLeftClick(event)) {\n        fireFollow(definition, event);\n      }\n    },\n    [fireFollow, definition]\n  );\n\n  return (\n    <>\n      {/* https://github.com/yannickcr/eslint-plugin-react/issues/2962 */}\n      {/* eslint-disable-next-line react/jsx-no-target-blank */}\n      <a\n        {...focusVisible}\n        href={definition.href}\n        className={clsx(styles.link, { [styles['link-active']]: isActive })}\n        target={definition.external ? '_blank' : undefined}\n        rel={definition.external ? 'noopener noreferrer' : undefined}\n        aria-expanded={expanded}\n        aria-current={definition.href === activeHref ? 'page' : undefined}\n        onClick={onClick}\n      >\n        {definition.text}\n        {definition.external && (\n          <span\n            aria-label={definition.externalIconAriaLabel}\n            role={definition.externalIconAriaLabel ? 'img' : undefined}\n          >\n            <InternalIcon name=\"external\" className={styles['external-icon']} />\n          </span>\n        )}\n      </a>\n      {definition.info && <span className={styles.info}>{definition.info}</span>}\n    </>\n  );\n}\n\ninterface SectionProps extends BaseItemComponentProps {\n  definition: SideNavigationProps.Section;\n}\n\nfunction Section({ definition, activeHref, fireFollow, fireChange }: SectionProps) {\n  const [expanded, setExpanded] = useState<boolean>(definition.defaultExpanded ?? true);\n\n  const onExpandedChange = useCallback(\n    (e: NonCancelableCustomEvent<ExpandableSectionProps.ChangeDetail>) => {\n      fireChange(definition, e.detail.expanded);\n      setExpanded(e.detail.expanded);\n    },\n    [definition, fireChange]\n  );\n\n  useEffect(() => {\n    setExpanded(definition.defaultExpanded ?? true);\n  }, [definition]);\n\n  return (\n    <InternalExpandableSection\n      variant=\"footer\"\n      expanded={expanded}\n      onChange={onExpandedChange}\n      className={styles.section}\n      header={definition.text}\n    >\n      <ItemList\n        variant=\"section\"\n        items={definition.items}\n        fireFollow={fireFollow}\n        fireChange={fireChange}\n        activeHref={activeHref}\n      />\n    </InternalExpandableSection>\n  );\n}\n\ninterface LinkGroupProps extends BaseItemComponentProps {\n  definition: SideNavigationProps.LinkGroup;\n}\n\nfunction LinkGroup({ definition, activeHref, fireFollow, fireChange }: LinkGroupProps) {\n  checkSafeUrl('SideNavigation', definition.href);\n\n  return (\n    <>\n      <Link\n        definition={{ type: 'link', href: definition.href, text: definition.text }}\n        fireFollow={(_, event) => fireFollow(definition, event)}\n        fireChange={fireChange}\n        activeHref={activeHref}\n      />\n      <ItemList\n        variant=\"link-group\"\n        items={definition.items}\n        fireFollow={fireFollow}\n        fireChange={fireChange}\n        activeHref={activeHref}\n      />\n    </>\n  );\n}\n\ninterface ExpandableLinkGroupProps extends BaseItemComponentProps {\n  definition: SideNavigationProps.ExpandableLinkGroup;\n}\n\nfunction ExpandableLinkGroup({ definition, fireFollow, fireChange, activeHref }: ExpandableLinkGroupProps) {\n  // Check whether the definition contains an active link and memoize it to avoid\n  // rechecking every time.\n  const containsActiveLink = useMemo(() => {\n    return activeHref ? hasActiveLink(definition.items, activeHref) : false;\n  }, [activeHref, definition.items]);\n\n  const [expanded, setExpanded] = useState<boolean>(() => {\n    return definition.defaultExpanded ?? (definition.href === activeHref || containsActiveLink);\n  });\n\n  const [userExpanded, setUserExpanded] = useState<boolean | undefined>();\n\n  // Reset user expansion status when the items property is updated.\n  useEffect(() => setUserExpanded(undefined), [definition]);\n\n  // By default, the expandable section is open when there's an active link inside.\n  useEffect(() => {\n    setExpanded(definition.href === activeHref || containsActiveLink);\n  }, [definition.href, containsActiveLink, activeHref]);\n\n  // If the definition object itself is updated, reset the expansion state to default.\n  useEffect(() => {\n    if (definition.defaultExpanded !== undefined) {\n      setExpanded(definition.defaultExpanded);\n    }\n  }, [definition]);\n\n  const onExpandedChange = useCallback(\n    (e: NonCancelableCustomEvent<ExpandableSectionProps.ChangeDetail>) => {\n      fireChange(definition, e.detail.expanded);\n      setUserExpanded(e.detail.expanded);\n    },\n    [definition, fireChange]\n  );\n\n  const onHeaderFollow: LinkProps['fireFollow'] = (_, event) => {\n    fireFollow(definition, event);\n    setUserExpanded(true);\n    if (!expanded) {\n      fireChange(definition, true);\n    }\n  };\n\n  return (\n    <InternalExpandableSection\n      className={styles['expandable-link-group']}\n      variant=\"navigation\"\n      expanded={userExpanded ?? expanded}\n      onChange={onExpandedChange}\n      header={\n        <Link\n          definition={{ type: 'link', href: definition.href, text: definition.text }}\n          expanded={userExpanded ?? expanded}\n          fireFollow={onHeaderFollow}\n          fireChange={fireChange}\n          activeHref={activeHref}\n        />\n      }\n    >\n      <ItemList\n        variant=\"expandable-link-group\"\n        items={definition.items}\n        fireFollow={fireFollow}\n        fireChange={fireChange}\n        activeHref={activeHref}\n      />\n    </InternalExpandableSection>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}