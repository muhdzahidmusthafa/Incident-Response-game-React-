{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport clsx from 'clsx';\nimport InternalSpaceBetween from '../space-between/internal';\nimport Filter from '../internal/components/chart-filter';\nimport { chartLegendMap } from './utils';\nimport styles from './styles.css.js';\nexport default function InternalChartFilters(_a) {\n  var _b;\n\n  var series = _a.series,\n      visibleSeries = _a.visibleSeries,\n      onChange = _a.onChange,\n      i18nStrings = _a.i18nStrings,\n      hideFilter = _a.hideFilter,\n      additionalFilters = _a.additionalFilters;\n  var filterItems = useMemo(function () {\n    return series.map(function (_a) {\n      var series = _a.series,\n          color = _a.color;\n      return {\n        label: series.title,\n        type: chartLegendMap[series.type],\n        color: color,\n        datum: series\n      };\n    });\n  }, [series]);\n  return React.createElement(InternalSpaceBetween, {\n    size: \"l\",\n    direction: \"horizontal\",\n    className: clsx((_b = {}, _b[styles['has-default-filter']] = !hideFilter, _b))\n  }, !hideFilter && React.createElement(Filter, {\n    series: filterItems,\n    onChange: onChange,\n    selectedSeries: visibleSeries,\n    i18nStrings: i18nStrings\n  }), additionalFilters);\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,MAAP,MAAyC,qCAAzC;AAGA,SAASC,cAAT,QAA+B,SAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAWA,eAAc,SAAUC,oBAAV,CAAiEC,EAAjE,EAOiB;;;MAN7BC,MAAM;MACNC,aAAa;MACbC,QAAQ;MACRC,WAAW;MACXC,UAAU;MACVC,iBAAiB;EAEjB,IAAMC,WAAW,GAAsEd,OAAO,CAC5F;IACE,aAAM,CAACe,GAAP,CAAW,UAACR,EAAD,EAAkB;UAAfC,MAAM;UAAEQ,KAAK;MAAO,OAAC;QACjCC,KAAK,EAAET,MAAM,CAACU,KADmB;QAEjCC,IAAI,EAAEf,cAAc,CAACI,MAAM,CAACW,IAAR,CAFa;QAGjCH,KAAK,OAH4B;QAIjCI,KAAK,EAAEZ;MAJ0B,CAAD;IAKhC,CALF;EAKG,CAPuF,EAQ5F,CAACA,MAAD,CAR4F,CAA9F;EAWA,OACET,oBAACG,oBAAD,EAAqB;IACnBmB,IAAI,EAAC,GADc;IAEnBC,SAAS,EAAC,YAFS;IAGnBC,SAAS,EAAEtB,IAAI,WACbuB,GAACnB,MAAM,CAAC,oBAAD,CAAP,IAAgC,CAACO,UADpB;EAHI,CAArB,EAOG,CAACA,UAAD,IACCb,oBAACI,MAAD,EAAO;IAACK,MAAM,EAAEM,WAAT;IAAsBJ,QAAQ,EAAEA,QAAhC;IAA0Ce,cAAc,EAAEhB,aAA1D;IAAyEE,WAAW,EAAEA;EAAtF,CAAP,CARJ,EAUGE,iBAVH,CADF;AAcD","names":["React","useMemo","clsx","InternalSpaceBetween","Filter","chartLegendMap","styles","InternalChartFilters","_a","series","visibleSeries","onChange","i18nStrings","hideFilter","additionalFilters","filterItems","map","color","label","title","type","datum","size","direction","className","_b","selectedSeries"],"sourceRoot":"","sources":["../../../src/mixed-line-bar-chart/chart-filters.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport clsx from 'clsx';\n\nimport InternalSpaceBetween from '../space-between/internal';\nimport Filter, { ChartFilterProps } from '../internal/components/chart-filter';\n\nimport { ChartDataTypes, MixedLineBarChartProps, InternalChartSeries } from './interfaces';\nimport { chartLegendMap } from './utils';\nimport styles from './styles.css.js';\n\ninterface InternalChartFiltersProps<T extends ChartDataTypes> {\n  series: ReadonlyArray<InternalChartSeries<T>>;\n  visibleSeries: ReadonlyArray<MixedLineBarChartProps.ChartSeries<T>>;\n  onChange: (selectedSeries: ReadonlyArray<MixedLineBarChartProps.ChartSeries<T>>) => void;\n  i18nStrings: MixedLineBarChartProps<T>['i18nStrings'];\n  hideFilter?: boolean;\n  additionalFilters?: React.ReactNode;\n}\n\nexport default function InternalChartFilters<T extends number | string | Date>({\n  series,\n  visibleSeries,\n  onChange,\n  i18nStrings,\n  hideFilter,\n  additionalFilters,\n}: InternalChartFiltersProps<T>) {\n  const filterItems: ChartFilterProps<MixedLineBarChartProps.ChartSeries<T>>['series'] = useMemo(\n    () =>\n      series.map(({ series, color }) => ({\n        label: series.title,\n        type: chartLegendMap[series.type],\n        color,\n        datum: series,\n      })),\n    [series]\n  );\n\n  return (\n    <InternalSpaceBetween\n      size=\"l\"\n      direction=\"horizontal\"\n      className={clsx({\n        [styles['has-default-filter']]: !hideFilter,\n      })}\n    >\n      {!hideFilter && (\n        <Filter series={filterItems} onChange={onChange} selectedSeries={visibleSeries} i18nStrings={i18nStrings} />\n      )}\n      {additionalFilters}\n    </InternalSpaceBetween>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}