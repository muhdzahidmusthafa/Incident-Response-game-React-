{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef, useEffect } from 'react';\nimport { fireNonCancelableEvent } from '../events';\nimport FocusTracker from '../focus-tracker';\nexport var useFocusTracker = function (_a) {\n  var rootRef = _a.rootRef,\n      onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      viewportId = _a.viewportId;\n  var focusTracker = useRef(null);\n  useEffect(function () {\n    if (!rootRef.current) {\n      return;\n    }\n\n    focusTracker.current = new FocusTracker(rootRef.current, {\n      onFocusLeave: function () {\n        fireNonCancelableEvent(onBlur);\n      },\n      onFocusEnter: function () {\n        fireNonCancelableEvent(onFocus);\n      }\n    }, viewportId);\n    focusTracker.current.initialize();\n    return function () {\n      var _a;\n\n      (_a = focusTracker.current) === null || _a === void 0 ? void 0 : _a.destroy();\n    };\n  }, [rootRef, onBlur, onFocus, viewportId]);\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,MAAT,EAAiBC,SAAjB,QAAoD,OAApD;AACA,SAAoCC,sBAApC,QAAkE,WAAlE;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAWA,OAAO,IAAMC,eAAe,GAAoB,UAACC,EAAD,EAAyC;MAAtCC,OAAO;MAAEC,MAAM;MAAEC,OAAO;MAAEC,UAAU;EACrF,IAAMC,YAAY,GAAGV,MAAM,CAAsB,IAAtB,CAA3B;EAEAC,SAAS,CAAC;IACR,IAAI,CAACK,OAAO,CAACK,OAAb,EAAsB;MACpB;IACD;;IACDD,YAAY,CAACC,OAAb,GAAuB,IAAIR,YAAJ,CACrBG,OAAO,CAACK,OADa,EAErB;MACEC,YAAY,EAAE;QACZV,sBAAsB,CAACK,MAAD,CAAtB;MACD,CAHH;MAIEM,YAAY,EAAE;QACZX,sBAAsB,CAACM,OAAD,CAAtB;MACD;IANH,CAFqB,EAUrBC,UAVqB,CAAvB;IAYAC,YAAY,CAACC,OAAb,CAAqBG,UAArB;IACA,OAAO;;;MACL,kBAAY,CAACH,OAAb,MAAoB,IAApB,IAAoBN,aAApB,GAAoB,MAApB,GAAoBA,GAAEU,OAAF,EAApB;IACD,CAFD;EAGD,CApBQ,EAoBN,CAACT,OAAD,EAAUC,MAAV,EAAkBC,OAAlB,EAA2BC,UAA3B,CApBM,CAAT;AAqBD,CAxBM","names":["useRef","useEffect","fireNonCancelableEvent","FocusTracker","useFocusTracker","_a","rootRef","onBlur","onFocus","viewportId","focusTracker","current","onFocusLeave","onFocusEnter","initialize","destroy"],"sourceRoot":"","sources":["../../../../src/internal/hooks/use-focus-tracker.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef, useEffect, MutableRefObject } from 'react';\nimport { NonCancelableEventHandler, fireNonCancelableEvent } from '../events';\nimport FocusTracker from '../focus-tracker';\n\ninterface UseFocusTracker {\n  (inputProps: {\n    onBlur?: NonCancelableEventHandler<any>;\n    onFocus?: NonCancelableEventHandler<any>;\n    rootRef: MutableRefObject<HTMLElement | null>;\n    viewportId?: string;\n  }): void;\n}\n\nexport const useFocusTracker: UseFocusTracker = ({ rootRef, onBlur, onFocus, viewportId }) => {\n  const focusTracker = useRef<FocusTracker | null>(null);\n\n  useEffect(() => {\n    if (!rootRef.current) {\n      return;\n    }\n    focusTracker.current = new FocusTracker(\n      rootRef.current,\n      {\n        onFocusLeave: () => {\n          fireNonCancelableEvent(onBlur);\n        },\n        onFocusEnter: () => {\n          fireNonCancelableEvent(onFocus);\n        },\n      },\n      viewportId\n    );\n    focusTracker.current.initialize();\n    return () => {\n      focusTracker.current?.destroy();\n    };\n  }, [rootRef, onBlur, onFocus, viewportId]);\n};\n"]},"metadata":{},"sourceType":"module"}