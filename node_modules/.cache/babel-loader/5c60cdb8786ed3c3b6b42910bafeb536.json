{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport flattenChildren from 'react-keyed-flatten-children';\nimport { getBaseProps } from '../internal/base-component';\nimport { matchBreakpointMapping } from '../internal/breakpoints';\nimport { isDevelopment } from '../internal/is-development';\nimport * as logging from '../internal/logging';\nimport styles from './styles.css.js';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nvar InternalGrid = React.forwardRef(function (_a, ref) {\n  var _b;\n\n  var __breakpoint = _a.__breakpoint,\n      _c = _a.gridDefinition,\n      gridDefinition = _c === void 0 ? [] : _c,\n      _d = _a.disableGutters,\n      disableGutters = _d === void 0 ? false : _d,\n      children = _a.children,\n      __responsiveClassName = _a.__responsiveClassName,\n      _e = _a.__internalRootRef,\n      __internalRootRef = _e === void 0 ? null : _e,\n      restProps = __rest(_a, [\"__breakpoint\", \"gridDefinition\", \"disableGutters\", \"children\", \"__responsiveClassName\", \"__internalRootRef\"]);\n\n  var _f = useContainerBreakpoints(undefined),\n      defaultBreakpoint = _f[0],\n      defaultRef = _f[1];\n\n  if (__breakpoint !== undefined) {\n    defaultBreakpoint = __breakpoint;\n    defaultRef = ref;\n  }\n\n  var baseProps = getBaseProps(restProps);\n  /*\n  Flattening the children allows us to \"see through\" React Fragments and nested arrays.\n  */\n\n  var flattenedChildren = flattenChildren(children);\n\n  if (isDevelopment) {\n    var columnCount = gridDefinition.length;\n    var childCount = flattenedChildren.length;\n\n    if (columnCount !== childCount) {\n      logging.warnOnce('Grid', \"The number of children (\".concat(childCount, \") does not match the number of columns defined (\").concat(columnCount, \").\"));\n    }\n  }\n\n  var mergedRef = useMergeRefs(defaultRef, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(styles.grid, baseProps.className, (_b = {}, _b[styles['no-gutters']] = disableGutters, _b), __responsiveClassName ? __responsiveClassName(defaultBreakpoint) : null),\n    ref: mergedRef\n  }), flattenedChildren.map(function (child, i) {\n    var _a, _b, _c, _d; // If this react child is a primitive value, the key will be undefined\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    var key = child.key;\n    return React.createElement(\"div\", {\n      key: key,\n      className: clsx(styles['grid-column'], getColumnClassNames('colspan', (_a = gridDefinition[i]) === null || _a === void 0 ? void 0 : _a.colspan, defaultBreakpoint), getColumnClassNames('offset', (_b = gridDefinition[i]) === null || _b === void 0 ? void 0 : _b.offset, defaultBreakpoint), getColumnClassNames('pull', (_c = gridDefinition[i]) === null || _c === void 0 ? void 0 : _c.pull, defaultBreakpoint), getColumnClassNames('push', (_d = gridDefinition[i]) === null || _d === void 0 ? void 0 : _d.push, defaultBreakpoint))\n    }, React.createElement(\"div\", {\n      className: styles['restore-pointer-events']\n    }, child));\n  }));\n});\n\nfunction getColumnClassNames(prop, mapping, breakpoint) {\n  if (typeof mapping === 'number') {\n    return styles[\"\".concat(prop, \"-\").concat(mapping)];\n  }\n\n  if (breakpoint === null || mapping === undefined) {\n    return null;\n  }\n\n  return styles[\"\".concat(prop, \"-\").concat(matchBreakpointMapping(mapping, breakpoint))];\n}\n\nexport default InternalGrid;","map":{"version":3,"mappings":"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","names":["React","clsx","flattenChildren","getBaseProps","matchBreakpointMapping","isDevelopment","logging","styles","useContainerBreakpoints","useMergeRefs","InternalGrid","forwardRef","_a","ref","_c","gridDefinition","_d","disableGutters","children","__responsiveClassName","_e","__internalRootRef","restProps","undefined","defaultBreakpoint","defaultRef","__breakpoint","baseProps","flattenedChildren","columnCount","length","childCount","warnOnce","concat","mergedRef","className","grid","_b","map","child","i","key","getColumnClassNames","colspan","offset","pull","push","prop","mapping","breakpoint"],"sourceRoot":"","sources":["../../../src/grid/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx, { ClassValue } from 'clsx';\nimport flattenChildren from 'react-keyed-flatten-children';\nimport { getBaseProps } from '../internal/base-component';\nimport { Breakpoint, matchBreakpointMapping } from '../internal/breakpoints';\nimport { isDevelopment } from '../internal/is-development';\nimport * as logging from '../internal/logging';\nimport styles from './styles.css.js';\nimport { GridProps } from './interfaces';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nexport interface InternalGridProps extends GridProps, InternalBaseComponentProps {\n  __breakpoint?: Breakpoint | null;\n\n  /**\n   * The handler that fires when the grid breakpoint changes.\n   */\n  __responsiveClassName?: (breakpoint: Breakpoint | null) => ClassValue;\n}\n\nconst InternalGrid = React.forwardRef(\n  (\n    {\n      __breakpoint,\n      gridDefinition = [],\n      disableGutters = false,\n      children,\n      __responsiveClassName,\n      __internalRootRef = null,\n      ...restProps\n    }: InternalGridProps,\n    ref: React.Ref<any>\n  ) => {\n    let [defaultBreakpoint, defaultRef]: [Breakpoint | null, React.Ref<any>] = useContainerBreakpoints(undefined);\n    if (__breakpoint !== undefined) {\n      defaultBreakpoint = __breakpoint;\n      defaultRef = ref;\n    }\n\n    const baseProps = getBaseProps(restProps);\n    /*\n   Flattening the children allows us to \"see through\" React Fragments and nested arrays.\n   */\n    const flattenedChildren = flattenChildren(children);\n\n    if (isDevelopment) {\n      const columnCount = gridDefinition.length;\n      const childCount = flattenedChildren.length;\n      if (columnCount !== childCount) {\n        logging.warnOnce(\n          'Grid',\n          `The number of children (${childCount}) does not match the number of columns defined (${columnCount}).`\n        );\n      }\n    }\n\n    const mergedRef = useMergeRefs(defaultRef, __internalRootRef);\n\n    return (\n      <div\n        {...baseProps}\n        className={clsx(\n          styles.grid,\n          baseProps.className,\n          { [styles['no-gutters']]: disableGutters },\n          __responsiveClassName ? __responsiveClassName(defaultBreakpoint) : null\n        )}\n        ref={mergedRef}\n      >\n        {flattenedChildren.map((child, i) => {\n          // If this react child is a primitive value, the key will be undefined\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const key = (child as any).key;\n\n          return (\n            <div\n              key={key}\n              className={clsx(\n                styles['grid-column'],\n                getColumnClassNames('colspan', gridDefinition[i]?.colspan, defaultBreakpoint),\n                getColumnClassNames('offset', gridDefinition[i]?.offset, defaultBreakpoint),\n                getColumnClassNames('pull', gridDefinition[i]?.pull, defaultBreakpoint),\n                getColumnClassNames('push', gridDefinition[i]?.push, defaultBreakpoint)\n              )}\n            >\n              <div className={styles['restore-pointer-events']}>{child}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nfunction getColumnClassNames(\n  prop: string,\n  mapping: undefined | number | GridProps.BreakpointMapping,\n  breakpoint: Breakpoint | null\n): string | null {\n  if (typeof mapping === 'number') {\n    return styles[`${prop}-${mapping}`];\n  }\n  if (breakpoint === null || mapping === undefined) {\n    return null;\n  }\n  return styles[`${prop}-${matchBreakpointMapping(mapping, breakpoint)}`];\n}\n\nexport default InternalGrid;\n"]},"metadata":{},"sourceType":"module"}