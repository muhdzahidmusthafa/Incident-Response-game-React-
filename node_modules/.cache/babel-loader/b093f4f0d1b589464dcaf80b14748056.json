{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport { useContainerQuery } from '../../internal/hooks/container-queries';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\n\nfunction getScrollableContainers(element) {\n  var node = element;\n\n  while ((node = node.parentElement) && node !== document.body) {\n    if (['scroll', 'auto'].indexOf(getComputedStyle(node).overflow) > -1) {\n      return node;\n    }\n  }\n\n  return null;\n}\n\nexport function useStickyPosition(topOffset) {\n  if (topOffset === void 0) {\n    topOffset = 0;\n  }\n\n  var _a = useContainerQuery(function (rect) {\n    return rect.height;\n  }),\n      stickyHeight = _a[0],\n      stickyMeasureRef = _a[1];\n\n  var stickyRefObject = useRef(null);\n  var stickyRef = useMergeRefs(stickyMeasureRef, stickyRefObject);\n\n  var _b = useContainerQuery(function (rect) {\n    return rect.width;\n  }),\n      stickyWidth = _b[0],\n      placeholderMeasureRef = _b[1];\n\n  var placeholderRefObject = useRef(null);\n  var placeholderRef = useMergeRefs(placeholderMeasureRef, placeholderRefObject);\n  var placeholder = React.createElement(\"div\", {\n    ref: placeholderRef\n  });\n  useEffect(function () {\n    if (!stickyRefObject.current || !placeholderRefObject.current) {\n      return;\n    }\n\n    var stickyElement = stickyRefObject.current;\n    var placeholder = placeholderRefObject.current;\n    var scrollParent = getScrollableContainers(stickyElement);\n\n    var handler = function () {\n      var stickyBox = stickyElement.getBoundingClientRect();\n      var containerBox = scrollParent ? scrollParent.getBoundingClientRect() : {\n        top: 0\n      };\n\n      if (stickyBox.top - containerBox.top <= topOffset) {\n        stickyElement.style.position = 'fixed';\n        stickyElement.style.width = \"\".concat(stickyWidth, \"px\");\n        stickyElement.style.top = \"\".concat(topOffset, \"px\");\n        placeholder.style.height = \"\".concat(stickyHeight, \"px\");\n      } else {\n        stickyElement.style.position = '';\n        stickyElement.style.width = \"\";\n        stickyElement.style.top = \"\";\n        placeholder.style.height = \"\";\n      }\n    };\n\n    var eventTarget = scrollParent || window;\n    eventTarget.addEventListener('scroll', handler);\n    handler();\n    return function () {\n      return eventTarget.removeEventListener('scroll', handler);\n    };\n  }, [topOffset, stickyWidth, stickyHeight, stickyRefObject, placeholderRefObject]);\n  return [stickyRef, placeholder];\n}","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","useContainerQuery","useMergeRefs","getScrollableContainers","element","node","parentElement","document","body","indexOf","getComputedStyle","overflow","useStickyPosition","topOffset","height","stickyHeight","stickyMeasureRef","stickyRefObject","stickyRef","width","stickyWidth","placeholderMeasureRef","placeholderRefObject","placeholderRef","placeholder","ref","current","stickyElement","scrollParent","handler","stickyBox","getBoundingClientRect","containerBox","top","style","position","eventTarget","window","addEventListener","removeEventListener"],"sourceRoot":"","sources":["../../../../src/app-layout/utils/use-sticky-position.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport { useContainerQuery } from '../../internal/hooks/container-queries';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\n\nfunction getScrollableContainers(element: HTMLElement) {\n  let node: HTMLElement | null = element;\n\n  while ((node = node.parentElement) && node !== document.body) {\n    if (['scroll', 'auto'].indexOf(getComputedStyle(node).overflow) > -1) {\n      return node;\n    }\n  }\n  return null;\n}\n\nexport function useStickyPosition(topOffset = 0) {\n  const [stickyHeight, stickyMeasureRef] = useContainerQuery(rect => rect.height);\n  const stickyRefObject = useRef<HTMLDivElement>(null);\n  const stickyRef = useMergeRefs(stickyMeasureRef, stickyRefObject);\n\n  const [stickyWidth, placeholderMeasureRef] = useContainerQuery(rect => rect.width);\n  const placeholderRefObject = useRef<HTMLDivElement>(null);\n  const placeholderRef = useMergeRefs(placeholderMeasureRef, placeholderRefObject);\n\n  const placeholder = <div ref={placeholderRef} />;\n\n  useEffect(() => {\n    if (!stickyRefObject.current || !placeholderRefObject.current) {\n      return;\n    }\n    const stickyElement = stickyRefObject.current;\n    const placeholder = placeholderRefObject.current;\n    const scrollParent = getScrollableContainers(stickyElement);\n    const handler = () => {\n      const stickyBox = stickyElement.getBoundingClientRect();\n      const containerBox = scrollParent ? scrollParent.getBoundingClientRect() : { top: 0 };\n      if (stickyBox.top - containerBox.top <= topOffset) {\n        stickyElement.style.position = 'fixed';\n        stickyElement.style.width = `${stickyWidth}px`;\n        stickyElement.style.top = `${topOffset}px`;\n        placeholder.style.height = `${stickyHeight}px`;\n      } else {\n        stickyElement.style.position = '';\n        stickyElement.style.width = ``;\n        stickyElement.style.top = ``;\n        placeholder.style.height = ``;\n      }\n    };\n    const eventTarget = scrollParent || window;\n    eventTarget.addEventListener('scroll', handler);\n    handler();\n    return () => eventTarget.removeEventListener('scroll', handler);\n  }, [topOffset, stickyWidth, stickyHeight, stickyRefObject, placeholderRefObject]);\n\n  return [stickyRef, placeholder] as const;\n}\n"]},"metadata":{},"sourceType":"module"}