{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React from 'react';\nimport InternalIcon from '../../icon/internal';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport { KeyCode } from '../../internal/keycode';\nimport { getAriaSort, getSortingIconName, getSortingStatus, isSorted } from './utils';\nimport styles from './styles.css.js';\nexport function TableHeaderCell(_a) {\n  var _b, _c, _d;\n\n  var className = _a.className,\n      style = _a.style,\n      tabIndex = _a.tabIndex,\n      column = _a.column,\n      activeSortingColumn = _a.activeSortingColumn,\n      sortingDescending = _a.sortingDescending,\n      sortingDisabled = _a.sortingDisabled,\n      wrapLines = _a.wrapLines,\n      resizer = _a.resizer,\n      showFocusRing = _a.showFocusRing,\n      onClick = _a.onClick,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur;\n  var focusVisible = useFocusVisible();\n  var sortable = !!column.sortingComparator || !!column.sortingField;\n  var sorted = !!activeSortingColumn && isSorted(column, activeSortingColumn);\n  var sortingStatus = getSortingStatus(sortable, sorted, !!sortingDescending, !!sortingDisabled);\n\n  var handleClick = function () {\n    return onClick({\n      sortingColumn: column,\n      isDescending: sorted ? !sortingDescending : false\n    });\n  }; // Elements with role=\"button\" do not have the default behavior of <button>, where pressing\n  // Enter or Space will trigger a click event. Therefore we need to add this ourselves.\n  // The native <button> element cannot be used due to a misaligned implementation in Firefox:\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=843003\n\n\n  var handleKeyPress = function (_a) {\n    var e = _a.nativeEvent;\n\n    if (e.keyCode === KeyCode.enter || e.keyCode === KeyCode.space) {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  return React.createElement(\"th\", {\n    className: clsx(className, (_b = {}, _b[styles['header-cell-sortable']] = sortingStatus, _b[styles['header-cell-sorted']] = sortingStatus === 'ascending' || sortingStatus === 'descending', _b[styles['header-cell-disabled']] = sortingDisabled, _b[styles['header-cell-ascending']] = sortingStatus === 'ascending', _b[styles['header-cell-descending']] = sortingStatus === 'descending', _b)),\n    \"aria-sort\": sortingStatus && getAriaSort(sortingStatus),\n    style: style\n  }, React.createElement(\"div\", __assign({\n    className: clsx(styles['header-cell-content'], (_c = {}, _c[styles['header-cell-fake-focus']] = showFocusRing && focusVisible['data-awsui-focus-visible'], _c)),\n    \"aria-label\": column.ariaLabel ? column.ariaLabel({\n      sorted: sorted,\n      descending: sorted && !!sortingDescending,\n      disabled: !!sortingDisabled\n    }) : undefined\n  }, sortingDisabled || !sortingStatus ? (_d = {}, _d['aria-disabled'] = 'true', _d) : __assign(__assign({\n    onKeyPress: handleKeyPress,\n    tabIndex: tabIndex,\n    role: 'button'\n  }, focusVisible), {\n    onClick: handleClick,\n    onFocus: onFocus,\n    onBlur: onBlur\n  })), React.createElement(\"div\", {\n    className: clsx(styles['header-cell-text'], wrapLines && styles['header-cell-text-wrap'])\n  }, column.header), sortingStatus && React.createElement(\"span\", {\n    className: styles['sorting-icon']\n  }, React.createElement(InternalIcon, {\n    name: getSortingIconName(sortingStatus)\n  }))), resizer);\n}","map":{"version":3,"mappings":"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","names":["clsx","React","InternalIcon","useFocusVisible","KeyCode","getAriaSort","getSortingIconName","getSortingStatus","isSorted","styles","TableHeaderCell","_a","className","style","tabIndex","column","activeSortingColumn","sortingDescending","sortingDisabled","wrapLines","resizer","showFocusRing","onClick","onFocus","onBlur","focusVisible","sortable","sortingComparator","sortingField","sorted","sortingStatus","handleClick","sortingColumn","isDescending","handleKeyPress","e","keyCode","enter","space","preventDefault","_b","_c","ariaLabel","descending","disabled","undefined","_d","__assign","onKeyPress","role","header","name"],"sourceRoot":"","sources":["../../../../src/table/header-cell/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport InternalIcon from '../../icon/internal';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport { KeyCode } from '../../internal/keycode';\nimport { TableProps } from '../interfaces';\nimport { getAriaSort, getSortingIconName, getSortingStatus, isSorted } from './utils';\nimport styles from './styles.css.js';\n\ninterface TableHeaderCellProps {\n  className?: string;\n  style?: React.CSSProperties;\n  tabIndex: number;\n  column: TableProps.ColumnDefinition<any>;\n  activeSortingColumn: TableProps.SortingColumn<any> | undefined;\n  sortingDescending: boolean | undefined;\n  sortingDisabled: boolean | undefined;\n  wrapLines: boolean | undefined;\n  resizer: React.ReactNode;\n  showFocusRing: boolean;\n  onClick(detail: TableProps.SortingState<any>): void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\nexport function TableHeaderCell({\n  className,\n  style,\n  tabIndex,\n  column,\n  activeSortingColumn,\n  sortingDescending,\n  sortingDisabled,\n  wrapLines,\n  resizer,\n  showFocusRing,\n  onClick,\n  onFocus,\n  onBlur,\n}: TableHeaderCellProps) {\n  const focusVisible = useFocusVisible();\n  const sortable = !!column.sortingComparator || !!column.sortingField;\n  const sorted = !!activeSortingColumn && isSorted(column, activeSortingColumn);\n  const sortingStatus = getSortingStatus(sortable, sorted, !!sortingDescending, !!sortingDisabled);\n  const handleClick = () =>\n    onClick({\n      sortingColumn: column,\n      isDescending: sorted ? !sortingDescending : false,\n    });\n\n  // Elements with role=\"button\" do not have the default behavior of <button>, where pressing\n  // Enter or Space will trigger a click event. Therefore we need to add this ourselves.\n  // The native <button> element cannot be used due to a misaligned implementation in Firefox:\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=843003\n  const handleKeyPress = ({ nativeEvent: e }: React.KeyboardEvent) => {\n    if (e.keyCode === KeyCode.enter || e.keyCode === KeyCode.space) {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  return (\n    <th\n      className={clsx(className, {\n        [styles['header-cell-sortable']]: sortingStatus,\n        [styles['header-cell-sorted']]: sortingStatus === 'ascending' || sortingStatus === 'descending',\n        [styles['header-cell-disabled']]: sortingDisabled,\n        [styles['header-cell-ascending']]: sortingStatus === 'ascending',\n        [styles['header-cell-descending']]: sortingStatus === 'descending',\n      })}\n      aria-sort={sortingStatus && getAriaSort(sortingStatus)}\n      style={style}\n    >\n      <div\n        className={clsx(styles['header-cell-content'], {\n          [styles['header-cell-fake-focus']]: showFocusRing && focusVisible['data-awsui-focus-visible'],\n        })}\n        aria-label={\n          column.ariaLabel\n            ? column.ariaLabel({\n                sorted: sorted,\n                descending: sorted && !!sortingDescending,\n                disabled: !!sortingDisabled,\n              })\n            : undefined\n        }\n        {...(sortingDisabled || !sortingStatus\n          ? { ['aria-disabled']: 'true' }\n          : {\n              onKeyPress: handleKeyPress,\n              tabIndex: tabIndex,\n              role: 'button',\n              ...focusVisible,\n              onClick: handleClick,\n              onFocus,\n              onBlur,\n            })}\n      >\n        <div className={clsx(styles['header-cell-text'], wrapLines && styles['header-cell-text-wrap'])}>\n          {column.header}\n        </div>\n        {sortingStatus && (\n          <span className={styles['sorting-icon']}>\n            <InternalIcon name={getSortingIconName(sortingStatus)} />\n          </span>\n        )}\n      </div>\n      {resizer}\n    </th>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}