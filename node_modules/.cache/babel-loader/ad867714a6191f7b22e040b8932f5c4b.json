{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport Thead from './thead';\nimport { useStickyHeader } from './use-sticky-header';\nimport styles from './styles.css.js';\nexport default forwardRef(StickyHeader);\n\nfunction StickyHeader(_a, ref) {\n  var _b;\n\n  var variant = _a.variant,\n      theadProps = _a.theadProps,\n      wrapperRef = _a.wrapperRef,\n      theadRef = _a.theadRef,\n      secondaryWrapperRef = _a.secondaryWrapperRef,\n      onScroll = _a.onScroll,\n      tableRef = _a.tableRef;\n  var secondaryTheadRef = useRef(null);\n  var secondaryTableRef = useRef(null);\n  var isStuck = useContext(StickyHeaderContext).isStuck;\n\n  var _c = useState(null),\n      focusedColumn = _c[0],\n      setFocusedColumn = _c[1];\n\n  var _d = useStickyHeader(tableRef, theadRef, secondaryTheadRef, secondaryTableRef, wrapperRef),\n      scrollToRow = _d.scrollToRow,\n      scrollToTop = _d.scrollToTop;\n\n  useImperativeHandle(ref, function () {\n    return {\n      scrollToTop: scrollToTop,\n      scrollToRow: scrollToRow,\n      setFocusedColumn: setFocusedColumn\n    };\n  });\n  return React.createElement(\"div\", {\n    className: clsx(styles['header-secondary'], styles[\"variant-\".concat(variant)], (_b = {}, _b[styles.stuck] = isStuck, _b)),\n    \"aria-hidden\": true,\n    // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n    // to scroll the table horizontally\n    tabIndex: -1,\n    ref: secondaryWrapperRef,\n    onScroll: onScroll\n  }, React.createElement(\"table\", {\n    className: clsx(styles.table, styles['table-layout-fixed']),\n    role: \"table\",\n    ref: secondaryTableRef\n  }, React.createElement(Thead, __assign({\n    ref: secondaryTheadRef,\n    sticky: true,\n    stuck: isStuck,\n    showFocusRing: focusedColumn\n  }, theadProps))));\n}","map":{"version":3,"mappings":"kCAAA;AACA;;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,mBAAxC,EAA6DC,MAA7D,EAAqEC,QAArE,QAAqF,OAArF;AACA,SAASC,mBAAT,QAAoC,gCAApC;AAEA,OAAOC,KAAP,MAAkC,SAAlC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAkBA,eAAeR,UAAU,CAACS,YAAD,CAAzB;;AAEA,SAASA,YAAT,CACEC,EADF,EAEEC,GAFF,EAEiC;;;MAD7BC,OAAO;MAAEC,UAAU;MAAEC,UAAU;MAAEC,QAAQ;MAAEC,mBAAmB;MAAEC,QAAQ;MAAEC,QAAQ;EAGpF,IAAMC,iBAAiB,GAAGhB,MAAM,CAAsB,IAAtB,CAAhC;EACA,IAAMiB,iBAAiB,GAAGjB,MAAM,CAAmB,IAAnB,CAAhC;EACQ,WAAO,GAAKF,UAAU,CAACI,mBAAD,CAAV,CAA+BgB,OAA3C;;EAEF,SAAoCjB,QAAQ,CAAgB,IAAhB,CAA5C;EAAA,IAACkB,aAAa,QAAd;EAAA,IAAgBC,gBAAgB,QAAhC;;EACA,SAA+BhB,eAAe,CAClDW,QADkD,EAElDH,QAFkD,EAGlDI,iBAHkD,EAIlDC,iBAJkD,EAKlDN,UALkD,CAA9C;EAAA,IAAEU,WAAW,iBAAb;EAAA,IAAeC,WAAW,iBAA1B;;EAQNvB,mBAAmB,CAACS,GAAD,EAAM;IAAM,OAAC;MAAEc,WAAW,aAAb;MAAeD,WAAW,aAA1B;MAA4BD,gBAAgB;IAA5C,CAAD;EAAgD,CAA5D,CAAnB;EAEA,OACExB;IACE2B,SAAS,EAAE5B,IAAI,CAACU,MAAM,CAAC,kBAAD,CAAP,EAA6BA,MAAM,CAAC,kBAAWI,OAAX,CAAD,CAAnC,GAAyDe,SACtEA,GAACnB,MAAM,CAACoB,KAAR,IAAgBP,OADsD,IAAzD,EADjB;IAGI,eACW,IAJf;IAKE;IACA;IACAQ,QAAQ,EAAE,CAAC,CAPb;IAQElB,GAAG,EAAEK,mBARP;IASEC,QAAQ,EAAEA;EATZ,GAWElB;IAAO2B,SAAS,EAAE5B,IAAI,CAACU,MAAM,CAACsB,KAAR,EAAetB,MAAM,CAAC,oBAAD,CAArB,CAAtB;IAAoEuB,IAAI,EAAC,OAAzE;IAAiFpB,GAAG,EAAES;EAAtF,GACErB,oBAACO,KAAD,EAAM0B;IAACrB,GAAG,EAAEQ,iBAAN;IAAyBc,MAAM,EAAE,IAAjC;IAAuCL,KAAK,EAAEP,OAA9C;IAAuDa,aAAa,EAAEZ;EAAtE,GAAyFT,UAAzF,CAAN,CADF,CAXF,CADF;AAiBD","names":["clsx","React","forwardRef","useContext","useImperativeHandle","useRef","useState","StickyHeaderContext","Thead","useStickyHeader","styles","StickyHeader","_a","ref","variant","theadProps","wrapperRef","theadRef","secondaryWrapperRef","onScroll","tableRef","secondaryTheadRef","secondaryTableRef","isStuck","focusedColumn","setFocusedColumn","scrollToRow","scrollToTop","className","_b","stuck","tabIndex","table","role","__assign","sticky","showFocusRing"],"sourceRoot":"","sources":["../../../src/table/sticky-header.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { TableProps } from './interfaces';\nimport Thead, { TheadProps } from './thead';\nimport { useStickyHeader } from './use-sticky-header';\nimport styles from './styles.css.js';\n\nexport interface StickyHeaderRef {\n  scrollToTop(): void;\n  scrollToRow(node: null | HTMLElement): void;\n  setFocusedColumn(columnIndex: null | number): void;\n}\n\ninterface StickyHeaderProps {\n  variant: TableProps.Variant;\n  theadProps: TheadProps;\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  theadRef: React.RefObject<HTMLTableRowElement>;\n  secondaryWrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n}\n\nexport default forwardRef(StickyHeader);\n\nfunction StickyHeader(\n  { variant, theadProps, wrapperRef, theadRef, secondaryWrapperRef, onScroll, tableRef }: StickyHeaderProps,\n  ref: React.Ref<StickyHeaderRef>\n) {\n  const secondaryTheadRef = useRef<HTMLTableRowElement>(null);\n  const secondaryTableRef = useRef<HTMLTableElement>(null);\n  const { isStuck } = useContext(StickyHeaderContext);\n\n  const [focusedColumn, setFocusedColumn] = useState<number | null>(null);\n  const { scrollToRow, scrollToTop } = useStickyHeader(\n    tableRef,\n    theadRef,\n    secondaryTheadRef,\n    secondaryTableRef,\n    wrapperRef\n  );\n\n  useImperativeHandle(ref, () => ({ scrollToTop, scrollToRow, setFocusedColumn }));\n\n  return (\n    <div\n      className={clsx(styles['header-secondary'], styles[`variant-${variant}`], {\n        [styles.stuck]: isStuck,\n      })}\n      aria-hidden={true}\n      // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n      // to scroll the table horizontally\n      tabIndex={-1}\n      ref={secondaryWrapperRef}\n      onScroll={onScroll}\n    >\n      <table className={clsx(styles.table, styles['table-layout-fixed'])} role=\"table\" ref={secondaryTableRef}>\n        <Thead ref={secondaryTheadRef} sticky={true} stuck={isStuck} showFocusRing={focusedColumn} {...theadProps} />\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}