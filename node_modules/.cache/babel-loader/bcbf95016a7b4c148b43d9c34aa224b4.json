{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport InternalContainer from '../container/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport ToolsHeader from './tools-header';\nimport Thead from './thead';\nimport { TableBodyCell, TableBodyCellContent } from './body-cell';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport SelectionControl from './selection-control';\nimport { checkSortingState, getColumnKey, getItemKey, toContainerVariant } from './utils';\nimport { useRowEvents } from './use-row-events';\nimport { focusMarkers, useFocusMove, useSelection } from './use-selection';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { isDevelopment } from '../internal/is-development';\nimport { checkColumnWidths, ColumnWidthsProvider, DEFAULT_WIDTH } from './use-column-widths';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { ResizeTracker } from './resizer';\nimport styles from './styles.css.js';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport StickyHeader from './sticky-header';\nimport StickyScrollbar from './sticky-scrollbar';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nvar InternalTable = React.forwardRef(function (_a, ref) {\n  var _b;\n\n  var header = _a.header,\n      footer = _a.footer,\n      empty = _a.empty,\n      filter = _a.filter,\n      pagination = _a.pagination,\n      preferences = _a.preferences,\n      items = _a.items,\n      columnDefinitions = _a.columnDefinitions,\n      trackBy = _a.trackBy,\n      loading = _a.loading,\n      loadingText = _a.loadingText,\n      selectionType = _a.selectionType,\n      selectedItems = _a.selectedItems,\n      isItemDisabled = _a.isItemDisabled,\n      ariaLabels = _a.ariaLabels,\n      onSelectionChange = _a.onSelectionChange,\n      onSortingChange = _a.onSortingChange,\n      sortingColumn = _a.sortingColumn,\n      sortingDescending = _a.sortingDescending,\n      sortingDisabled = _a.sortingDisabled,\n      visibleColumns = _a.visibleColumns,\n      stickyHeader = _a.stickyHeader,\n      stickyHeaderVerticalOffset = _a.stickyHeaderVerticalOffset,\n      onRowClick = _a.onRowClick,\n      onRowContextMenu = _a.onRowContextMenu,\n      wrapLines = _a.wrapLines,\n      resizableColumns = _a.resizableColumns,\n      onColumnWidthsChange = _a.onColumnWidthsChange,\n      variant = _a.variant,\n      __internalRootRef = _a.__internalRootRef,\n      rest = __rest(_a, [\"header\", \"footer\", \"empty\", \"filter\", \"pagination\", \"preferences\", \"items\", \"columnDefinitions\", \"trackBy\", \"loading\", \"loadingText\", \"selectionType\", \"selectedItems\", \"isItemDisabled\", \"ariaLabels\", \"onSelectionChange\", \"onSortingChange\", \"sortingColumn\", \"sortingDescending\", \"sortingDisabled\", \"visibleColumns\", \"stickyHeader\", \"stickyHeaderVerticalOffset\", \"onRowClick\", \"onRowContextMenu\", \"wrapLines\", \"resizableColumns\", \"onColumnWidthsChange\", \"variant\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(rest);\n  stickyHeader = stickyHeader && supportsStickyPosition();\n\n  var _c = useContainerQuery(function (_a) {\n    var width = _a.width;\n    return width;\n  }),\n      containerWidth = _c[0],\n      wrapperMeasureRef = _c[1];\n\n  var wrapperRefObject = useRef(null);\n  var wrapperRef = useMergeRefs(wrapperMeasureRef, wrapperRefObject);\n\n  var _d = useContainerQuery(function (_a) {\n    var width = _a.width;\n    return width;\n  }),\n      tableWidth = _d[0],\n      tableMeasureRef = _d[1];\n\n  var tableRefObject = useRef(null);\n  var tableRef = useMergeRefs(tableMeasureRef, tableRefObject);\n  var secondaryWrapperRef = React.useRef(null);\n  var theadRef = useRef(null);\n  var stickyHeaderRef = React.useRef(null);\n  var scrollbarRef = React.useRef(null);\n  useImperativeHandle(ref, function () {\n    var _a;\n\n    return {\n      scrollToTop: ((_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.scrollToTop) || function () {\n        return undefined;\n      }\n    };\n  });\n  var handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef], !supportsStickyPosition());\n\n  var _e = useFocusMove(selectionType, items.length),\n      moveFocusDown = _e.moveFocusDown,\n      moveFocusUp = _e.moveFocusUp,\n      moveFocus = _e.moveFocus;\n\n  var _f = useRowEvents({\n    onRowClick: onRowClick,\n    onRowContextMenu: onRowContextMenu\n  }),\n      onRowClickHandler = _f.onRowClickHandler,\n      onRowContextMenuHandler = _f.onRowContextMenuHandler;\n\n  var visibleColumnDefinitions = visibleColumns ? columnDefinitions.filter(function (column) {\n    return column.id && visibleColumns.indexOf(column.id) !== -1;\n  }) : columnDefinitions;\n\n  var _g = useSelection({\n    items: items,\n    trackBy: trackBy,\n    selectedItems: selectedItems,\n    selectionType: selectionType,\n    isItemDisabled: isItemDisabled,\n    onSelectionChange: onSelectionChange,\n    ariaLabels: ariaLabels\n  }),\n      isItemSelected = _g.isItemSelected,\n      selectAllProps = _g.selectAllProps,\n      getItemSelectionProps = _g.getItemSelectionProps,\n      updateShiftToggle = _g.updateShiftToggle;\n\n  if (loading) {\n    selectAllProps.disabled = true;\n  }\n\n  if (isDevelopment) {\n    if (resizableColumns) {\n      checkColumnWidths(columnDefinitions);\n    }\n\n    if (sortingColumn === null || sortingColumn === void 0 ? void 0 : sortingColumn.sortingComparator) {\n      checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n    }\n  }\n\n  var isRefresh = useVisualRefresh(tableRefObject);\n  var computedVariant = isRefresh ? variant : ['embedded', 'full-page'].indexOf(variant) > -1 ? 'container' : variant;\n  var hasHeader = !!(header || filter || pagination || preferences);\n  var theadProps = {\n    containerWidth: containerWidth,\n    selectionType: selectionType,\n    selectAllProps: selectAllProps,\n    columnDefinitions: visibleColumnDefinitions,\n    variant: computedVariant,\n    wrapLines: wrapLines,\n    resizableColumns: resizableColumns,\n    sortingColumn: sortingColumn,\n    sortingDisabled: sortingDisabled,\n    sortingDescending: sortingDescending,\n    onSortingChange: onSortingChange,\n    onFocusMove: moveFocus,\n    onResizeFinish: function (newWidth) {\n      var widthsDetail = columnDefinitions.map(function (column, index) {\n        return newWidth[getColumnKey(column, index)] || column.width || DEFAULT_WIDTH;\n      });\n      var widthsChanged = widthsDetail.some(function (width, index) {\n        return columnDefinitions[index].width !== width;\n      });\n\n      if (widthsChanged) {\n        fireNonCancelableEvent(onColumnWidthsChange, {\n          widths: widthsDetail\n        });\n      }\n    }\n  }; // Allows keyboard users to scroll horizontally with arrow keys by making the wrapper part of the tab sequence\n\n  var isWrapperScrollable = tableWidth && containerWidth && tableWidth > containerWidth;\n  var wrapperProps = isWrapperScrollable ? {\n    role: 'region',\n    tabIndex: 0,\n    'aria-label': ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel\n  } : {};\n  var focusVisibleProps = useFocusVisible();\n  return React.createElement(ColumnWidthsProvider, {\n    tableRef: tableRefObject,\n    visibleColumnDefinitions: visibleColumnDefinitions,\n    resizableColumns: resizableColumns,\n    hasSelection: !!selectionType\n  }, React.createElement(InternalContainer, __assign({}, baseProps, {\n    __internalRootRef: __internalRootRef,\n    className: clsx(baseProps.className, styles.root),\n    header: React.createElement(React.Fragment, null, hasHeader && React.createElement(\"div\", {\n      className: clsx(styles['header-controls'], styles[\"variant-\".concat(computedVariant)])\n    }, React.createElement(ToolsHeader, {\n      header: header,\n      filter: filter,\n      pagination: pagination,\n      preferences: preferences\n    })), stickyHeader && React.createElement(StickyHeader, {\n      ref: stickyHeaderRef,\n      variant: computedVariant,\n      theadProps: theadProps,\n      wrapperRef: wrapperRefObject,\n      theadRef: theadRef,\n      secondaryWrapperRef: secondaryWrapperRef,\n      tableRef: tableRefObject,\n      onScroll: handleScroll\n    })),\n    disableHeaderPaddings: true,\n    disableContentPaddings: true,\n    variant: toContainerVariant(computedVariant),\n    __disableFooterPaddings: true,\n    __disableFooterDivider: true,\n    footer: footer && React.createElement(\"div\", {\n      className: clsx(styles['footer-wrapper'], styles[\"variant-\".concat(computedVariant)])\n    }, React.createElement(\"hr\", {\n      className: styles.divider\n    }), React.createElement(\"div\", {\n      className: styles.footer\n    }, footer)),\n    __stickyHeader: stickyHeader,\n    __stickyOffset: stickyHeaderVerticalOffset\n  }, focusMarkers.root), React.createElement(\"div\", __assign({\n    ref: wrapperRef,\n    className: clsx(styles.wrapper, styles[\"variant-\".concat(computedVariant)], (_b = {}, _b[styles['has-footer']] = !!footer, _b[styles['has-header']] = hasHeader, _b)),\n    onScroll: handleScroll\n  }, wrapperProps, focusVisibleProps), React.createElement(\"table\", {\n    ref: tableRef,\n    className: clsx(styles.table, resizableColumns && styles['table-layout-fixed']),\n    // Browsers have weird mechanism to guess whether it's a data table or a layout table.\n    // If we state explicitly, they get it always correctly even with low number of rows.\n    role: \"table\",\n    \"aria-label\": ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel\n  }, React.createElement(Thead, __assign({\n    ref: theadRef,\n    hidden: stickyHeader,\n    onCellFocus: function (colIndex) {\n      var _a;\n\n      return (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.setFocusedColumn(colIndex);\n    },\n    onCellBlur: function () {\n      var _a;\n\n      return (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.setFocusedColumn(null);\n    }\n  }, theadProps)), React.createElement(\"tbody\", null, loading || items.length === 0 ? React.createElement(\"tr\", null, React.createElement(\"td\", {\n    colSpan: selectionType ? visibleColumnDefinitions.length + 1 : visibleColumnDefinitions.length,\n    className: styles['cell-merged']\n  }, React.createElement(\"div\", {\n    className: styles['cell-merged-content'],\n    style: {\n      width: supportsStickyPosition() && containerWidth && Math.floor(containerWidth) || undefined\n    }\n  }, loading ? React.createElement(InternalStatusIndicator, {\n    type: \"loading\",\n    className: styles.loading,\n    wrapText: true\n  }, loadingText) : React.createElement(\"div\", {\n    className: styles.empty\n  }, empty)))) : items.map(function (item, rowIndex) {\n    var firstVisible = rowIndex === 0;\n    var lastVisible = rowIndex === items.length - 1;\n    var isSelected = !!selectionType && isItemSelected(item);\n    var isPrevSelected = !!selectionType && !firstVisible && isItemSelected(items[rowIndex - 1]);\n    var isNextSelected = !!selectionType && !lastVisible && isItemSelected(items[rowIndex + 1]);\n    return React.createElement(\"tr\", __assign({\n      key: getItemKey(trackBy, item, rowIndex),\n      className: clsx(styles.row, isSelected && styles['row-selected']),\n      onFocus: function (_a) {\n        var _b;\n\n        var currentTarget = _a.currentTarget;\n        return (_b = stickyHeaderRef.current) === null || _b === void 0 ? void 0 : _b.scrollToRow(currentTarget);\n      }\n    }, focusMarkers.item, {\n      onClick: onRowClickHandler && onRowClickHandler.bind(null, rowIndex, item),\n      onContextMenu: onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, item)\n    }), selectionType !== undefined && React.createElement(TableBodyCell, {\n      className: styles['selection-control'],\n      isFirstRow: firstVisible,\n      isLastRow: lastVisible,\n      isSelected: isSelected,\n      isNextSelected: isNextSelected,\n      isPrevSelected: isPrevSelected,\n      wrapLines: false\n    }, React.createElement(SelectionControl, __assign({\n      onFocusDown: moveFocusDown,\n      onFocusUp: moveFocusUp,\n      onShiftToggle: updateShiftToggle\n    }, getItemSelectionProps(item)))), visibleColumnDefinitions.map(function (column, colIndex) {\n      return React.createElement(TableBodyCellContent, {\n        key: getColumnKey(column, colIndex),\n        style: resizableColumns ? {} : {\n          width: column.width,\n          minWidth: column.minWidth,\n          maxWidth: column.maxWidth\n        },\n        column: column,\n        item: item,\n        wrapLines: wrapLines,\n        isFirstRow: firstVisible,\n        isLastRow: lastVisible,\n        isSelected: isSelected,\n        isNextSelected: isNextSelected,\n        isPrevSelected: isPrevSelected\n      });\n    }));\n  }))), resizableColumns && React.createElement(ResizeTracker, null)), React.createElement(StickyScrollbar, {\n    ref: scrollbarRef,\n    wrapperRef: wrapperRefObject,\n    tableRef: tableRefObject,\n    onScroll: handleScroll\n  })));\n});\nexport default InternalTable;","map":{"version":3,"mappings":"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","names":["clsx","React","useImperativeHandle","useRef","InternalContainer","getBaseProps","ToolsHeader","Thead","TableBodyCell","TableBodyCellContent","InternalStatusIndicator","useContainerQuery","supportsStickyPosition","SelectionControl","checkSortingState","getColumnKey","getItemKey","toContainerVariant","useRowEvents","focusMarkers","useFocusMove","useSelection","fireNonCancelableEvent","isDevelopment","checkColumnWidths","ColumnWidthsProvider","DEFAULT_WIDTH","useScrollSync","ResizeTracker","styles","useVisualRefresh","StickyHeader","StickyScrollbar","useFocusVisible","useMergeRefs","InternalTable","forwardRef","_a","ref","footer","empty","filter","pagination","preferences","items","columnDefinitions","trackBy","loading","loadingText","selectionType","selectedItems","isItemDisabled","ariaLabels","onSelectionChange","onSortingChange","sortingColumn","sortingDescending","sortingDisabled","visibleColumns","stickyHeader","stickyHeaderVerticalOffset","onRowClick","onRowContextMenu","wrapLines","resizableColumns","onColumnWidthsChange","variant","__internalRootRef","rest","baseProps","width","containerWidth","wrapperMeasureRef","wrapperRefObject","wrapperRef","tableWidth","tableMeasureRef","tableRefObject","tableRef","secondaryWrapperRef","theadRef","stickyHeaderRef","scrollbarRef","scrollToTop","current","handleScroll","length","moveFocusDown","moveFocusUp","moveFocus","onRowClickHandler","onRowContextMenuHandler","visibleColumnDefinitions","id","indexOf","column","isItemSelected","selectAllProps","getItemSelectionProps","updateShiftToggle","disabled","sortingComparator","isRefresh","computedVariant","hasHeader","header","theadProps","onFocusMove","onResizeFinish","newWidth","widthsDetail","map","index","widthsChanged","some","widths","isWrapperScrollable","wrapperProps","role","tabIndex","tableLabel","focusVisibleProps","hasSelection","__assign","className","root","onScroll","disableHeaderPaddings","disableContentPaddings","__disableFooterPaddings","__disableFooterDivider","divider","__stickyHeader","__stickyOffset","wrapper","_b","table","hidden","onCellFocus","setFocusedColumn","colIndex","onCellBlur","colSpan","style","Math","floor","undefined","type","wrapText","item","rowIndex","firstVisible","lastVisible","isSelected","isPrevSelected","isNextSelected","key","row","onFocus","currentTarget","scrollToRow","onClick","bind","onContextMenu","isFirstRow","isLastRow","onFocusDown","onFocusUp","onShiftToggle","minWidth","maxWidth"],"sourceRoot":"","sources":["../../../src/table/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport { TableForwardRefType, TableProps } from './interfaces';\nimport InternalContainer from '../container/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport ToolsHeader from './tools-header';\nimport Thead, { TheadProps } from './thead';\nimport { TableBodyCell, TableBodyCellContent } from './body-cell';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport SelectionControl from './selection-control';\nimport { checkSortingState, getColumnKey, getItemKey, toContainerVariant } from './utils';\nimport { useRowEvents } from './use-row-events';\nimport { focusMarkers, useFocusMove, useSelection } from './use-selection';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { isDevelopment } from '../internal/is-development';\nimport { checkColumnWidths, ColumnWidthsProvider, DEFAULT_WIDTH } from './use-column-widths';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { ResizeTracker } from './resizer';\nimport styles from './styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport StickyHeader, { StickyHeaderRef } from './sticky-header';\nimport StickyScrollbar from './sticky-scrollbar';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { SomeRequired } from '../internal/types';\n\ntype InternalTableProps<T> = SomeRequired<TableProps<T>, 'items' | 'selectedItems' | 'variant'> &\n  InternalBaseComponentProps;\n\nconst InternalTable = React.forwardRef(\n  <T,>(\n    {\n      header,\n      footer,\n      empty,\n      filter,\n      pagination,\n      preferences,\n      items,\n      columnDefinitions,\n      trackBy,\n      loading,\n      loadingText,\n      selectionType,\n      selectedItems,\n      isItemDisabled,\n      ariaLabels,\n      onSelectionChange,\n      onSortingChange,\n      sortingColumn,\n      sortingDescending,\n      sortingDisabled,\n      visibleColumns,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      onRowClick,\n      onRowContextMenu,\n      wrapLines,\n      resizableColumns,\n      onColumnWidthsChange,\n      variant,\n      __internalRootRef,\n      ...rest\n    }: InternalTableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    const baseProps = getBaseProps(rest);\n    stickyHeader = stickyHeader && supportsStickyPosition();\n\n    const [containerWidth, wrapperMeasureRef] = useContainerQuery<number>(({ width }) => width);\n    const wrapperRefObject = useRef(null);\n    const wrapperRef = useMergeRefs(wrapperMeasureRef, wrapperRefObject);\n\n    const [tableWidth, tableMeasureRef] = useContainerQuery<number>(({ width }) => width);\n    const tableRefObject = useRef(null);\n    const tableRef = useMergeRefs(tableMeasureRef, tableRefObject);\n\n    const secondaryWrapperRef = React.useRef<HTMLDivElement>(null);\n    const theadRef = useRef<HTMLTableRowElement>(null);\n    const stickyHeaderRef = React.useRef<StickyHeaderRef>(null);\n    const scrollbarRef = React.useRef<HTMLDivElement>(null);\n\n    useImperativeHandle(ref, () => ({ scrollToTop: stickyHeaderRef.current?.scrollToTop || (() => undefined) }));\n\n    const handleScroll = useScrollSync(\n      [wrapperRefObject, scrollbarRef, secondaryWrapperRef],\n      !supportsStickyPosition()\n    );\n\n    const { moveFocusDown, moveFocusUp, moveFocus } = useFocusMove(selectionType, items.length);\n    const { onRowClickHandler, onRowContextMenuHandler } = useRowEvents({ onRowClick, onRowContextMenu });\n    const visibleColumnDefinitions = visibleColumns\n      ? columnDefinitions.filter(column => column.id && visibleColumns.indexOf(column.id) !== -1)\n      : columnDefinitions;\n    const { isItemSelected, selectAllProps, getItemSelectionProps, updateShiftToggle } = useSelection({\n      items,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n    });\n    if (loading) {\n      selectAllProps.disabled = true;\n    }\n\n    if (isDevelopment) {\n      if (resizableColumns) {\n        checkColumnWidths(columnDefinitions);\n      }\n      if (sortingColumn?.sortingComparator) {\n        checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n      }\n    }\n\n    const isRefresh = useVisualRefresh(tableRefObject);\n    const computedVariant = isRefresh\n      ? variant\n      : ['embedded', 'full-page'].indexOf(variant) > -1\n      ? 'container'\n      : variant;\n    const hasHeader = !!(header || filter || pagination || preferences);\n\n    const theadProps: TheadProps = {\n      containerWidth,\n      selectionType,\n      selectAllProps,\n      columnDefinitions: visibleColumnDefinitions,\n      variant: computedVariant,\n      wrapLines,\n      resizableColumns,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      onSortingChange,\n      onFocusMove: moveFocus,\n      onResizeFinish(newWidth) {\n        const widthsDetail = columnDefinitions.map(\n          (column, index) => newWidth[getColumnKey(column, index)] || (column.width as number) || DEFAULT_WIDTH\n        );\n        const widthsChanged = widthsDetail.some((width, index) => columnDefinitions[index].width !== width);\n        if (widthsChanged) {\n          fireNonCancelableEvent(onColumnWidthsChange, { widths: widthsDetail });\n        }\n      },\n    };\n\n    // Allows keyboard users to scroll horizontally with arrow keys by making the wrapper part of the tab sequence\n    const isWrapperScrollable = tableWidth && containerWidth && tableWidth > containerWidth;\n    const wrapperProps = isWrapperScrollable\n      ? { role: 'region', tabIndex: 0, 'aria-label': ariaLabels?.tableLabel }\n      : {};\n    const focusVisibleProps = useFocusVisible();\n\n    return (\n      <ColumnWidthsProvider\n        tableRef={tableRefObject}\n        visibleColumnDefinitions={visibleColumnDefinitions}\n        resizableColumns={resizableColumns}\n        hasSelection={!!selectionType}\n      >\n        <InternalContainer\n          {...baseProps}\n          __internalRootRef={__internalRootRef}\n          className={clsx(baseProps.className, styles.root)}\n          header={\n            <>\n              {hasHeader && (\n                <div className={clsx(styles['header-controls'], styles[`variant-${computedVariant}`])}>\n                  <ToolsHeader header={header} filter={filter} pagination={pagination} preferences={preferences} />\n                </div>\n              )}\n              {stickyHeader && (\n                <StickyHeader\n                  ref={stickyHeaderRef}\n                  variant={computedVariant}\n                  theadProps={theadProps}\n                  wrapperRef={wrapperRefObject}\n                  theadRef={theadRef}\n                  secondaryWrapperRef={secondaryWrapperRef}\n                  tableRef={tableRefObject}\n                  onScroll={handleScroll}\n                />\n              )}\n            </>\n          }\n          disableHeaderPaddings={true}\n          disableContentPaddings={true}\n          variant={toContainerVariant(computedVariant)}\n          __disableFooterPaddings={true}\n          __disableFooterDivider={true}\n          footer={\n            footer && (\n              <div className={clsx(styles['footer-wrapper'], styles[`variant-${computedVariant}`])}>\n                <hr className={styles.divider} />\n                <div className={styles.footer}>{footer}</div>\n              </div>\n            )\n          }\n          __stickyHeader={stickyHeader}\n          __stickyOffset={stickyHeaderVerticalOffset}\n          {...focusMarkers.root}\n        >\n          <div\n            ref={wrapperRef}\n            className={clsx(styles.wrapper, styles[`variant-${computedVariant}`], {\n              [styles['has-footer']]: !!footer,\n              [styles['has-header']]: hasHeader,\n            })}\n            onScroll={handleScroll}\n            {...wrapperProps}\n            {...focusVisibleProps}\n          >\n            <table\n              ref={tableRef}\n              className={clsx(styles.table, resizableColumns && styles['table-layout-fixed'])}\n              // Browsers have weird mechanism to guess whether it's a data table or a layout table.\n              // If we state explicitly, they get it always correctly even with low number of rows.\n              role=\"table\"\n              aria-label={ariaLabels?.tableLabel}\n            >\n              <Thead\n                ref={theadRef}\n                hidden={stickyHeader}\n                onCellFocus={colIndex => stickyHeaderRef.current?.setFocusedColumn(colIndex)}\n                onCellBlur={() => stickyHeaderRef.current?.setFocusedColumn(null)}\n                {...theadProps}\n              />\n              <tbody>\n                {loading || items.length === 0 ? (\n                  <tr>\n                    <td\n                      colSpan={selectionType ? visibleColumnDefinitions.length + 1 : visibleColumnDefinitions.length}\n                      className={styles['cell-merged']}\n                    >\n                      <div\n                        className={styles['cell-merged-content']}\n                        style={{\n                          width:\n                            (supportsStickyPosition() && containerWidth && Math.floor(containerWidth)) || undefined,\n                        }}\n                      >\n                        {loading ? (\n                          <InternalStatusIndicator type=\"loading\" className={styles.loading} wrapText={true}>\n                            {loadingText}\n                          </InternalStatusIndicator>\n                        ) : (\n                          <div className={styles.empty}>{empty}</div>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  items.map((item, rowIndex) => {\n                    const firstVisible = rowIndex === 0;\n                    const lastVisible = rowIndex === items.length - 1;\n                    const isSelected = !!selectionType && isItemSelected(item);\n                    const isPrevSelected = !!selectionType && !firstVisible && isItemSelected(items[rowIndex - 1]);\n                    const isNextSelected = !!selectionType && !lastVisible && isItemSelected(items[rowIndex + 1]);\n                    return (\n                      <tr\n                        key={getItemKey(trackBy, item, rowIndex)}\n                        className={clsx(styles.row, isSelected && styles['row-selected'])}\n                        onFocus={({ currentTarget }) => stickyHeaderRef.current?.scrollToRow(currentTarget)}\n                        {...focusMarkers.item}\n                        onClick={onRowClickHandler && onRowClickHandler.bind(null, rowIndex, item)}\n                        onContextMenu={onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, item)}\n                      >\n                        {selectionType !== undefined && (\n                          <TableBodyCell\n                            className={styles['selection-control']}\n                            isFirstRow={firstVisible}\n                            isLastRow={lastVisible}\n                            isSelected={isSelected}\n                            isNextSelected={isNextSelected}\n                            isPrevSelected={isPrevSelected}\n                            wrapLines={false}\n                          >\n                            <SelectionControl\n                              onFocusDown={moveFocusDown}\n                              onFocusUp={moveFocusUp}\n                              onShiftToggle={updateShiftToggle}\n                              {...getItemSelectionProps(item)}\n                            />\n                          </TableBodyCell>\n                        )}\n                        {visibleColumnDefinitions.map((column, colIndex) => (\n                          <TableBodyCellContent\n                            key={getColumnKey(column, colIndex)}\n                            style={\n                              resizableColumns\n                                ? {}\n                                : {\n                                    width: column.width,\n                                    minWidth: column.minWidth,\n                                    maxWidth: column.maxWidth,\n                                  }\n                            }\n                            column={column}\n                            item={item}\n                            wrapLines={wrapLines}\n                            isFirstRow={firstVisible}\n                            isLastRow={lastVisible}\n                            isSelected={isSelected}\n                            isNextSelected={isNextSelected}\n                            isPrevSelected={isPrevSelected}\n                          />\n                        ))}\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n            {resizableColumns && <ResizeTracker />}\n          </div>\n          <StickyScrollbar\n            ref={scrollbarRef}\n            wrapperRef={wrapperRefObject}\n            tableRef={tableRefObject}\n            onScroll={handleScroll}\n          />\n        </InternalContainer>\n      </ColumnWidthsProvider>\n    );\n  }\n) as TableForwardRefType;\n\nexport default InternalTable;\n"]},"metadata":{},"sourceType":"module"}