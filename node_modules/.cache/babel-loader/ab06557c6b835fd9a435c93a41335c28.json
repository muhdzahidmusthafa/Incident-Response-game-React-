{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport { fireNonCancelableEvent } from '../../events';\nimport MaskedInput from '../masked-input';\nimport { daysInMonth, parseDate, displayToIso, isoToDisplay } from './utils/date';\n\nfunction daysMax(value) {\n  // force to first day in month, as new Date('2018-02-30') -> March 2nd 2018\n  var baseDate = displayToIso(value).substring(0, 7);\n  return daysInMonth(parseDate(baseDate));\n}\n\nvar maskArgs = {\n  separator: '/',\n  inputSeparators: ['-', '.', ' '],\n  segments: [{\n    min: 0,\n    max: 9999,\n    \"default\": 2000,\n    length: 4\n  }, {\n    min: 1,\n    max: 12,\n    length: 2\n  }, {\n    min: 1,\n    max: daysMax,\n    length: 2\n  }]\n};\nvar DateInput = React.forwardRef(function (_a, ref) {\n  var _b = _a.__internalRootRef,\n      __internalRootRef = _b === void 0 ? null : _b,\n      value = _a.value,\n      onChange = _a.onChange,\n      props = __rest(_a, [\"__internalRootRef\", \"value\", \"onChange\"]);\n\n  return React.createElement(MaskedInput, __assign({\n    value: isoToDisplay(value),\n    onChange: function (event) {\n      return fireNonCancelableEvent(onChange, {\n        value: displayToIso(event.detail.value)\n      });\n    }\n  }, props, {\n    ref: ref,\n    disableBrowserAutocorrect: true,\n    mask: maskArgs,\n    autofix: true,\n    __internalRootRef: __internalRootRef\n  }));\n});\nexport default DateInput;","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,KAAP,MAA2B,OAA3B;AACA,SAASC,sBAAT,QAAuC,cAAvC;AAEA,OAAOC,WAAP,MAAwB,iBAAxB;AAKA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,YAAjC,EAA+CC,YAA/C,QAAmE,cAAnE;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAA8B;EAC5B;EACA,IAAMC,QAAQ,GAAGJ,YAAY,CAACG,KAAD,CAAZ,CAAoBE,SAApB,CAA8B,CAA9B,EAAiC,CAAjC,CAAjB;EACA,OAAOP,WAAW,CAACC,SAAS,CAACK,QAAD,CAAV,CAAlB;AACD;;AAED,IAAME,QAAQ,GAAa;EACzBC,SAAS,EAAE,GADc;EAEzBC,eAAe,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAFQ;EAGzBC,QAAQ,EAAE,CACR;IAAEC,GAAG,EAAE,CAAP;IAAUC,GAAG,EAAE,IAAf;IAAqB,WAAS,IAA9B;IAAoCC,MAAM,EAAE;EAA5C,CADQ,EAER;IAAEF,GAAG,EAAE,CAAP;IAAUC,GAAG,EAAE,EAAf;IAAmBC,MAAM,EAAE;EAA3B,CAFQ,EAGR;IAAEF,GAAG,EAAE,CAAP;IAAUC,GAAG,EAAET,OAAf;IAAwBU,MAAM,EAAE;EAAhC,CAHQ;AAHe,CAA3B;AAUA,IAAMC,SAAS,GAAGlB,KAAK,CAACmB,UAAN,CAChB,UAACC,EAAD,EAA0EC,GAA1E,EAAsG;EAAnG;EAAA,qBAAiB,mBAAG,IAAH,GAAOC,EAAxB;EAAA,IAA0Bd,KAAK,WAA/B;EAAA,IAAiCe,QAAQ,cAAzC;EAAA,IAA8CC,KAAK,cAArD,0CAAqD,CAAnD;;EACD,OACExB,oBAACE,WAAD,EAAYuB;IACVjB,KAAK,EAAEF,YAAY,CAACE,KAAD,CADT;IAEVe,QAAQ,EAAE,iBAAK;MAAI,6BAAsB,CAACA,QAAD,EAAW;QAAEf,KAAK,EAAEH,YAAY,CAACqB,KAAK,CAACC,MAAN,CAAanB,KAAd;MAArB,CAAX,CAAtB;IAA6E;EAFtF,GAGNgB,KAHM,EAGD;IACTH,GAAG,EAAEA,GADI;IAETO,yBAAyB,EAAE,IAFlB;IAGTC,IAAI,EAAElB,QAHG;IAITmB,OAAO,EAAE,IAJA;IAKTC,iBAAiB,EAAEA;EALV,CAHC,CAAZ,CADF;AAYD,CAde,CAAlB;AAiBA,eAAeb,SAAf","names":["React","fireNonCancelableEvent","MaskedInput","daysInMonth","parseDate","displayToIso","isoToDisplay","daysMax","value","baseDate","substring","maskArgs","separator","inputSeparators","segments","min","max","length","DateInput","forwardRef","_a","ref","_b","onChange","props","__assign","event","detail","disableBrowserAutocorrect","mask","autofix","__internalRootRef"],"sourceRoot":"","sources":["../../../../../src/internal/components/date-input/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref } from 'react';\nimport { fireNonCancelableEvent } from '../../events';\n\nimport MaskedInput from '../masked-input';\nimport { MaskArgs } from '../masked-input/utils/mask-format';\n\nimport { DateInputProps } from './interfaces';\n\nimport { daysInMonth, parseDate, displayToIso, isoToDisplay } from './utils/date';\n\nexport { DateInputProps };\n\nfunction daysMax(value: string): number {\n  // force to first day in month, as new Date('2018-02-30') -> March 2nd 2018\n  const baseDate = displayToIso(value).substring(0, 7);\n  return daysInMonth(parseDate(baseDate));\n}\n\nconst maskArgs: MaskArgs = {\n  separator: '/',\n  inputSeparators: ['-', '.', ' '],\n  segments: [\n    { min: 0, max: 9999, default: 2000, length: 4 },\n    { min: 1, max: 12, length: 2 },\n    { min: 1, max: daysMax, length: 2 },\n  ],\n};\n\nconst DateInput = React.forwardRef(\n  ({ __internalRootRef = null, value, onChange, ...props }: DateInputProps, ref: Ref<DateInputProps.Ref>) => {\n    return (\n      <MaskedInput\n        value={isoToDisplay(value)}\n        onChange={event => fireNonCancelableEvent(onChange, { value: displayToIso(event.detail.value) })}\n        {...props}\n        ref={ref}\n        disableBrowserAutocorrect={true}\n        mask={maskArgs}\n        autofix={true}\n        __internalRootRef={__internalRootRef}\n      />\n    );\n  }\n);\n\nexport default DateInput;\n"]},"metadata":{},"sourceType":"module"}