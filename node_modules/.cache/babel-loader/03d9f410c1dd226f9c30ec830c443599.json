{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { isDevelopment } from '../internal/is-development';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalBox from '../box/internal';\nimport ChartStatusContainer, { getChartStatus } from '../internal/components/chart-status-container';\nimport AreaChartFilter from './elements/area-chart-filter';\nimport AreaChartLegend from './elements/area-chart-legend';\nimport InternalSpaceBetween from '../space-between/internal';\nimport ChartContainer from './chart-container';\nimport cartesianStyles from '../internal/components/cartesian-chart/styles.css.js';\nimport styles from './styles.css.js';\nimport useChartModel from './model/use-chart-model';\nimport useFilterProps from './model/use-filter-props';\nimport useHighlightProps from './model/use-highlight-props';\nimport { isSeriesValid } from './model/utils';\nimport { warnOnce } from '../internal/logging';\nimport { nodeContains } from '../internal/utils/dom';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nexport default function InternalAreaChart(_a) {\n  var _b, _c;\n\n  var height = _a.height,\n      xScaleType = _a.xScaleType,\n      yScaleType = _a.yScaleType,\n      xDomain = _a.xDomain,\n      yDomain = _a.yDomain,\n      controlledHighlightedSeries = _a.highlightedSeries,\n      controlledVisibleSeries = _a.visibleSeries,\n      externalSeries = _a.series,\n      controlledOnVisibleChange = _a.onFilterChange,\n      controlledOnHighlightChange = _a.onHighlightChange,\n      i18nStrings = _a.i18nStrings,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby,\n      ariaDescription = _a.ariaDescription,\n      xTitle = _a.xTitle,\n      yTitle = _a.yTitle,\n      hideFilter = _a.hideFilter,\n      additionalFilters = _a.additionalFilters,\n      hideLegend = _a.hideLegend,\n      legendTitle = _a.legendTitle,\n      statusType = _a.statusType,\n      detailPopoverSize = _a.detailPopoverSize,\n      empty = _a.empty,\n      noMatch = _a.noMatch,\n      errorText = _a.errorText,\n      loadingText = _a.loadingText,\n      recoveryText = _a.recoveryText,\n      onRecoveryClick = _a.onRecoveryClick,\n      _d = _a.__internalRootRef,\n      __internalRootRef = _d === void 0 ? null : _d,\n      props = __rest(_a, [\"height\", \"xScaleType\", \"yScaleType\", \"xDomain\", \"yDomain\", \"highlightedSeries\", \"visibleSeries\", \"series\", \"onFilterChange\", \"onHighlightChange\", \"i18nStrings\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescription\", \"xTitle\", \"yTitle\", \"hideFilter\", \"additionalFilters\", \"hideLegend\", \"legendTitle\", \"statusType\", \"detailPopoverSize\", \"empty\", \"noMatch\", \"errorText\", \"loadingText\", \"recoveryText\", \"onRecoveryClick\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(props);\n  var containerRef = useRef(null);\n\n  if (isDevelopment) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      if (!isSeriesValid(externalSeries)) {\n        warnOnce('AreaChart', \"The `series` property violates the component's constraints: all `area` \" + 'series must have `data` arrays of the same length and with the same x-values.');\n      }\n    }, [externalSeries]);\n  }\n\n  var _e = useState(0),\n      width = _e[0],\n      setWidth = _e[1];\n\n  var _f = useFilterProps(externalSeries, controlledVisibleSeries, controlledOnVisibleChange),\n      visibleSeries = _f[0],\n      setVisibleSeries = _f[1];\n\n  var _g = useHighlightProps(externalSeries, controlledHighlightedSeries, controlledOnHighlightChange),\n      highlightedSeries = _g[0],\n      setHighlightedSeries = _g[1];\n\n  var model = useChartModel({\n    externalSeries: externalSeries,\n    visibleSeries: visibleSeries,\n    setVisibleSeries: setVisibleSeries,\n    highlightedSeries: highlightedSeries,\n    setHighlightedSeries: setHighlightedSeries,\n    xDomain: xDomain,\n    yDomain: yDomain,\n    xScaleType: xScaleType,\n    yScaleType: yScaleType,\n    height: height,\n    width: width\n  });\n\n  var _h = getChartStatus({\n    externalData: externalSeries,\n    visibleData: visibleSeries,\n    statusType: statusType\n  }),\n      isEmpty = _h.isEmpty,\n      isNoMatch = _h.isNoMatch,\n      showChart = _h.showChart;\n\n  var showFilters = statusType === 'finished' && (!isEmpty || isNoMatch);\n  var showLegend = !hideLegend && !isEmpty && statusType === 'finished';\n  var reserveLegendSpace = !showChart && !hideLegend;\n  var reserveFilterSpace = !showChart && !isNoMatch && (!hideFilter || additionalFilters);\n\n  var onBlur = function (event) {\n    if (event.relatedTarget && !nodeContains(containerRef.current, event.relatedTarget)) {\n      model.handlers.onContainerBlur();\n    }\n  };\n\n  var mergedRef = useMergeRefs(containerRef, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef,\n    onBlur: onBlur\n  }), showFilters && React.createElement(InternalBox, {\n    className: cartesianStyles['filter-container'],\n    margin: {\n      bottom: 'l'\n    }\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"l\",\n    direction: \"horizontal\",\n    className: clsx((_b = {}, _b[styles['has-default-filter']] = !hideFilter, _b))\n  }, !hideFilter && React.createElement(AreaChartFilter, {\n    model: model,\n    filterLabel: i18nStrings.filterLabel,\n    filterPlaceholder: i18nStrings.filterPlaceholder,\n    filterSelectedAriaLabel: i18nStrings.filterSelectedAriaLabel\n  }), additionalFilters)), React.createElement(\"div\", {\n    className: clsx(styles.content, (_c = {}, _c[styles['content--reserve-filter']] = reserveFilterSpace, _c[styles['content--reserve-legend']] = reserveLegendSpace, _c)),\n    style: {\n      minHeight: height\n    }\n  }, React.createElement(ChartStatusContainer, {\n    isEmpty: isEmpty,\n    isNoMatch: isNoMatch,\n    showChart: showChart,\n    statusType: statusType,\n    empty: empty,\n    noMatch: noMatch,\n    loadingText: loadingText,\n    errorText: errorText,\n    recoveryText: recoveryText,\n    onRecoveryClick: onRecoveryClick\n  }), showChart && React.createElement(ChartContainer, {\n    model: model,\n    autoWidth: setWidth,\n    detailPopoverSize: detailPopoverSize,\n    xTitle: xTitle,\n    yTitle: yTitle,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescription: ariaDescription,\n    i18nStrings: i18nStrings\n  })), showLegend && React.createElement(InternalBox, {\n    margin: {\n      top: 'm'\n    }\n  }, React.createElement(AreaChartLegend, {\n    plotContainerRef: containerRef,\n    model: model,\n    legendTitle: legendTitle,\n    ariaLabel: i18nStrings.legendAriaLabel\n  })));\n}","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","useState","clsx","isDevelopment","getBaseProps","InternalBox","ChartStatusContainer","getChartStatus","AreaChartFilter","AreaChartLegend","InternalSpaceBetween","ChartContainer","cartesianStyles","styles","useChartModel","useFilterProps","useHighlightProps","isSeriesValid","warnOnce","nodeContains","useMergeRefs","InternalAreaChart","_a","xScaleType","yScaleType","xDomain","yDomain","controlledHighlightedSeries","controlledVisibleSeries","externalSeries","controlledOnVisibleChange","controlledOnHighlightChange","i18nStrings","ariaLabel","ariaLabelledby","ariaDescription","xTitle","yTitle","hideFilter","additionalFilters","hideLegend","legendTitle","statusType","detailPopoverSize","empty","noMatch","errorText","loadingText","recoveryText","onRecoveryClick","_d","__internalRootRef","props","baseProps","containerRef","width","setWidth","visibleSeries","setVisibleSeries","highlightedSeries","setHighlightedSeries","model","height","externalData","visibleData","isEmpty","isNoMatch","showChart","showFilters","showLegend","reserveLegendSpace","reserveFilterSpace","onBlur","event","relatedTarget","current","handlers","onContainerBlur","mergedRef","className","root","ref","margin","bottom","size","direction","_b","filterLabel","filterPlaceholder","filterSelectedAriaLabel","content","_c","style","minHeight","autoWidth","top","plotContainerRef","legendAriaLabel"],"sourceRoot":"","sources":["../../../src/area-chart/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { isDevelopment } from '../internal/is-development';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalBox from '../box/internal';\nimport ChartStatusContainer, { getChartStatus } from '../internal/components/chart-status-container';\n\nimport AreaChartFilter from './elements/area-chart-filter';\nimport AreaChartLegend from './elements/area-chart-legend';\nimport { AreaChartProps } from './interfaces';\nimport InternalSpaceBetween from '../space-between/internal';\nimport ChartContainer from './chart-container';\nimport cartesianStyles from '../internal/components/cartesian-chart/styles.css.js';\nimport styles from './styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport useChartModel from './model/use-chart-model';\nimport useFilterProps from './model/use-filter-props';\nimport useHighlightProps from './model/use-highlight-props';\nimport { isSeriesValid } from './model/utils';\nimport { warnOnce } from '../internal/logging';\nimport { nodeContains } from '../internal/utils/dom';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { SomeRequired } from '../internal/types';\n\ntype InternalAreaChartProps<T extends AreaChartProps.DataTypes> = SomeRequired<\n  AreaChartProps<T>,\n  'height' | 'xScaleType' | 'yScaleType' | 'statusType' | 'detailPopoverSize' | 'i18nStrings'\n> &\n  InternalBaseComponentProps;\n\nexport default function InternalAreaChart<T extends AreaChartProps.DataTypes>({\n  height,\n  xScaleType,\n  yScaleType,\n  xDomain,\n  yDomain,\n  highlightedSeries: controlledHighlightedSeries,\n  visibleSeries: controlledVisibleSeries,\n  series: externalSeries,\n  onFilterChange: controlledOnVisibleChange,\n  onHighlightChange: controlledOnHighlightChange,\n  i18nStrings,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  xTitle,\n  yTitle,\n  hideFilter,\n  additionalFilters,\n  hideLegend,\n  legendTitle,\n  statusType,\n  detailPopoverSize,\n  empty,\n  noMatch,\n  errorText,\n  loadingText,\n  recoveryText,\n  onRecoveryClick,\n  __internalRootRef = null,\n  ...props\n}: InternalAreaChartProps<T>) {\n  const baseProps = getBaseProps(props);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  if (isDevelopment) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (!isSeriesValid(externalSeries)) {\n        warnOnce(\n          'AreaChart',\n          \"The `series` property violates the component's constraints: all `area` \" +\n            'series must have `data` arrays of the same length and with the same x-values.'\n        );\n      }\n    }, [externalSeries]);\n  }\n\n  const [width, setWidth] = useState(0);\n  const [visibleSeries, setVisibleSeries] = useFilterProps(\n    externalSeries,\n    controlledVisibleSeries,\n    controlledOnVisibleChange\n  );\n  const [highlightedSeries, setHighlightedSeries] = useHighlightProps(\n    externalSeries,\n    controlledHighlightedSeries,\n    controlledOnHighlightChange\n  );\n  const model = useChartModel({\n    externalSeries,\n    visibleSeries,\n    setVisibleSeries,\n    highlightedSeries,\n    setHighlightedSeries,\n    xDomain,\n    yDomain,\n    xScaleType,\n    yScaleType,\n    height,\n    width,\n  });\n\n  const { isEmpty, isNoMatch, showChart } = getChartStatus({\n    externalData: externalSeries,\n    visibleData: visibleSeries,\n    statusType,\n  });\n  const showFilters = statusType === 'finished' && (!isEmpty || isNoMatch);\n  const showLegend = !hideLegend && !isEmpty && statusType === 'finished';\n  const reserveLegendSpace = !showChart && !hideLegend;\n  const reserveFilterSpace = !showChart && !isNoMatch && (!hideFilter || additionalFilters);\n\n  const onBlur = (event: React.FocusEvent) => {\n    if (event.relatedTarget && !nodeContains(containerRef.current, event.relatedTarget)) {\n      model.handlers.onContainerBlur();\n    }\n  };\n\n  const mergedRef = useMergeRefs(containerRef, __internalRootRef);\n\n  return (\n    <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={mergedRef} onBlur={onBlur}>\n      {showFilters && (\n        <InternalBox className={cartesianStyles['filter-container']} margin={{ bottom: 'l' }}>\n          <InternalSpaceBetween\n            size=\"l\"\n            direction=\"horizontal\"\n            className={clsx({ [styles['has-default-filter']]: !hideFilter })}\n          >\n            {!hideFilter && (\n              <AreaChartFilter\n                model={model}\n                filterLabel={i18nStrings.filterLabel}\n                filterPlaceholder={i18nStrings.filterPlaceholder}\n                filterSelectedAriaLabel={i18nStrings.filterSelectedAriaLabel}\n              />\n            )}\n            {additionalFilters}\n          </InternalSpaceBetween>\n        </InternalBox>\n      )}\n\n      <div\n        className={clsx(styles.content, {\n          [styles['content--reserve-filter']]: reserveFilterSpace,\n          [styles['content--reserve-legend']]: reserveLegendSpace,\n        })}\n        style={{ minHeight: height }}\n      >\n        <ChartStatusContainer\n          isEmpty={isEmpty}\n          isNoMatch={isNoMatch}\n          showChart={showChart}\n          statusType={statusType}\n          empty={empty}\n          noMatch={noMatch}\n          loadingText={loadingText}\n          errorText={errorText}\n          recoveryText={recoveryText}\n          onRecoveryClick={onRecoveryClick}\n        />\n        {showChart && (\n          <ChartContainer\n            model={model}\n            autoWidth={setWidth}\n            detailPopoverSize={detailPopoverSize}\n            xTitle={xTitle}\n            yTitle={yTitle}\n            ariaLabel={ariaLabel}\n            ariaLabelledby={ariaLabelledby}\n            ariaDescription={ariaDescription}\n            i18nStrings={i18nStrings}\n          />\n        )}\n      </div>\n\n      {showLegend && (\n        <InternalBox margin={{ top: 'm' }}>\n          <AreaChartLegend\n            plotContainerRef={containerRef}\n            model={model}\n            legendTitle={legendTitle}\n            ariaLabel={i18nStrings.legendAriaLabel}\n          />\n        </InternalBox>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}