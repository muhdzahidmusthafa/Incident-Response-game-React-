{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nvar InternalToggle = React.forwardRef(function (_a, ref) {\n  var _b, _c;\n\n  var controlId = _a.controlId,\n      checked = _a.checked,\n      name = _a.name,\n      disabled = _a.disabled,\n      children = _a.children,\n      description = _a.description,\n      ariaLabel = _a.ariaLabel,\n      ariaDescribedby = _a.ariaDescribedby,\n      ariaLabelledby = _a.ariaLabelledby,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      _d = _a.__internalRootRef,\n      __internalRootRef = _d === void 0 ? null : _d,\n      rest = __rest(_a, [\"controlId\", \"checked\", \"name\", \"disabled\", \"children\", \"description\", \"ariaLabel\", \"ariaDescribedby\", \"ariaLabelledby\", \"onFocus\", \"onBlur\", \"onChange\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(rest);\n  var checkboxRef = useRef(null);\n  useForwardFocus(ref, checkboxRef);\n  return React.createElement(AbstractSwitch, __assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    controlClassName: clsx(styles['toggle-control'], (_b = {}, _b[styles['toggle-control-checked']] = checked, _b[styles['toggle-control-disabled']] = disabled, _b)),\n    controlId: controlId,\n    disabled: disabled,\n    label: children,\n    description: description,\n    descriptionBottomPadding: true,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby,\n    nativeControl: function (nativeControlProps) {\n      return React.createElement(\"input\", __assign({}, nativeControlProps, {\n        ref: checkboxRef,\n        className: styles.input,\n        type: \"checkbox\",\n        checked: checked,\n        name: name,\n        onFocus: onFocus && function () {\n          return fireNonCancelableEvent(onFocus);\n        },\n        onBlur: onBlur && function () {\n          return fireNonCancelableEvent(onBlur);\n        },\n        onChange: onChange && function (event) {\n          return fireNonCancelableEvent(onChange, {\n            checked: event.target.checked\n          });\n        }\n      }));\n    },\n    styledControl: React.createElement(\"div\", {\n      className: clsx(styles['toggle-handle'], (_c = {}, _c[styles['toggle-handle-checked']] = checked, _c[styles['toggle-handle-disabled']] = disabled, _c))\n    }),\n    __internalRootRef: __internalRootRef\n  }));\n});\nexport default InternalToggle;","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAMA,IAAMC,cAAc,GAAGP,KAAK,CAACQ,UAAN,CACrB,UACEC,EADF,EAiBEC,GAjBF,EAiBK;;;EAfD,aAAS,eAAT;EAAA,IACAC,OAAO,aADP;EAAA,IAEAC,IAAI,UAFJ;EAAA,IAGAC,QAAQ,cAHR;EAAA,IAIAC,QAAQ,cAJR;EAAA,IAKAC,WAAW,iBALX;EAAA,IAMAC,SAAS,eANT;EAAA,IAOAC,eAAe,qBAPf;EAAA,IAQAC,cAAc,oBARd;EAAA,IASAC,OAAO,aATP;EAAA,IAUAC,MAAM,YAVN;EAAA,IAWAC,QAAQ,cAXR;EAAA,IAYAC,yBAZA;EAAA,IAYAC,iBAAiB,mBAAG,IAAH,GAAOD,EAZxB;EAAA,IAaGE,IAAI,cAdT,+KAcS,CAbP;;EAiBF,IAAMC,SAAS,GAAGpB,YAAY,CAACmB,IAAD,CAA9B;EACA,IAAME,WAAW,GAAGzB,MAAM,CAAmB,IAAnB,CAA1B;EACAE,eAAe,CAACO,GAAD,EAAMgB,WAAN,CAAf;EACA,OACE1B,oBAACE,cAAD,EAAeyB,aACTF,SADS,EACA;IACbG,SAAS,EAAE7B,IAAI,CAACO,MAAM,CAACuB,IAAR,EAAcJ,SAAS,CAACG,SAAxB,CADF;IAEbE,gBAAgB,EAAE/B,IAAI,CAACO,MAAM,CAAC,gBAAD,CAAP,GAAyByB,SAC7CA,GAACzB,MAAM,CAAC,wBAAD,CAAP,IAAoCK,OADS,EAE7CoB,GAACzB,MAAM,CAAC,yBAAD,CAAP,IAAqCO,QAFQ,IAAzB,EAFT;IAMbmB,SAAS,EAAEA,SANE;IAObnB,QAAQ,EAAEA,QAPG;IAQboB,KAAK,EAAEnB,QARM;IASbC,WAAW,EAAEA,WATA;IAUbmB,wBAAwB,EAAE,IAVb;IAWblB,SAAS,EAAEA,SAXE;IAYbE,cAAc,EAAEA,cAZH;IAabD,eAAe,EAAEA,eAbJ;IAcbkB,aAAa,EAAE,8BAAkB;MAAI,OACnCnC,0CACMoC,kBADN,EACwB;QACtB1B,GAAG,EAAEgB,WADiB;QAEtBE,SAAS,EAAEtB,MAAM,CAAC+B,KAFI;QAGtBC,IAAI,EAAC,UAHiB;QAItB3B,OAAO,EAAEA,OAJa;QAKtBC,IAAI,EAAEA,IALgB;QAMtBO,OAAO,EAAEA,OAAO,IAAK;UAAM,6BAAsB,CAACA,OAAD,CAAtB;QAA+B,CANpC;QAOtBC,MAAM,EAAEA,MAAM,IAAK;UAAM,6BAAsB,CAACA,MAAD,CAAtB;QAA8B,CAPjC;QAQtBC,QAAQ,EAAEA,QAAQ,IAAK,iBAAK;UAAI,6BAAsB,CAACA,QAAD,EAAW;YAAEV,OAAO,EAAE4B,KAAK,CAACC,MAAN,CAAa7B;UAAxB,CAAX,CAAtB;QAAmE;MAR7E,CADxB,EADmC;IAYpC,CA1BY;IA2Bb8B,aAAa,EACXzC;MACE4B,SAAS,EAAE7B,IAAI,CAACO,MAAM,CAAC,eAAD,CAAP,GAAwBoC,SACrCA,GAACpC,MAAM,CAAC,uBAAD,CAAP,IAAmCK,OADE,EAErC+B,GAACpC,MAAM,CAAC,wBAAD,CAAP,IAAoCO,QAFC,IAAxB;IADjB,EA5BW;IAmCbU,iBAAiB,EAAEA;EAnCN,CADA,CAAf,CADF;AAwCD,CA/DoB,CAAvB;AAkEA,eAAehB,cAAf","names":["clsx","React","useRef","AbstractSwitch","useForwardFocus","fireNonCancelableEvent","getBaseProps","styles","InternalToggle","forwardRef","_a","ref","checked","name","disabled","children","description","ariaLabel","ariaDescribedby","ariaLabelledby","onFocus","onBlur","onChange","_d","__internalRootRef","rest","baseProps","checkboxRef","__assign","className","root","controlClassName","_b","controlId","label","descriptionBottomPadding","nativeControl","nativeControlProps","input","type","event","target","styledControl","_c"],"sourceRoot":"","sources":["../../../src/toggle/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { ToggleProps } from './interfaces';\n\ntype InternalToggleProps = ToggleProps & InternalBaseComponentProps;\n\nconst InternalToggle = React.forwardRef<ToggleProps.Ref, InternalToggleProps>(\n  (\n    {\n      controlId,\n      checked,\n      name,\n      disabled,\n      children,\n      description,\n      ariaLabel,\n      ariaDescribedby,\n      ariaLabelledby,\n      onFocus,\n      onBlur,\n      onChange,\n      __internalRootRef = null,\n      ...rest\n    },\n    ref\n  ) => {\n    const baseProps = getBaseProps(rest);\n    const checkboxRef = useRef<HTMLInputElement>(null);\n    useForwardFocus(ref, checkboxRef);\n    return (\n      <AbstractSwitch\n        {...baseProps}\n        className={clsx(styles.root, baseProps.className)}\n        controlClassName={clsx(styles['toggle-control'], {\n          [styles['toggle-control-checked']]: checked,\n          [styles['toggle-control-disabled']]: disabled,\n        })}\n        controlId={controlId}\n        disabled={disabled}\n        label={children}\n        description={description}\n        descriptionBottomPadding={true}\n        ariaLabel={ariaLabel}\n        ariaLabelledby={ariaLabelledby}\n        ariaDescribedby={ariaDescribedby}\n        nativeControl={nativeControlProps => (\n          <input\n            {...nativeControlProps}\n            ref={checkboxRef}\n            className={styles.input}\n            type=\"checkbox\"\n            checked={checked}\n            name={name}\n            onFocus={onFocus && (() => fireNonCancelableEvent(onFocus))}\n            onBlur={onBlur && (() => fireNonCancelableEvent(onBlur))}\n            onChange={onChange && (event => fireNonCancelableEvent(onChange, { checked: event.target.checked }))}\n          />\n        )}\n        styledControl={\n          <div\n            className={clsx(styles['toggle-handle'], {\n              [styles['toggle-handle-checked']]: checked,\n              [styles['toggle-handle-disabled']]: disabled,\n            })}\n          />\n        }\n        __internalRootRef={__internalRootRef}\n      />\n    );\n  }\n);\n\nexport default InternalToggle;\n"]},"metadata":{},"sourceType":"module"}