{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport Dropdown from '../internal/components/dropdown';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport Filter from './parts/filter';\nimport Trigger from './parts/trigger';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { getBaseProps } from '../internal/base-component';\nimport { prepareOptions } from '../internal/components/option/utils/prepare-options';\nimport { useSelect } from './utils/use-select';\nimport { checkOptionValueField } from './utils/check-option-value-field';\nimport { useNativeSearch } from './utils/use-native-search';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useLoadItems } from './utils/use-load-items';\nimport { useAnnouncement } from './utils/use-announcement';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport PlainList from './parts/plain-list';\nimport VirtualList from './parts/virtual-list';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nvar InternalSelect = React.forwardRef(function (_a, externalRef) {\n  var _b;\n\n  var options = _a.options,\n      _c = _a.filteringType,\n      filteringType = _c === void 0 ? 'none' : _c,\n      filteringPlaceholder = _a.filteringPlaceholder,\n      filteringAriaLabel = _a.filteringAriaLabel,\n      ariaRequired = _a.ariaRequired,\n      placeholder = _a.placeholder,\n      disabled = _a.disabled,\n      ariaLabel = _a.ariaLabel,\n      _d = _a.statusType,\n      statusType = _d === void 0 ? 'finished' : _d,\n      empty = _a.empty,\n      loadingText = _a.loadingText,\n      finishedText = _a.finishedText,\n      errorText = _a.errorText,\n      recoveryText = _a.recoveryText,\n      noMatch = _a.noMatch,\n      _e = _a.triggerVariant,\n      triggerVariant = _e === void 0 ? 'label' : _e,\n      selectedAriaLabel = _a.selectedAriaLabel,\n      renderHighlightedAriaLive = _a.renderHighlightedAriaLive,\n      selectedOption = _a.selectedOption,\n      onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      onLoadItems = _a.onLoadItems,\n      onChange = _a.onChange,\n      virtualScroll = _a.virtualScroll,\n      expandToViewport = _a.expandToViewport,\n      __inFilteringToken = _a.__inFilteringToken,\n      _f = _a.__internalRootRef,\n      __internalRootRef = _f === void 0 ? null : _f,\n      restProps = __rest(_a, [\"options\", \"filteringType\", \"filteringPlaceholder\", \"filteringAriaLabel\", \"ariaRequired\", \"placeholder\", \"disabled\", \"ariaLabel\", \"statusType\", \"empty\", \"loadingText\", \"finishedText\", \"errorText\", \"recoveryText\", \"noMatch\", \"triggerVariant\", \"selectedAriaLabel\", \"renderHighlightedAriaLive\", \"selectedOption\", \"onBlur\", \"onFocus\", \"onLoadItems\", \"onChange\", \"virtualScroll\", \"expandToViewport\", \"__inFilteringToken\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var formFieldContext = useFormFieldContext(restProps);\n\n  var _g = useLoadItems({\n    onLoadItems: onLoadItems,\n    options: options,\n    statusType: statusType\n  }),\n      handleLoadMore = _g.handleLoadMore,\n      handleRecoveryClick = _g.handleRecoveryClick,\n      fireLoadItems = _g.fireLoadItems;\n\n  checkControlled('Select', 'selectedOption', selectedOption, 'onChange', onChange);\n  checkOptionValueField('Select', 'options', options);\n\n  var _h = useState(''),\n      filteringValue = _h[0],\n      setFilteringValue = _h[1];\n\n  var _j = prepareOptions(options, filteringType, filteringValue),\n      filteredOptions = _j.filteredOptions,\n      parentMap = _j.parentMap;\n\n  var rootRef = useRef(null);\n  var triggerRef = useRef(null);\n  var selfControlId = useUniqueId('trigger');\n  var controlId = (_b = formFieldContext.controlId) !== null && _b !== void 0 ? _b : selfControlId;\n  var scrollToIndex = useRef(null);\n\n  var _k = useSelect({\n    selectedOptions: selectedOption ? [selectedOption] : [],\n    updateSelectedOption: function (option) {\n      return fireNonCancelableEvent(onChange, {\n        selectedOption: option\n      });\n    },\n    options: filteredOptions,\n    filteringType: filteringType,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    externalRef: externalRef,\n    fireLoadItems: fireLoadItems,\n    setFilteringValue: setFilteringValue\n  }),\n      isOpen = _k.isOpen,\n      highlightedOption = _k.highlightedOption,\n      highlightedIndex = _k.highlightedIndex,\n      getTriggerProps = _k.getTriggerProps,\n      getFilterProps = _k.getFilterProps,\n      getMenuProps = _k.getMenuProps,\n      getOptionProps = _k.getOptionProps,\n      isKeyboard = _k.isKeyboard,\n      highlightOption = _k.highlightOption,\n      selectOption = _k.selectOption,\n      announceSelected = _k.announceSelected;\n\n  var handleNativeSearch = useNativeSearch({\n    isEnabled: filteringType === 'none',\n    options: filteredOptions,\n    highlightOption: !isOpen ? selectOption : highlightOption,\n    highlightedOption: !isOpen ? selectedOption : highlightedOption === null || highlightedOption === void 0 ? void 0 : highlightedOption.option,\n    isKeyboard: isKeyboard\n  });\n  useEffect(function () {\n    var _a;\n\n    (_a = scrollToIndex.current) === null || _a === void 0 ? void 0 : _a.call(scrollToIndex, highlightedIndex);\n  }, [highlightedIndex]);\n  var filter = React.createElement(Filter, __assign({\n    filteringType: filteringType,\n    placeholder: filteringPlaceholder,\n    ariaLabel: filteringAriaLabel,\n    ariaRequired: ariaRequired,\n    value: filteringValue\n  }, getFilterProps()));\n  var trigger = React.createElement(Trigger, __assign({\n    ref: triggerRef,\n    placeholder: placeholder,\n    disabled: disabled,\n    ariaLabel: ariaLabel,\n    triggerVariant: triggerVariant,\n    triggerProps: getTriggerProps(disabled),\n    selectedOption: selectedOption,\n    isOpen: isOpen,\n    inFilteringToken: __inFilteringToken\n  }, formFieldContext, {\n    controlId: controlId\n  }));\n\n  var menuProps = __assign(__assign({}, getMenuProps()), {\n    onLoadMore: handleLoadMore,\n    ariaLabelledby: controlId\n  });\n\n  var isEmpty = !options || options.length === 0;\n  var isNoMatch = filteredOptions && filteredOptions.length === 0;\n  var dropdownStatus = useDropdownStatus({\n    statusType: statusType,\n    empty: empty,\n    loadingText: loadingText,\n    finishedText: finishedText,\n    errorText: errorText,\n    recoveryText: recoveryText,\n    isEmpty: isEmpty,\n    isNoMatch: isNoMatch,\n    noMatch: noMatch,\n    onRecoveryClick: handleRecoveryClick\n  });\n  var announcement = useAnnouncement({\n    announceSelected: announceSelected,\n    highlightedOption: highlightedOption,\n    getParent: function (option) {\n      var _a;\n\n      return (_a = parentMap.get(option)) === null || _a === void 0 ? void 0 : _a.option;\n    },\n    selectedAriaLabel: selectedAriaLabel,\n    renderHighlightedAriaLive: renderHighlightedAriaLive\n  });\n  var ListComponent = virtualScroll ? VirtualList : PlainList;\n\n  var handleMouseDown = function (event) {\n    var target = event.target;\n\n    if (target !== document.activeElement) {\n      // prevent currently focused element from losing it\n      event.preventDefault();\n    }\n  };\n\n  var mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(styles.root, baseProps.className),\n    onKeyPress: handleNativeSearch\n  }), React.createElement(Dropdown, {\n    open: isOpen,\n    stretchTriggerHeight: __inFilteringToken,\n    trigger: trigger,\n    header: filter,\n    onMouseDown: handleMouseDown,\n    footer: dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n      content: dropdownStatus.content\n    }) : null,\n    expandToViewport: expandToViewport\n  }, React.createElement(ListComponent, {\n    listBottom: !dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n      content: dropdownStatus.content\n    }) : null,\n    menuProps: menuProps,\n    getOptionProps: getOptionProps,\n    filteredOptions: filteredOptions,\n    filteringValue: filteringValue,\n    isKeyboard: isKeyboard.current,\n    ref: scrollToIndex,\n    hasDropdownStatus: dropdownStatus.content !== null,\n    screenReaderContent: announcement\n  })));\n});\nexport default InternalSelect;","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,SAASC,cAAT,QAA+B,qDAA/B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,mBAAT,QAAoC,wCAApC;AACA,OAAOC,SAAP,MAA2C,oBAA3C;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAEA,SAASC,YAAT,QAA6B,kCAA7B;AAQA,IAAMC,cAAc,GAAGzB,KAAK,CAAC0B,UAAN,CACrB,UACEC,EADF,EA+BEC,WA/BF,EA+ByC;;;EA7BrC,WAAO,aAAP;EAAA,IACAC,qBADA;EAAA,IACAC,aAAa,mBAAG,MAAH,GAASD,EADtB;EAAA,IAEAE,oBAAoB,0BAFpB;EAAA,IAGAC,kBAAkB,wBAHlB;EAAA,IAIAC,YAAY,kBAJZ;EAAA,IAKAC,WAAW,iBALX;EAAA,IAMAC,QAAQ,cANR;EAAA,IAOAC,SAAS,eAPT;EAAA,IAQAC,kBARA;EAAA,IAQAC,UAAU,mBAAG,UAAH,GAAaD,EARvB;EAAA,IASAE,KAAK,WATL;EAAA,IAUAC,WAAW,iBAVX;EAAA,IAWAC,YAAY,kBAXZ;EAAA,IAYAC,SAAS,eAZT;EAAA,IAaAC,YAAY,kBAbZ;EAAA,IAcAC,OAAO,aAdP;EAAA,IAeAC,sBAfA;EAAA,IAeAC,cAAc,mBAAG,OAAH,GAAUD,EAfxB;EAAA,IAgBAE,iBAAiB,uBAhBjB;EAAA,IAiBAC,yBAAyB,+BAjBzB;EAAA,IAkBAC,cAAc,oBAlBd;EAAA,IAmBAC,MAAM,YAnBN;EAAA,IAoBAC,OAAO,aApBP;EAAA,IAqBAC,WAAW,iBArBX;EAAA,IAsBAC,QAAQ,cAtBR;EAAA,IAuBAC,aAAa,mBAvBb;EAAA,IAwBAC,gBAAgB,sBAxBhB;EAAA,IAyBAC,kBAAkB,wBAzBlB;EAAA,IA0BAC,yBA1BA;EAAA,IA0BAC,iBAAiB,mBAAG,IAAH,GAAOD,EA1BxB;EAAA,IA2BGE,SAAS,cA5Bd,sbA4Bc,CA3BZ;;EA+BF,IAAMC,SAAS,GAAGjD,YAAY,CAACgD,SAAD,CAA9B;EACA,IAAME,gBAAgB,GAAG1C,mBAAmB,CAACwC,SAAD,CAA5C;;EAEM,SAAyD1C,YAAY,CAAC;IAC1EmC,WAAW,aAD+D;IAE1EU,OAAO,SAFmE;IAG1ExB,UAAU;EAHgE,CAAD,CAArE;EAAA,IAAEyB,cAAc,oBAAhB;EAAA,IAAkBC,mBAAmB,yBAArC;EAAA,IAAuCC,aAAa,mBAApD;;EAMN1C,eAAe,CAAC,QAAD,EAAW,gBAAX,EAA6B0B,cAA7B,EAA6C,UAA7C,EAAyDI,QAAzD,CAAf;EAEAvC,qBAAqB,CAAC,QAAD,EAAW,SAAX,EAAsBgD,OAAtB,CAArB;;EAEM,SAAsC7D,QAAQ,CAAC,EAAD,CAA9C;EAAA,IAACiE,cAAc,QAAf;EAAA,IAAiBC,iBAAiB,QAAlC;;EAEA,SAAiCvD,cAAc,CAACkD,OAAD,EAAUhC,aAAV,EAAyBoC,cAAzB,CAA/C;EAAA,IAAEE,eAAe,qBAAjB;EAAA,IAAmBC,SAAS,eAA5B;;EAEN,IAAMC,OAAO,GAAGpE,MAAM,CAAiB,IAAjB,CAAtB;EACA,IAAMqE,UAAU,GAAGrE,MAAM,CAAoB,IAApB,CAAzB;EAEA,IAAMsE,aAAa,GAAG9D,WAAW,CAAC,SAAD,CAAjC;EACA,IAAM+D,SAAS,GAAG,sBAAgB,CAACA,SAAjB,MAA0B,IAA1B,IAA0BC,aAA1B,GAA0BA,EAA1B,GAA8BF,aAAhD;EAEA,IAAMG,aAAa,GAAGzE,MAAM,CAAgC,IAAhC,CAA5B;;EACM,SAYFW,SAAS,CAAC;IACZ+D,eAAe,EAAE3B,cAAc,GAAG,CAACA,cAAD,CAAH,GAAsB,EADzC;IAEZ4B,oBAAoB,EAAE,kBAAM;MAAI,6BAAsB,CAACxB,QAAD,EAAW;QAAEJ,cAAc,EAAE6B;MAAlB,CAAX,CAAtB;IAA4D,CAFhF;IAGZhB,OAAO,EAAEM,eAHG;IAIZtC,aAAa,eAJD;IAKZoB,MAAM,QALM;IAMZC,OAAO,SANK;IAOZvB,WAAW,aAPC;IAQZqC,aAAa,eARD;IASZE,iBAAiB;EATL,CAAD,CAZP;EAAA,IACJY,MAAM,YADF;EAAA,IAEJC,iBAAiB,uBAFb;EAAA,IAGJC,gBAAgB,sBAHZ;EAAA,IAIJC,eAAe,qBAJX;EAAA,IAKJC,cAAc,oBALV;EAAA,IAMJC,YAAY,kBANR;EAAA,IAOJC,cAAc,oBAPV;EAAA,IAQJC,UAAU,gBARN;EAAA,IASJC,eAAe,qBATX;EAAA,IAUJC,YAAY,kBAVR;EAAA,IAWJC,gBAAgB,sBAXZ;;EAwBN,IAAMC,kBAAkB,GAAG3E,eAAe,CAAC;IACzC4E,SAAS,EAAE7D,aAAa,KAAK,MADY;IAEzCgC,OAAO,EAAEM,eAFgC;IAGzCmB,eAAe,EAAE,CAACR,MAAD,GAAUS,YAAV,GAAyBD,eAHD;IAIzCP,iBAAiB,EAAE,CAACD,MAAD,GAAU9B,cAAV,GAA2B+B,iBAAiB,SAAjB,qBAAiB,WAAjB,GAAiB,MAAjB,oBAAiB,CAAEF,MAJxB;IAKzCQ,UAAU;EAL+B,CAAD,CAA1C;EAQAnF,SAAS,CAAC;;;IACR,mBAAa,CAACyF,OAAd,MAAqB,IAArB,IAAqBjE,aAArB,GAAqB,MAArB,GAAqBA,uBAAGsD,gBAAH,CAArB;EACD,CAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;EAIA,IAAMY,MAAM,GACV7F,oBAACQ,MAAD,EAAOsF;IACLhE,aAAa,EAAEA,aADV;IAELI,WAAW,EAAEH,oBAFR;IAGLK,SAAS,EAAEJ,kBAHN;IAILC,YAAY,EAAEA,YAJT;IAKL8D,KAAK,EAAE7B;EALF,GAMDiB,cAAc,EANb,CAAP,CADF;EAWA,IAAMa,OAAO,GACXhG,oBAACS,OAAD,EAAQqF;IACNG,GAAG,EAAE1B,UADC;IAENrC,WAAW,EAAEA,WAFP;IAGNC,QAAQ,EAAEA,QAHJ;IAINC,SAAS,EAAEA,SAJL;IAKNU,cAAc,EAAEA,cALV;IAMNoD,YAAY,EAAEhB,eAAe,CAAC/C,QAAD,CANvB;IAONc,cAAc,EAAEA,cAPV;IAQN8B,MAAM,EAAEA,MARF;IASNoB,gBAAgB,EAAE3C;EATZ,GAUFK,gBAVE,EAUc;IACpBY,SAAS,EAAEA;EADS,CAVd,CAAR,CADF;;EAgBA,IAAM2B,SAAS,yBACVhB,YAAY,EADF,GACI;IACjBiB,UAAU,EAAEtC,cADK;IAEjBuC,cAAc,EAAE7B;EAFC,CADJ,CAAf;;EAMA,IAAM8B,OAAO,GAAG,CAACzC,OAAD,IAAYA,OAAO,CAAC0C,MAAR,KAAmB,CAA/C;EACA,IAAMC,SAAS,GAAGrC,eAAe,IAAIA,eAAe,CAACoC,MAAhB,KAA2B,CAAhE;EACA,IAAME,cAAc,GAAGnG,iBAAiB,CAAC;IACvC+B,UAAU,YAD6B;IAEvCC,KAAK,OAFkC;IAGvCC,WAAW,aAH4B;IAIvCC,YAAY,cAJ2B;IAKvCC,SAAS,WAL8B;IAMvCC,YAAY,cAN2B;IAOvC4D,OAAO,SAPgC;IAQvCE,SAAS,WAR8B;IASvC7D,OAAO,SATgC;IAUvC+D,eAAe,EAAE3C;EAVsB,CAAD,CAAxC;EAaA,IAAM4C,YAAY,GAAG1F,eAAe,CAAC;IACnCuE,gBAAgB,kBADmB;IAEnCT,iBAAiB,mBAFkB;IAGnC6B,SAAS,EAAE,kBAAM;MAAA;;MAAI,sBAAS,CAACC,GAAV,CAAchC,MAAd,OAAqB,IAArB,IAAqBnD,aAArB,GAAqB,MAArB,GAAqBA,GAAEmD,MAAvB;IAAwD,CAH1C;IAInC/B,iBAAiB,mBAJkB;IAKnCC,yBAAyB;EALU,CAAD,CAApC;EAQA,IAAM+D,aAAa,GAAGzD,aAAa,GAAGjC,WAAH,GAAiBD,SAApD;;EAEA,IAAM4F,eAAe,GAAG,UAACC,KAAD,EAAwB;IAC9C,IAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;;IAEA,IAAIA,MAAM,KAAKC,QAAQ,CAACC,aAAxB,EAAuC;MACrC;MACAH,KAAK,CAACI,cAAN;IACD;EACF,CAPD;;EASA,IAAMC,SAAS,GAAG9F,YAAY,CAAC8C,OAAD,EAAUZ,iBAAV,CAA9B;EAEA,OACE1D,wCACM4D,SADN,EACe;IACbqC,GAAG,EAAEqB,SADQ;IAEbC,SAAS,EAAEnH,IAAI,CAACC,MAAM,CAACmH,IAAR,EAAc5D,SAAS,CAAC2D,SAAxB,CAFF;IAGbE,UAAU,EAAE/B;EAHC,CADf,GAME1F,oBAACM,QAAD,EAAS;IACPoH,IAAI,EAAE3C,MADC;IAEP4C,oBAAoB,EAAEnE,kBAFf;IAGPwC,OAAO,EAAEA,OAHF;IAIP4B,MAAM,EAAE/B,MAJD;IAKPgC,WAAW,EAAEb,eALN;IAMPc,MAAM,EAAEpB,cAAc,CAACqB,QAAf,GAA0B/H,oBAACsB,cAAD,EAAe;MAAC0G,OAAO,EAAEtB,cAAc,CAACsB;IAAzB,CAAf,CAA1B,GAAgF,IANjF;IAOPzE,gBAAgB,EAAEA;EAPX,CAAT,EASEvD,oBAAC+G,aAAD,EAAc;IACZkB,UAAU,EAAE,CAACvB,cAAc,CAACqB,QAAhB,GAA2B/H,oBAACsB,cAAD,EAAe;MAAC0G,OAAO,EAAEtB,cAAc,CAACsB;IAAzB,CAAf,CAA3B,GAAiF,IADjF;IAEZ5B,SAAS,EAAEA,SAFC;IAGZf,cAAc,EAAEA,cAHJ;IAIZjB,eAAe,EAAEA,eAJL;IAKZF,cAAc,EAAEA,cALJ;IAMZoB,UAAU,EAAEA,UAAU,CAACM,OANX;IAOZK,GAAG,EAAEtB,aAPO;IAQZuD,iBAAiB,EAAExB,cAAc,CAACsB,OAAf,KAA2B,IARlC;IASZG,mBAAmB,EAAEvB;EATT,CAAd,CATF,CANF,CADF;AA8BD,CAjMoB,CAAvB;AAoMA,eAAenF,cAAf","names":["React","useState","useRef","useEffect","clsx","styles","Dropdown","useDropdownStatus","Filter","Trigger","useUniqueId","getBaseProps","prepareOptions","useSelect","checkOptionValueField","useNativeSearch","fireNonCancelableEvent","useLoadItems","useAnnouncement","useFormFieldContext","PlainList","VirtualList","DropdownFooter","checkControlled","useMergeRefs","InternalSelect","forwardRef","_a","externalRef","_c","filteringType","filteringPlaceholder","filteringAriaLabel","ariaRequired","placeholder","disabled","ariaLabel","_d","statusType","empty","loadingText","finishedText","errorText","recoveryText","noMatch","_e","triggerVariant","selectedAriaLabel","renderHighlightedAriaLive","selectedOption","onBlur","onFocus","onLoadItems","onChange","virtualScroll","expandToViewport","__inFilteringToken","_f","__internalRootRef","restProps","baseProps","formFieldContext","options","handleLoadMore","handleRecoveryClick","fireLoadItems","filteringValue","setFilteringValue","filteredOptions","parentMap","rootRef","triggerRef","selfControlId","controlId","_b","scrollToIndex","selectedOptions","updateSelectedOption","option","isOpen","highlightedOption","highlightedIndex","getTriggerProps","getFilterProps","getMenuProps","getOptionProps","isKeyboard","highlightOption","selectOption","announceSelected","handleNativeSearch","isEnabled","current","filter","__assign","value","trigger","ref","triggerProps","inFilteringToken","menuProps","onLoadMore","ariaLabelledby","isEmpty","length","isNoMatch","dropdownStatus","onRecoveryClick","announcement","getParent","get","ListComponent","handleMouseDown","event","target","document","activeElement","preventDefault","mergedRef","className","root","onKeyPress","open","stretchTriggerHeight","header","onMouseDown","footer","isSticky","content","listBottom","hasDropdownStatus","screenReaderContent"],"sourceRoot":"","sources":["../../../src/select/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useRef, useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\n\nimport Dropdown from '../internal/components/dropdown';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport Filter from './parts/filter';\nimport Trigger from './parts/trigger';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { SelectProps } from './interfaces';\nimport { prepareOptions } from '../internal/components/option/utils/prepare-options';\nimport { useSelect } from './utils/use-select';\nimport { checkOptionValueField } from './utils/check-option-value-field';\nimport { useNativeSearch } from './utils/use-native-search';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useLoadItems } from './utils/use-load-items';\nimport { useAnnouncement } from './utils/use-announcement';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport PlainList, { SelectListProps } from './parts/plain-list';\nimport VirtualList from './parts/virtual-list';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { OptionGroup } from '../internal/components/option/interfaces.js';\nimport { SomeRequired } from '../internal/types.js';\n\nexport interface InternalSelectProps extends SomeRequired<SelectProps, 'options'>, InternalBaseComponentProps {\n  __inFilteringToken?: boolean;\n}\n\nconst InternalSelect = React.forwardRef(\n  (\n    {\n      options,\n      filteringType = 'none',\n      filteringPlaceholder,\n      filteringAriaLabel,\n      ariaRequired,\n      placeholder,\n      disabled,\n      ariaLabel,\n      statusType = 'finished',\n      empty,\n      loadingText,\n      finishedText,\n      errorText,\n      recoveryText,\n      noMatch,\n      triggerVariant = 'label',\n      selectedAriaLabel,\n      renderHighlightedAriaLive,\n      selectedOption,\n      onBlur,\n      onFocus,\n      onLoadItems,\n      onChange,\n      virtualScroll,\n      expandToViewport,\n      __inFilteringToken,\n      __internalRootRef = null,\n      ...restProps\n    }: InternalSelectProps,\n    externalRef: React.Ref<SelectProps.Ref>\n  ) => {\n    const baseProps = getBaseProps(restProps);\n    const formFieldContext = useFormFieldContext(restProps);\n\n    const { handleLoadMore, handleRecoveryClick, fireLoadItems } = useLoadItems({\n      onLoadItems,\n      options,\n      statusType,\n    });\n\n    checkControlled('Select', 'selectedOption', selectedOption, 'onChange', onChange);\n\n    checkOptionValueField('Select', 'options', options);\n\n    const [filteringValue, setFilteringValue] = useState('');\n\n    const { filteredOptions, parentMap } = prepareOptions(options, filteringType, filteringValue);\n\n    const rootRef = useRef<HTMLDivElement>(null);\n    const triggerRef = useRef<HTMLButtonElement>(null);\n\n    const selfControlId = useUniqueId('trigger');\n    const controlId = formFieldContext.controlId ?? selfControlId;\n\n    const scrollToIndex = useRef<SelectListProps.SelectListRef>(null);\n    const {\n      isOpen,\n      highlightedOption,\n      highlightedIndex,\n      getTriggerProps,\n      getFilterProps,\n      getMenuProps,\n      getOptionProps,\n      isKeyboard,\n      highlightOption,\n      selectOption,\n      announceSelected,\n    } = useSelect({\n      selectedOptions: selectedOption ? [selectedOption] : [],\n      updateSelectedOption: option => fireNonCancelableEvent(onChange, { selectedOption: option }),\n      options: filteredOptions,\n      filteringType,\n      onBlur,\n      onFocus,\n      externalRef,\n      fireLoadItems,\n      setFilteringValue,\n    });\n\n    const handleNativeSearch = useNativeSearch({\n      isEnabled: filteringType === 'none',\n      options: filteredOptions,\n      highlightOption: !isOpen ? selectOption : highlightOption,\n      highlightedOption: !isOpen ? selectedOption : highlightedOption?.option,\n      isKeyboard,\n    });\n\n    useEffect(() => {\n      scrollToIndex.current?.(highlightedIndex);\n    }, [highlightedIndex]);\n\n    const filter = (\n      <Filter\n        filteringType={filteringType}\n        placeholder={filteringPlaceholder}\n        ariaLabel={filteringAriaLabel}\n        ariaRequired={ariaRequired}\n        value={filteringValue}\n        {...getFilterProps()}\n      />\n    );\n\n    const trigger = (\n      <Trigger\n        ref={triggerRef}\n        placeholder={placeholder}\n        disabled={disabled}\n        ariaLabel={ariaLabel}\n        triggerVariant={triggerVariant}\n        triggerProps={getTriggerProps(disabled)}\n        selectedOption={selectedOption}\n        isOpen={isOpen}\n        inFilteringToken={__inFilteringToken}\n        {...formFieldContext}\n        controlId={controlId}\n      />\n    );\n\n    const menuProps = {\n      ...getMenuProps(),\n      onLoadMore: handleLoadMore,\n      ariaLabelledby: controlId,\n    };\n\n    const isEmpty = !options || options.length === 0;\n    const isNoMatch = filteredOptions && filteredOptions.length === 0;\n    const dropdownStatus = useDropdownStatus({\n      statusType,\n      empty,\n      loadingText,\n      finishedText,\n      errorText,\n      recoveryText,\n      isEmpty,\n      isNoMatch,\n      noMatch,\n      onRecoveryClick: handleRecoveryClick,\n    });\n\n    const announcement = useAnnouncement({\n      announceSelected,\n      highlightedOption,\n      getParent: option => parentMap.get(option)?.option as undefined | OptionGroup,\n      selectedAriaLabel,\n      renderHighlightedAriaLive,\n    });\n\n    const ListComponent = virtualScroll ? VirtualList : PlainList;\n\n    const handleMouseDown = (event: React.MouseEvent) => {\n      const target = event.target as HTMLElement;\n\n      if (target !== document.activeElement) {\n        // prevent currently focused element from losing it\n        event.preventDefault();\n      }\n    };\n\n    const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n\n    return (\n      <div\n        {...baseProps}\n        ref={mergedRef}\n        className={clsx(styles.root, baseProps.className)}\n        onKeyPress={handleNativeSearch}\n      >\n        <Dropdown\n          open={isOpen}\n          stretchTriggerHeight={__inFilteringToken}\n          trigger={trigger}\n          header={filter}\n          onMouseDown={handleMouseDown}\n          footer={dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} /> : null}\n          expandToViewport={expandToViewport}\n        >\n          <ListComponent\n            listBottom={!dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} /> : null}\n            menuProps={menuProps}\n            getOptionProps={getOptionProps}\n            filteredOptions={filteredOptions}\n            filteringValue={filteringValue}\n            isKeyboard={isKeyboard.current}\n            ref={scrollToIndex}\n            hasDropdownStatus={dropdownStatus.content !== null}\n            screenReaderContent={announcement}\n          />\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\nexport default InternalSelect;\n"]},"metadata":{},"sourceType":"module"}