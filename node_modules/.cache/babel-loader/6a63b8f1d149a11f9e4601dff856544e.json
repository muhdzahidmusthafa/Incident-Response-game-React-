{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useCallback, memo } from 'react';\nimport InternalFormField from '../../../form-field/internal';\nimport InternalMultiselect from '../../../multiselect/internal';\nimport { getBaseProps } from '../../base-component';\nimport SeriesMarker from '../chart-series-marker';\nimport styles from './styles.css.js';\nexport default memo(ChartFilter);\n\nfunction ChartFilter(_a) {\n  var series = _a.series,\n      i18nStrings = _a.i18nStrings,\n      selectedSeries = _a.selectedSeries,\n      onChange = _a.onChange,\n      restProps = __rest(_a, [\"series\", \"i18nStrings\", \"selectedSeries\", \"onChange\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var className = clsx(baseProps.className, styles.root);\n  var defaultOptions = series.map(function (d, i) {\n    return {\n      label: d.label,\n      value: '' + i,\n      datum: d.datum,\n      __customIcon: React.createElement(\"span\", {\n        className: styles['custom-icon-wrapper']\n      }, React.createElement(SeriesMarker, {\n        color: d.color,\n        type: d.type\n      }))\n    };\n  });\n  var selectedOptions = defaultOptions.filter(function (option) {\n    return (selectedSeries === null || selectedSeries === void 0 ? void 0 : selectedSeries.indexOf(option.datum)) !== -1;\n  });\n  var updateSelection = useCallback(function (_a) {\n    var selectedOptions = _a.detail.selectedOptions;\n    var selectedSeries = defaultOptions.filter(function (option) {\n      return selectedOptions.indexOf(option) !== -1;\n    }).map(function (option) {\n      return option.datum;\n    });\n    onChange(selectedSeries);\n  }, [onChange, defaultOptions]);\n  return React.createElement(InternalFormField, __assign({}, baseProps, {\n    label: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterLabel,\n    className: className\n  }), React.createElement(InternalMultiselect, {\n    placeholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterPlaceholder,\n    options: defaultOptions,\n    selectedOptions: selectedOptions,\n    onChange: updateSelection,\n    className: styles['chart-filter'],\n    selectedAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterSelectedAriaLabel,\n    hideTokens: true\n  }));\n}","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,IAA7B,QAAyC,OAAzC;AAGA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,SAA6BC,YAA7B,QAAiD,sBAAjD;AAEA,OAAOC,YAAP,MAAoD,wBAApD;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AAsBA,eAAeL,IAAI,CAACM,WAAD,CAAnB;;AAEA,SAASA,WAAT,CAAwBC,EAAxB,EAA4G;EAAlF,UAAM,YAAN;EAAA,IAAQC,WAAW,iBAAnB;EAAA,IAAqBC,cAAc,oBAAnC;EAAA,IAAqCC,QAAQ,cAA7C;EAAA,IAAkDC,SAAS,cAA7D,uDAA6D,CAA3D;;EACxB,IAAMC,SAAS,GAAGT,YAAY,CAACQ,SAAD,CAA9B;EACA,IAAME,SAAS,GAAGhB,IAAI,CAACe,SAAS,CAACC,SAAX,EAAsBR,MAAM,CAACS,IAA7B,CAAtB;EAEA,IAAMC,cAAc,GAAGC,MAAM,CAACC,GAAP,CAAW,UAACC,CAAD,EAAIC,CAAJ,EAAK;IAAK,OAAC;MAC3CC,KAAK,EAAEF,CAAC,CAACE,KADkC;MAE3CC,KAAK,EAAE,KAAKF,CAF+B;MAG3CG,KAAK,EAAEJ,CAAC,CAACI,KAHkC;MAI3CC,YAAY,EACVzB;QAAMe,SAAS,EAAER,MAAM,CAAC,qBAAD;MAAvB,GACEP,oBAACM,YAAD,EAAa;QAACoB,KAAK,EAAEN,CAAC,CAACM,KAAV;QAAiBC,IAAI,EAAEP,CAAC,CAACO;MAAzB,CAAb,CADF;IALyC,CAAD;EAS1C,CATqB,CAAvB;EAWA,IAAMC,eAAe,GAAGX,cAAc,CAACY,MAAf,CAAsB,kBAAM;IAAI,sBAAc,SAAd,kBAAc,WAAd,GAAc,MAAd,iBAAc,CAAEC,OAAhB,CAAwBC,MAAM,CAACP,KAA/B,OAA0C,CAAC,CAA3C;EAA4C,CAA5E,CAAxB;EAEA,IAAMQ,eAAe,GAAG/B,WAAW,CACjC,UAACQ,EAAD,EAAgC;QAAnBmB,eAAe;IAC1B,IAAMjB,cAAc,GAAGM,cAAc,CAClCY,MADoB,CACb,kBAAM;MAAI,sBAAe,CAACC,OAAhB,CAAwBC,MAAxB,MAAoC,CAAC,CAArC;IAAsC,CADnC,EAEpBZ,GAFoB,CAEhB,kBAAM;MAAI,aAAM,CAACK,KAAP;IAAY,CAFN,CAAvB;IAGAZ,QAAQ,CAACD,cAAD,CAAR;EACD,CANgC,EAOjC,CAACC,QAAD,EAAWK,cAAX,CAPiC,CAAnC;EAUA,OACEjB,oBAACG,iBAAD,EAAkB8B,aAAKnB,SAAL,EAAc;IAAEQ,KAAK,EAAEZ,WAAW,SAAX,eAAW,WAAX,GAAW,MAAX,cAAW,CAAEwB,WAAtB;IAAmCnB,SAAS,EAAEA;EAA9C,CAAd,CAAlB,EACEf,oBAACI,mBAAD,EAAoB;IAClB+B,WAAW,EAAEzB,WAAW,SAAX,eAAW,WAAX,GAAW,MAAX,cAAW,CAAE0B,iBADR;IAElBC,OAAO,EAAEpB,cAFS;IAGlBW,eAAe,EAAEA,eAHC;IAIlBhB,QAAQ,EAAEoB,eAJQ;IAKlBjB,SAAS,EAAER,MAAM,CAAC,cAAD,CALC;IAMlB+B,iBAAiB,EAAE5B,WAAW,SAAX,eAAW,WAAX,GAAW,MAAX,cAAW,CAAE6B,uBANd;IAOlBC,UAAU,EAAE;EAPM,CAApB,CADF,CADF;AAaD","names":["clsx","React","useCallback","memo","InternalFormField","InternalMultiselect","getBaseProps","SeriesMarker","styles","ChartFilter","_a","i18nStrings","selectedSeries","onChange","restProps","baseProps","className","root","defaultOptions","series","map","d","i","label","value","datum","__customIcon","color","type","selectedOptions","filter","indexOf","option","updateSelection","__assign","filterLabel","placeholder","filterPlaceholder","options","selectedAriaLabel","filterSelectedAriaLabel","hideTokens"],"sourceRoot":"","sources":["../../../../../src/internal/components/chart-filter/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, memo } from 'react';\n\nimport { NonCancelableEventHandler } from '../../events';\nimport InternalFormField from '../../../form-field/internal';\nimport InternalMultiselect from '../../../multiselect/internal';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport { MultiselectProps } from '../../../multiselect/interfaces';\nimport SeriesMarker, { ChartSeriesMarkerType } from '../chart-series-marker';\n\nimport styles from './styles.css.js';\n\ninterface I18nStrings {\n  filterLabel?: string;\n  filterPlaceholder?: string;\n  filterSelectedAriaLabel?: string;\n}\n\nexport interface ChartFilterItem<T> {\n  label: string;\n  color: string;\n  type: ChartSeriesMarkerType;\n  datum: T;\n}\n\nexport interface ChartFilterProps<T> extends BaseComponentProps {\n  series: ReadonlyArray<ChartFilterItem<T>>;\n  selectedSeries?: ReadonlyArray<T>;\n  onChange: (selectedSeries: ReadonlyArray<T>) => void;\n  i18nStrings?: I18nStrings;\n}\n\nexport default memo(ChartFilter) as typeof ChartFilter;\n\nfunction ChartFilter<T>({ series, i18nStrings, selectedSeries, onChange, ...restProps }: ChartFilterProps<T>) {\n  const baseProps = getBaseProps(restProps);\n  const className = clsx(baseProps.className, styles.root);\n\n  const defaultOptions = series.map((d, i) => ({\n    label: d.label,\n    value: '' + i,\n    datum: d.datum,\n    __customIcon: (\n      <span className={styles['custom-icon-wrapper']}>\n        <SeriesMarker color={d.color} type={d.type} />\n      </span>\n    ),\n  }));\n\n  const selectedOptions = defaultOptions.filter(option => selectedSeries?.indexOf(option.datum) !== -1);\n\n  const updateSelection = useCallback<NonCancelableEventHandler<MultiselectProps.MultiselectChangeDetail>>(\n    ({ detail: { selectedOptions } }) => {\n      const selectedSeries = defaultOptions\n        .filter(option => selectedOptions.indexOf(option) !== -1)\n        .map(option => option.datum);\n      onChange(selectedSeries);\n    },\n    [onChange, defaultOptions]\n  );\n\n  return (\n    <InternalFormField {...baseProps} label={i18nStrings?.filterLabel} className={className}>\n      <InternalMultiselect\n        placeholder={i18nStrings?.filterPlaceholder}\n        options={defaultOptions}\n        selectedOptions={selectedOptions}\n        onChange={updateSelection}\n        className={styles['chart-filter']}\n        selectedAriaLabel={i18nStrings?.filterSelectedAriaLabel}\n        hideTokens={true}\n      />\n    </InternalFormField>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}