{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport styles from './styles.css.js';\nimport InternalBox from '../../../box/internal';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport InternalExpandableSection from '../../../expandable-section/internal';\n\nfunction getStatusIndicatorType(taskIndex, currentTaskIndex) {\n  if (taskIndex < currentTaskIndex) {\n    return 'success';\n  }\n\n  if (taskIndex === currentTaskIndex) {\n    return 'in-progress';\n  }\n\n  return 'pending';\n}\n\nexport function Task(_a) {\n  var task = _a.task,\n      taskIndex = _a.taskIndex,\n      currentTaskIndex = _a.currentTaskIndex,\n      expanded = _a.expanded,\n      onToggleExpand = _a.onToggleExpand,\n      i18nStrings = _a.i18nStrings;\n  var statusIndicatorType = getStatusIndicatorType(taskIndex, currentTaskIndex);\n  var onExpandChange = useCallback(function () {\n    onToggleExpand(taskIndex);\n  }, [onToggleExpand, taskIndex]);\n  return React.createElement(\"li\", {\n    className: styles.task\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xxs\"\n  }, React.createElement(\"div\", {\n    className: styles['task-title']\n  }, React.createElement(InternalStatusIndicator, {\n    __size: \"inherit\",\n    type: statusIndicatorType,\n    iconAriaLabel: i18nStrings.labelsTaskStatus[statusIndicatorType],\n    className: styles['task-title--status']\n  }), React.createElement(InternalBox, {\n    variant: \"h3\",\n    padding: {\n      left: 'xxxs',\n      vertical: 'n'\n    },\n    fontSize: \"heading-s\",\n    color: taskIndex < currentTaskIndex ? 'text-status-success' : 'text-status-inactive'\n  }, i18nStrings.taskTitle(taskIndex, task.title))), React.createElement(\"div\", {\n    className: styles['expandable-section-wrapper']\n  }, React.createElement(InternalExpandableSection, {\n    header: React.createElement(\"span\", {\n      className: styles['expandable-section-header']\n    }, i18nStrings.labelTotalSteps(task.steps.length)),\n    expanded: expanded,\n    onChange: onExpandChange\n  }, React.createElement(\"ol\", {\n    className: styles['step-list']\n  }, task.steps.map(function (step, stepIndex) {\n    return React.createElement(\"li\", {\n      key: stepIndex,\n      className: styles.step\n    }, React.createElement(InternalBox, {\n      color: \"text-body-secondary\",\n      fontSize: \"body-m\",\n      padding: {\n        left: 'l'\n      },\n      className: styles['step-title']\n    }, i18nStrings.stepTitle(stepIndex, step.title)));\n  }))))));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AACA,OAAOC,yBAAP,MAAsC,sCAAtC;;AAEA,SAASC,sBAAT,CAAgCC,SAAhC,EAAmDC,gBAAnD,EAA2E;EACzE,IAAID,SAAS,GAAGC,gBAAhB,EAAkC;IAChC,OAAO,SAAP;EACD;;EACD,IAAID,SAAS,KAAKC,gBAAlB,EAAoC;IAClC,OAAO,aAAP;EACD;;EACD,OAAO,SAAP;AACD;;AAWD,OAAM,SAAUC,IAAV,CAAeC,EAAf,EAAsG;MAArFC,IAAI;MAAEJ,SAAS;MAAEC,gBAAgB;MAAEI,QAAQ;MAAEC,cAAc;MAAEC,WAAW;EAC7F,IAAMC,mBAAmB,GAAGT,sBAAsB,CAACC,SAAD,EAAYC,gBAAZ,CAAlD;EAEA,IAAMQ,cAAc,GAAGhB,WAAW,CAAC;IACjCa,cAAc,CAACN,SAAD,CAAd;EACD,CAFiC,EAE/B,CAACM,cAAD,EAAiBN,SAAjB,CAF+B,CAAlC;EAIA,OACER;IAAIkB,SAAS,EAAEhB,MAAM,CAACU;EAAtB,GACEZ,oBAACK,oBAAD,EAAqB;IAACc,IAAI,EAAC;EAAN,CAArB,EACEnB;IAAKkB,SAAS,EAAEhB,MAAM,CAAC,YAAD;EAAtB,GACEF,oBAACI,uBAAD,EAAwB;IACtBgB,MAAM,EAAC,SADe;IAEtBC,IAAI,EAAEL,mBAFgB;IAGtBM,aAAa,EAAEP,WAAW,CAACQ,gBAAZ,CAA6BP,mBAA7B,CAHO;IAItBE,SAAS,EAAEhB,MAAM,CAAC,oBAAD;EAJK,CAAxB,CADF,EAQEF,oBAACG,WAAD,EAAY;IACVqB,OAAO,EAAC,IADE;IAEVC,OAAO,EAAE;MAAEC,IAAI,EAAE,MAAR;MAAgBC,QAAQ,EAAE;IAA1B,CAFC;IAGVC,QAAQ,EAAC,WAHC;IAIVC,KAAK,EAAErB,SAAS,GAAGC,gBAAZ,GAA+B,qBAA/B,GAAuD;EAJpD,CAAZ,EAMGM,WAAW,CAACe,SAAZ,CAAsBtB,SAAtB,EAAiCI,IAAI,CAACmB,KAAtC,CANH,CARF,CADF,EAmBE/B;IAAKkB,SAAS,EAAEhB,MAAM,CAAC,4BAAD;EAAtB,GACEF,oBAACM,yBAAD,EAA0B;IACxB0B,MAAM,EACJhC;MAAMkB,SAAS,EAAEhB,MAAM,CAAC,2BAAD;IAAvB,GACGa,WAAW,CAACkB,eAAZ,CAA4BrB,IAAI,CAACsB,KAAL,CAAWC,MAAvC,CADH,CAFsB;IAMxBtB,QAAQ,EAAEA,QANc;IAOxBuB,QAAQ,EAAEnB;EAPc,CAA1B,EASEjB;IAAIkB,SAAS,EAAEhB,MAAM,CAAC,WAAD;EAArB,GACGU,IAAI,CAACsB,KAAL,CAAWG,GAAX,CAAe,UAACC,IAAD,EAAOC,SAAP,EAAgB;IAAK,OACnCvC;MAAIwC,GAAG,EAAED,SAAT;MAAoBrB,SAAS,EAAEhB,MAAM,CAACoC;IAAtC,GACEtC,oBAACG,WAAD,EAAY;MACV0B,KAAK,EAAC,qBADI;MAEVD,QAAQ,EAAC,QAFC;MAGVH,OAAO,EAAE;QAAEC,IAAI,EAAE;MAAR,CAHC;MAIVR,SAAS,EAAEhB,MAAM,CAAC,YAAD;IAJP,CAAZ,EAMGa,WAAW,CAAC0B,SAAZ,CAAsBF,SAAtB,EAAiCD,IAAI,CAACP,KAAtC,CANH,CADF,CADmC;EAWpC,CAXA,CADH,CATF,CADF,CAnBF,CADF,CADF;AAkDD","names":["React","useCallback","styles","InternalBox","InternalStatusIndicator","InternalSpaceBetween","InternalExpandableSection","getStatusIndicatorType","taskIndex","currentTaskIndex","Task","_a","task","expanded","onToggleExpand","i18nStrings","statusIndicatorType","onExpandChange","className","size","__size","type","iconAriaLabel","labelsTaskStatus","variant","padding","left","vertical","fontSize","color","taskTitle","title","header","labelTotalSteps","steps","length","onChange","map","step","stepIndex","key","stepTitle"],"sourceRoot":"","sources":["../../../../../src/tutorial-panel/components/tutorial-detail-view/task.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport styles from './styles.css.js';\nimport { TutorialPanelProps } from '../../interfaces';\nimport InternalBox from '../../../box/internal';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport InternalSpaceBetween from '../../../space-between/internal';\nimport InternalExpandableSection from '../../../expandable-section/internal';\n\nfunction getStatusIndicatorType(taskIndex: number, currentTaskIndex: number) {\n  if (taskIndex < currentTaskIndex) {\n    return 'success';\n  }\n  if (taskIndex === currentTaskIndex) {\n    return 'in-progress';\n  }\n  return 'pending';\n}\n\ninterface TaskProps {\n  task: TutorialPanelProps.Task;\n  taskIndex: number;\n  currentTaskIndex: number;\n  expanded: boolean;\n  onToggleExpand: (step: number) => void;\n  i18nStrings: TutorialPanelProps['i18nStrings'];\n}\n\nexport function Task({ task, taskIndex, currentTaskIndex, expanded, onToggleExpand, i18nStrings }: TaskProps) {\n  const statusIndicatorType = getStatusIndicatorType(taskIndex, currentTaskIndex);\n\n  const onExpandChange = useCallback(() => {\n    onToggleExpand(taskIndex);\n  }, [onToggleExpand, taskIndex]);\n\n  return (\n    <li className={styles.task}>\n      <InternalSpaceBetween size=\"xxs\">\n        <div className={styles['task-title']}>\n          <InternalStatusIndicator\n            __size=\"inherit\"\n            type={statusIndicatorType}\n            iconAriaLabel={i18nStrings.labelsTaskStatus[statusIndicatorType]}\n            className={styles['task-title--status']}\n          />\n\n          <InternalBox\n            variant=\"h3\"\n            padding={{ left: 'xxxs', vertical: 'n' }}\n            fontSize=\"heading-s\"\n            color={taskIndex < currentTaskIndex ? 'text-status-success' : 'text-status-inactive'}\n          >\n            {i18nStrings.taskTitle(taskIndex, task.title)}\n          </InternalBox>\n        </div>\n\n        <div className={styles['expandable-section-wrapper']}>\n          <InternalExpandableSection\n            header={\n              <span className={styles['expandable-section-header']}>\n                {i18nStrings.labelTotalSteps(task.steps.length)}\n              </span>\n            }\n            expanded={expanded}\n            onChange={onExpandChange}\n          >\n            <ol className={styles['step-list']}>\n              {task.steps.map((step, stepIndex) => (\n                <li key={stepIndex} className={styles.step}>\n                  <InternalBox\n                    color=\"text-body-secondary\"\n                    fontSize=\"body-m\"\n                    padding={{ left: 'l' }}\n                    className={styles['step-title']}\n                  >\n                    {i18nStrings.stepTitle(stepIndex, step.title)}\n                  </InternalBox>\n                </li>\n              ))}\n            </ol>\n          </InternalExpandableSection>\n        </div>\n      </InternalSpaceBetween>\n    </li>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}