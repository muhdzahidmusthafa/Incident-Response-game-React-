{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport React from 'react';\nimport InternalIcon from '../../../icon/internal';\nimport HighlightMatch from './highlight-match';\nexport var Label = function (_a) {\n  var label = _a.label,\n      prefix = _a.prefix,\n      highlightText = _a.highlightText,\n      triggerVariant = _a.triggerVariant;\n  return React.createElement(\"span\", {\n    className: clsx(styles.label, triggerVariant && styles['trigger-variant'])\n  }, prefix && React.createElement(\"span\", {\n    className: clsx(styles['label-prefix'], triggerVariant && styles['trigger-variant'])\n  }, prefix, \" \"), React.createElement(HighlightMatch, {\n    str: label,\n    highlightText: highlightText\n  }));\n};\nexport var LabelTag = function (_a) {\n  var labelTag = _a.labelTag,\n      highlightText = _a.highlightText,\n      triggerVariant = _a.triggerVariant;\n  return labelTag ? React.createElement(\"span\", {\n    className: clsx(styles['label-tag'], triggerVariant && styles['trigger-variant'])\n  }, React.createElement(HighlightMatch, {\n    str: labelTag,\n    highlightText: highlightText\n  })) : null;\n};\nexport var Description = function (_a) {\n  var description = _a.description,\n      highlightText = _a.highlightText,\n      triggerVariant = _a.triggerVariant;\n  return description ? // We do not reach AA compliance in Dark mode for highlighted state\n  // TODO: Remove aria-disabled={true} when we fix AWSUI-10333\n  React.createElement(\"span\", {\n    className: clsx(styles.description, triggerVariant && styles['trigger-variant']),\n    \"aria-disabled\": true\n  }, React.createElement(HighlightMatch, {\n    str: description,\n    highlightText: highlightText\n  })) : null;\n};\nexport var Tags = function (_a) {\n  var tags = _a.tags,\n      highlightText = _a.highlightText,\n      triggerVariant = _a.triggerVariant;\n  return tags ? React.createElement(\"span\", {\n    className: clsx(styles.tags)\n  }, tags.map(function (tag, idx) {\n    return (// We do not reach AA compliance in Dark mode for highlighted state\n      // TODO: Remove aria-disabled={true} when we fix AWSUI-10333\n      React.createElement(\"span\", {\n        key: idx,\n        className: clsx(styles.tag, triggerVariant && styles['trigger-variant']),\n        \"aria-disabled\": true\n      }, React.createElement(HighlightMatch, {\n        str: tag,\n        highlightText: highlightText\n      }))\n    );\n  })) : null;\n};\nexport var FilteringTags = function (_a) {\n  var filteringTags = _a.filteringTags,\n      highlightText = _a.highlightText,\n      triggerVariant = _a.triggerVariant;\n\n  if (!highlightText || !filteringTags) {\n    return null;\n  }\n\n  var searchElement = highlightText.toLowerCase();\n  return React.createElement(\"span\", {\n    className: clsx(styles.tags)\n  }, filteringTags.map(function (filteringTag, key) {\n    var match = filteringTag.toLowerCase().indexOf(searchElement) !== -1;\n\n    if (match) {\n      return (// We do not reach AA compliance in Dark mode for highlighted state\n        // TODO: Remove aria-disabled={true} when we fix AWSUI-10333\n        React.createElement(\"span\", {\n          className: clsx(styles.tag, triggerVariant && styles['trigger-variant']),\n          key: key,\n          \"aria-disabled\": true\n        }, React.createElement(HighlightMatch, {\n          str: filteringTag,\n          highlightText: highlightText\n        }))\n      );\n    }\n\n    return null;\n  }));\n};\nexport var OptionIcon = function (props) {\n  if (!props.name && !props.url && !props.svg) {\n    return null;\n  }\n\n  return React.createElement(\"span\", {\n    className: clsx(styles.icon, props.size === 'big' && [styles[\"icon-size-big\"]])\n  }, React.createElement(InternalIcon, __assign({}, props)));\n};","map":{"version":3,"mappings":"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","names":["styles","clsx","React","InternalIcon","HighlightMatch","Label","_a","label","prefix","highlightText","triggerVariant","className","str","LabelTag","labelTag","Description","description","Tags","tags","map","tag","idx","key","FilteringTags","filteringTags","searchElement","toLowerCase","filteringTag","match","indexOf","OptionIcon","props","name","url","svg","icon","size","__assign"],"sourceRoot":"","sources":["../../../../../src/internal/components/option/option-parts.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { IconProps } from '../../../icon/interfaces';\nimport InternalIcon from '../../../icon/internal';\nimport HighlightMatch from './highlight-match';\n\ninterface LabelProps {\n  label?: string;\n  prefix?: string;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const Label = ({ label, prefix, highlightText, triggerVariant }: LabelProps) => (\n  <span className={clsx(styles.label, triggerVariant && styles['trigger-variant'])}>\n    {prefix && (\n      <span className={clsx(styles['label-prefix'], triggerVariant && styles['trigger-variant'])}>{prefix} </span>\n    )}\n    <HighlightMatch str={label} highlightText={highlightText} />\n  </span>\n);\n\ninterface LabelTagProps {\n  labelTag?: string;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const LabelTag = ({ labelTag, highlightText, triggerVariant }: LabelTagProps) =>\n  labelTag ? (\n    <span className={clsx(styles['label-tag'], triggerVariant && styles['trigger-variant'])}>\n      <HighlightMatch str={labelTag} highlightText={highlightText} />\n    </span>\n  ) : null;\n\ninterface DescriptionProps {\n  description?: string;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const Description = ({ description, highlightText, triggerVariant }: DescriptionProps) =>\n  description ? (\n    // We do not reach AA compliance in Dark mode for highlighted state\n    // TODO: Remove aria-disabled={true} when we fix AWSUI-10333\n    <span className={clsx(styles.description, triggerVariant && styles['trigger-variant'])} aria-disabled={true}>\n      <HighlightMatch str={description} highlightText={highlightText} />\n    </span>\n  ) : null;\n\ninterface TagsProps {\n  tags?: ReadonlyArray<string>;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const Tags = ({ tags, highlightText, triggerVariant }: TagsProps) =>\n  tags ? (\n    <span className={clsx(styles.tags)}>\n      {tags.map((tag, idx) => (\n        // We do not reach AA compliance in Dark mode for highlighted state\n        // TODO: Remove aria-disabled={true} when we fix AWSUI-10333\n        <span key={idx} className={clsx(styles.tag, triggerVariant && styles['trigger-variant'])} aria-disabled={true}>\n          <HighlightMatch str={tag} highlightText={highlightText} />\n        </span>\n      ))}\n    </span>\n  ) : null;\n\ninterface FilteringTagProps {\n  filteringTags?: ReadonlyArray<string>;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const FilteringTags = ({ filteringTags, highlightText, triggerVariant }: FilteringTagProps) => {\n  if (!highlightText || !filteringTags) {\n    return null;\n  }\n\n  const searchElement = highlightText.toLowerCase();\n\n  return (\n    <span className={clsx(styles.tags)}>\n      {filteringTags.map((filteringTag, key) => {\n        const match = filteringTag.toLowerCase().indexOf(searchElement) !== -1;\n        if (match) {\n          return (\n            // We do not reach AA compliance in Dark mode for highlighted state\n            // TODO: Remove aria-disabled={true} when we fix AWSUI-10333\n            <span\n              className={clsx(styles.tag, triggerVariant && styles['trigger-variant'])}\n              key={key}\n              aria-disabled={true}\n            >\n              <HighlightMatch str={filteringTag} highlightText={highlightText} />\n            </span>\n          );\n        }\n        return null;\n      })}\n    </span>\n  );\n};\n\nexport const OptionIcon = (props: IconProps) => {\n  if (!props.name && !props.url && !props.svg) {\n    return null;\n  }\n\n  return (\n    <span className={clsx(styles.icon, props.size === 'big' && [styles[`icon-size-big`]])}>\n      <InternalIcon {...props} />\n    </span>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}