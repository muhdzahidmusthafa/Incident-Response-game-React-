{"ast":null,"code":"import { __assign, __rest, __spreadArray } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useMemo } from 'react';\nimport { filterOptions } from './utils/utils';\nimport { KeyCode } from '../internal/keycode';\nimport { generateTestIndexes } from '../internal/components/options-list/utils/test-indexes';\nvar parentMap = new WeakMap();\nexport var getParentGroup = function (item) {\n  return parentMap.get(item);\n};\nexport var useAutosuggestItems = function (options) {\n  if (options === void 0) {\n    options = [];\n  }\n\n  return useMemo(function () {\n    return createItems(options);\n  }, [options]);\n};\n\nfunction createItems(options) {\n  var items = [];\n\n  for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {\n    var option = options_1[_i];\n\n    if (isGroup(option)) {\n      items.push.apply(items, flattenGroup(option));\n    } else {\n      items.push(__assign(__assign({}, option), {\n        option: option\n      }));\n    }\n  }\n\n  return items;\n}\n\nfunction isGroup(optionOrGroup) {\n  return 'options' in optionOrGroup;\n}\n\nfunction flattenGroup(group) {\n  var options = group.options,\n      rest = __rest(group, [\"options\"]);\n\n  var hasOnlyDisabledChildren = options.every(function (option) {\n    return option.disabled;\n  });\n\n  var parent = __assign(__assign({}, rest), {\n    type: 'parent',\n    disabled: rest.disabled || hasOnlyDisabledChildren,\n    option: group\n  });\n\n  var children = options.map(function (option) {\n    return __assign(__assign({}, option), {\n      type: 'child',\n      disabled: option.disabled || parent.disabled,\n      option: option\n    });\n  }); // TODO: Refactor parentMap and remove this side effect\n\n  children.forEach(function (child) {\n    return parentMap.set(child, __assign(__assign({}, group), {\n      option: group\n    }));\n  });\n  return [parent].concat(children);\n}\n\nexport var useFilteredItems = function (autosuggestItems, value, filterText, filteringType, showAll, __hideEnteredTextLabel) {\n  return useMemo(function () {\n    var filteredItems = filteringType === 'auto' && !showAll ? filterOptions(autosuggestItems, filterText) : __spreadArray([], autosuggestItems, true);\n\n    if (value && !__hideEnteredTextLabel) {\n      filteredItems.unshift({\n        value: value,\n        type: 'use-entered',\n        option: {\n          value: value\n        }\n      });\n    }\n\n    generateTestIndexes(filteredItems, getParentGroup);\n    return filteredItems;\n  }, [autosuggestItems, value, filterText, filteringType, showAll, __hideEnteredTextLabel]);\n};\nexport var useSelectVisibleOption = function (filteredItems, selectOption, isInteractive) {\n  return useCallback(function (index) {\n    var option = filteredItems[index];\n\n    if (option && isInteractive(option)) {\n      selectOption(option);\n    }\n  }, [filteredItems, selectOption, isInteractive]);\n};\nexport var useHighlightVisibleOption = function (filteredItems, setHighlightedIndex, isHighlightable) {\n  return useCallback(function (index) {\n    var option = filteredItems[index];\n\n    if (option && isHighlightable(option)) {\n      setHighlightedIndex(index);\n    }\n  }, [filteredItems, setHighlightedIndex, isHighlightable]);\n};\nexport var useKeyboardHandler = function (moveHighlight, openDropdown, selectHighlighted, usingMouse, open, onKeyDown) {\n  return useCallback(function (e) {\n    switch (e.detail.keyCode) {\n      case KeyCode.down:\n        {\n          moveHighlight(1);\n          openDropdown();\n          usingMouse.current = false;\n          e.preventDefault();\n          break;\n        }\n\n      case KeyCode.up:\n        {\n          moveHighlight(-1);\n          openDropdown();\n          usingMouse.current = false;\n          e.preventDefault();\n          break;\n        }\n\n      case KeyCode.enter:\n        {\n          if (open) {\n            selectHighlighted();\n            e.preventDefault();\n          }\n\n          onKeyDown && onKeyDown(e);\n          break;\n        }\n\n      default:\n        {\n          onKeyDown && onKeyDown(e);\n        }\n    }\n  }, [moveHighlight, selectHighlighted, onKeyDown, usingMouse, open, openDropdown]);\n};","map":{"version":3,"mappings":"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","names":["useCallback","useMemo","filterOptions","KeyCode","generateTestIndexes","parentMap","WeakMap","getParentGroup","item","get","useAutosuggestItems","options","createItems","items","_i","option","isGroup","push","apply","flattenGroup","__assign","optionOrGroup","group","rest","hasOnlyDisabledChildren","every","disabled","parent","type","children","map","forEach","set","child","concat","useFilteredItems","autosuggestItems","value","filterText","filteringType","showAll","__hideEnteredTextLabel","filteredItems","__spreadArray","unshift","useSelectVisibleOption","selectOption","isInteractive","index","useHighlightVisibleOption","setHighlightedIndex","isHighlightable","useKeyboardHandler","moveHighlight","openDropdown","selectHighlighted","usingMouse","open","onKeyDown","e","detail","keyCode","down","current","preventDefault","up","enter"],"sourceRoot":"","sources":["../../../src/autosuggest/controller.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useMemo } from 'react';\nimport { CancelableEventHandler, BaseKeyDetail } from '../internal/events';\nimport { filterOptions } from './utils/utils';\nimport { KeyCode } from '../internal/keycode';\nimport { generateTestIndexes } from '../internal/components/options-list/utils/test-indexes';\nimport { AutosuggestItem, AutosuggestProps } from './interfaces';\n\ntype Options = AutosuggestProps.Options;\n\nconst parentMap = new WeakMap<AutosuggestItem, AutosuggestItem>();\nexport const getParentGroup = (item: AutosuggestItem) => parentMap.get(item);\n\nexport const useAutosuggestItems = (options: Options = []) => {\n  return useMemo(() => createItems(options), [options]);\n};\n\nfunction createItems(options: Options): AutosuggestItem[] {\n  const items: AutosuggestItem[] = [];\n  for (const option of options) {\n    if (isGroup(option)) {\n      items.push(...flattenGroup(option));\n    } else {\n      items.push({ ...option, option });\n    }\n  }\n  return items;\n}\n\nfunction isGroup(optionOrGroup: AutosuggestProps.Option): optionOrGroup is AutosuggestProps.OptionGroup {\n  return 'options' in optionOrGroup;\n}\n\nfunction flattenGroup(group: AutosuggestProps.OptionGroup): AutosuggestItem[] {\n  const { options, ...rest } = group;\n  const hasOnlyDisabledChildren = options.every(option => option.disabled);\n  const parent: AutosuggestItem = {\n    ...rest,\n    type: 'parent',\n    disabled: rest.disabled || hasOnlyDisabledChildren,\n    option: group,\n  };\n  const children: AutosuggestItem[] = options.map(option => ({\n    ...option,\n    type: 'child',\n    disabled: option.disabled || parent.disabled,\n    option,\n  }));\n  // TODO: Refactor parentMap and remove this side effect\n  children.forEach(child => parentMap.set(child, { ...group, option: group }));\n  return [parent].concat(children);\n}\n\nexport const useFilteredItems = (\n  autosuggestItems: AutosuggestItem[],\n  value: string,\n  filterText: string,\n  filteringType: AutosuggestProps.FilteringType,\n  showAll: boolean,\n  __hideEnteredTextLabel?: boolean\n) =>\n  useMemo(() => {\n    const filteredItems =\n      filteringType === 'auto' && !showAll ? filterOptions(autosuggestItems, filterText) : [...autosuggestItems];\n    if (value && !__hideEnteredTextLabel) {\n      filteredItems.unshift({ value, type: 'use-entered', option: { value } });\n    }\n    generateTestIndexes(filteredItems, getParentGroup);\n    return filteredItems;\n  }, [autosuggestItems, value, filterText, filteringType, showAll, __hideEnteredTextLabel]);\n\nexport const useSelectVisibleOption = (\n  filteredItems: AutosuggestItem[],\n  selectOption: (option: AutosuggestItem) => void,\n  isInteractive: (option: AutosuggestItem) => boolean\n) =>\n  useCallback(\n    (index: number) => {\n      const option = filteredItems[index];\n      if (option && isInteractive(option)) {\n        selectOption(option);\n      }\n    },\n    [filteredItems, selectOption, isInteractive]\n  );\n\nexport const useHighlightVisibleOption = (\n  filteredItems: AutosuggestItem[],\n  setHighlightedIndex: (index: number) => void,\n  isHighlightable: (option: AutosuggestItem) => boolean\n) =>\n  useCallback(\n    (index: number) => {\n      const option = filteredItems[index];\n      if (option && isHighlightable(option)) {\n        setHighlightedIndex(index);\n      }\n    },\n    [filteredItems, setHighlightedIndex, isHighlightable]\n  );\n\nexport const useKeyboardHandler = (\n  moveHighlight: (direction: -1 | 1) => void,\n  openDropdown: () => void,\n  selectHighlighted: () => void,\n  usingMouse: React.MutableRefObject<boolean>,\n  open: boolean,\n  onKeyDown?: CancelableEventHandler<BaseKeyDetail>\n) => {\n  return useCallback(\n    (e: CustomEvent<BaseKeyDetail>) => {\n      switch (e.detail.keyCode) {\n        case KeyCode.down: {\n          moveHighlight(1);\n          openDropdown();\n          usingMouse.current = false;\n          e.preventDefault();\n          break;\n        }\n        case KeyCode.up: {\n          moveHighlight(-1);\n          openDropdown();\n          usingMouse.current = false;\n          e.preventDefault();\n          break;\n        }\n        case KeyCode.enter: {\n          if (open) {\n            selectHighlighted();\n            e.preventDefault();\n          }\n          onKeyDown && onKeyDown(e);\n          break;\n        }\n        default: {\n          onKeyDown && onKeyDown(e);\n        }\n      }\n    },\n    [moveHighlight, selectHighlighted, onKeyDown, usingMouse, open, openDropdown]\n  );\n};\n"]},"metadata":{},"sourceType":"module"}