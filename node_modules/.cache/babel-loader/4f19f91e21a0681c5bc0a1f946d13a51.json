{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { TICK_LENGTH, TICK_LINE_HEIGHT, TICK_MARGIN } from './constants';\nimport styles from './styles.css.js';\nimport { formatTicks, getVisibleTicks } from './label-utils';\nexport default memo(BottomLabels); // Renders the visible tick labels on the bottom axis, as well as their grid lines.\n\nfunction BottomLabels(_a) {\n  var _b = _a.axis,\n      axis = _b === void 0 ? 'x' : _b,\n      width = _a.width,\n      height = _a.height,\n      scale = _a.scale,\n      ticks = _a.ticks,\n      tickFormatter = _a.tickFormatter,\n      title = _a.title,\n      ariaRoleDescription = _a.ariaRoleDescription,\n      autoHeight = _a.autoHeight,\n      _c = _a.offsetLeft,\n      offsetLeft = _c === void 0 ? 0 : _c,\n      _d = _a.offsetRight,\n      offsetRight = _d === void 0 ? 0 : _d;\n  var virtualTextRef = useRef(null);\n  var xOffset = scale.isCategorical() && axis === 'x' ? Math.max(0, scale.d3Scale.bandwidth() - 1) / 2 : 0;\n  var cacheRef = useRef({});\n\n  var getLabelSpace = function (label) {\n    if (cacheRef.current[label] !== undefined) {\n      return cacheRef.current[label];\n    }\n\n    if (virtualTextRef.current && virtualTextRef.current.getComputedTextLength) {\n      virtualTextRef.current.textContent = label;\n      cacheRef.current[label] = virtualTextRef.current.getComputedTextLength();\n      return cacheRef.current[label];\n    }\n\n    return 0;\n  };\n\n  var formattedTicks = formatTicks({\n    ticks: ticks,\n    scale: scale,\n    getLabelSpace: getLabelSpace,\n    tickFormatter: tickFormatter\n  });\n\n  if (virtualTextRef.current) {\n    virtualTextRef.current.textContent = '';\n  }\n\n  var from = 0 - offsetLeft - xOffset;\n  var until = width + offsetRight - xOffset;\n  var balanceLabels = axis === 'x' && scale.scaleType !== 'log';\n  var visibleTicks = getVisibleTicks(formattedTicks, from, until, balanceLabels);\n  var maxHeight = TICK_LENGTH + TICK_MARGIN;\n\n  for (var _i = 0, formattedTicks_1 = formattedTicks; _i < formattedTicks_1.length; _i++) {\n    var lines = formattedTicks_1[_i].lines;\n    maxHeight = Math.max(maxHeight, TICK_LENGTH + TICK_MARGIN + lines.length * TICK_LINE_HEIGHT);\n  } // Tell elements's height to the parent.\n\n\n  useEffect(function () {\n    autoHeight(maxHeight);\n  }, [autoHeight, maxHeight]);\n  return React.createElement(\"g\", {\n    transform: \"translate(0,\".concat(height, \")\"),\n    className: styles['labels-bottom'],\n    focusable: false,\n    \"aria-label\": title,\n    role: \"list\",\n    \"aria-roledescription\": ariaRoleDescription,\n    \"aria-hidden\": true\n  }, visibleTicks.map(function (_a, index) {\n    var _b;\n\n    var position = _a.position,\n        lines = _a.lines;\n    return isFinite(position) && React.createElement(\"g\", {\n      key: index,\n      transform: \"translate(\".concat(position + xOffset, \",0)\"),\n      className: clsx(styles.ticks, styles['ticks--bottom'], (_b = {}, _b[styles['ticks--x']] = axis === 'x', _b[styles['ticks--y']] = axis === 'y', _b)),\n      role: \"listitem\",\n      \"aria-label\": lines.join('\\n')\n    }, React.createElement(\"line\", {\n      className: styles.ticks__line,\n      x1: 0,\n      x2: 0,\n      y1: 0,\n      y2: TICK_LENGTH,\n      \"aria-hidden\": \"true\"\n    }), lines.map(function (line, lineIndex) {\n      return React.createElement(\"text\", {\n        className: styles.ticks__text,\n        key: lineIndex,\n        x: 0,\n        y: TICK_LENGTH + TICK_MARGIN + lineIndex * TICK_LINE_HEIGHT\n      }, line);\n    }));\n  }), React.createElement(\"text\", {\n    ref: virtualTextRef,\n    x: 0,\n    y: 0,\n    style: {\n      visibility: 'hidden'\n    },\n    \"aria-hidden\": \"true\"\n  }));\n}","map":{"version":3,"mappings":"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","names":["React","memo","useEffect","useRef","clsx","TICK_LENGTH","TICK_LINE_HEIGHT","TICK_MARGIN","styles","formatTicks","getVisibleTicks","BottomLabels","_a","_b","axis","width","height","scale","ticks","tickFormatter","title","ariaRoleDescription","autoHeight","_c","offsetLeft","_d","offsetRight","virtualTextRef","xOffset","isCategorical","Math","max","d3Scale","bandwidth","cacheRef","getLabelSpace","label","current","undefined","getComputedTextLength","textContent","formattedTicks","from","until","balanceLabels","scaleType","visibleTicks","maxHeight","_i","lines","length","transform","className","focusable","role","map","index","position","key","join","ticks__line","x1","x2","y1","y2","line","lineIndex","ticks__text","x","y","ref","style","visibility"],"sourceRoot":"","sources":["../../../../../src/internal/components/cartesian-chart/bottom-labels.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { ChartDataTypes } from './interfaces';\nimport { ChartScale, NumericChartScale } from './scales';\nimport { TICK_LENGTH, TICK_LINE_HEIGHT, TICK_MARGIN } from './constants';\n\nimport styles from './styles.css.js';\nimport { formatTicks, getVisibleTicks } from './label-utils';\n\ninterface BottomLabelsProps {\n  axis?: 'x' | 'y';\n  width: number;\n  height: number;\n  scale: ChartScale | NumericChartScale;\n  ticks: readonly ChartDataTypes[];\n  tickFormatter?: (value: ChartDataTypes) => string;\n  title?: string;\n  ariaRoleDescription?: string;\n  autoHeight: (value: number) => void;\n  offsetLeft?: number;\n  offsetRight?: number;\n}\n\nexport default memo(BottomLabels) as typeof BottomLabels;\n\n// Renders the visible tick labels on the bottom axis, as well as their grid lines.\nfunction BottomLabels({\n  axis = 'x',\n  width,\n  height,\n  scale,\n  ticks,\n  tickFormatter,\n  title,\n  ariaRoleDescription,\n  autoHeight,\n  offsetLeft = 0,\n  offsetRight = 0,\n}: BottomLabelsProps) {\n  const virtualTextRef = useRef<SVGTextElement>(null);\n\n  const xOffset = scale.isCategorical() && axis === 'x' ? Math.max(0, scale.d3Scale.bandwidth() - 1) / 2 : 0;\n\n  const cacheRef = useRef<{ [label: string]: number }>({});\n  const getLabelSpace = (label: string) => {\n    if (cacheRef.current[label] !== undefined) {\n      return cacheRef.current[label];\n    }\n    if (virtualTextRef.current && virtualTextRef.current.getComputedTextLength) {\n      virtualTextRef.current.textContent = label;\n      cacheRef.current[label] = virtualTextRef.current.getComputedTextLength();\n      return cacheRef.current[label];\n    }\n    return 0;\n  };\n\n  const formattedTicks = formatTicks({ ticks, scale, getLabelSpace, tickFormatter });\n\n  if (virtualTextRef.current) {\n    virtualTextRef.current.textContent = '';\n  }\n\n  const from = 0 - offsetLeft - xOffset;\n  const until = width + offsetRight - xOffset;\n  const balanceLabels = axis === 'x' && scale.scaleType !== 'log';\n  const visibleTicks = getVisibleTicks(formattedTicks, from, until, balanceLabels);\n\n  let maxHeight = TICK_LENGTH + TICK_MARGIN;\n  for (const { lines } of formattedTicks) {\n    maxHeight = Math.max(maxHeight, TICK_LENGTH + TICK_MARGIN + lines.length * TICK_LINE_HEIGHT);\n  }\n\n  // Tell elements's height to the parent.\n  useEffect(() => {\n    autoHeight(maxHeight);\n  }, [autoHeight, maxHeight]);\n\n  return (\n    <g\n      transform={`translate(0,${height})`}\n      className={styles['labels-bottom']}\n      focusable={false}\n      aria-label={title}\n      role=\"list\"\n      aria-roledescription={ariaRoleDescription}\n      aria-hidden={true}\n    >\n      {visibleTicks.map(\n        ({ position, lines }, index) =>\n          isFinite(position) && (\n            <g\n              key={index}\n              transform={`translate(${position + xOffset},0)`}\n              className={clsx(styles.ticks, styles['ticks--bottom'], {\n                [styles['ticks--x']]: axis === 'x',\n                [styles['ticks--y']]: axis === 'y',\n              })}\n              role=\"listitem\"\n              aria-label={lines.join('\\n')}\n            >\n              <line className={styles.ticks__line} x1={0} x2={0} y1={0} y2={TICK_LENGTH} aria-hidden=\"true\" />\n              {lines.map((line, lineIndex) => (\n                <text\n                  className={styles.ticks__text}\n                  key={lineIndex}\n                  x={0}\n                  y={TICK_LENGTH + TICK_MARGIN + lineIndex * TICK_LINE_HEIGHT}\n                >\n                  {line}\n                </text>\n              ))}\n            </g>\n          )\n      )}\n\n      <text ref={virtualTextRef} x={0} y={0} style={{ visibility: 'hidden' }} aria-hidden=\"true\"></text>\n    </g>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}