{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo } from 'react';\nimport { line, area } from 'd3-shape';\nexport default memo(AreaSeries);\n\nfunction AreaSeries(_a) {\n  var data = _a.data,\n      color = _a.color,\n      chartAreaClipPath = _a.chartAreaClipPath;\n  var areaGenerator = area().x(function (p) {\n    return p.scaled.x;\n  }).y0(function (p) {\n    return p.scaled.y0;\n  }).y1(function (p) {\n    return p.scaled.y1;\n  });\n  var areaPath = areaGenerator(data) || '';\n  var lineGenerator = line().x(function (p) {\n    return p.scaled.x;\n  }).y(function (p) {\n    return p.scaled.y1;\n  });\n  var linePath = lineGenerator(data) || '';\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    \"aria-hidden\": true,\n    fill: color,\n    stroke: color,\n    style: {\n      opacity: 0.4\n    },\n    clipPath: \"url(#\".concat(chartAreaClipPath, \")\"),\n    d: areaPath\n  }), React.createElement(\"path\", {\n    \"aria-hidden\": true,\n    stroke: color,\n    clipPath: \"url(#\".concat(chartAreaClipPath, \")\"),\n    d: linePath\n  }));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,UAA3B;AASA,eAAeF,IAAI,CAACG,UAAD,CAAnB;;AAEA,SAASA,UAAT,CAAuBC,EAAvB,EAA6E;MAApDC,IAAI;MAAEC,KAAK;MAAEC,iBAAiB;EACrD,IAAMC,aAAa,GAAGN,IAAI,GACvBO,CADmB,CACjB,UAACC,CAAD,EAA2B;IAAK,QAAC,CAACC,MAAF,CAASF,CAAT;EAAU,CADzB,EAEnBG,EAFmB,CAEhB,UAACF,CAAD,EAA2B;IAAK,QAAC,CAACC,MAAF,CAASC,EAAT;EAAW,CAF3B,EAGnBC,EAHmB,CAGhB,UAACH,CAAD,EAA2B;IAAK,QAAC,CAACC,MAAF,CAASE,EAAT;EAAW,CAH3B,CAAtB;EAIA,IAAMC,QAAQ,GAAGN,aAAa,CAACH,IAAD,CAAb,IAAoD,EAArE;EAEA,IAAMU,aAAa,GAAGd,IAAI,GACvBQ,CADmB,CACjB,UAACC,CAAD,EAA2B;IAAK,QAAC,CAACC,MAAF,CAASF,CAAT;EAAU,CADzB,EAEnBO,CAFmB,CAEjB,UAACN,CAAD,EAA2B;IAAK,QAAC,CAACC,MAAF,CAASE,EAAT;EAAW,CAF1B,CAAtB;EAGA,IAAMI,QAAQ,GAAGF,aAAa,CAACV,IAAD,CAAb,IAAoD,EAArE;EAEA,OACEN,0CACEA;IAAA,eACe,IADf;IAEEmB,IAAI,EAAEZ,KAFR;IAGEa,MAAM,EAAEb,KAHV;IAIEc,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAX,CAJT;IAKEC,QAAQ,EAAE,eAAQf,iBAAR,EAAyB,GAAzB,CALZ;IAMEgB,CAAC,EAAET;EANL,EADF,EASEf;IAAA,eAAmB,IAAnB;IAAyBoB,MAAM,EAAEb,KAAjC;IAAwCgB,QAAQ,EAAE,eAAQf,iBAAR,EAAyB,GAAzB,CAAlD;IAAgFgB,CAAC,EAAEN;EAAnF,EATF,CADF;AAaD","names":["React","memo","line","area","AreaSeries","_a","data","color","chartAreaClipPath","areaGenerator","x","p","scaled","y0","y1","areaPath","lineGenerator","y","linePath","fill","stroke","style","opacity","clipPath","d"],"sourceRoot":"","sources":["../../../../src/area-chart/elements/area-series.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo } from 'react';\nimport { line, area } from 'd3-shape';\nimport { ChartModel } from '../model';\n\nexport interface AreaSeriesProps<T> {\n  data: readonly ChartModel.PlotPoint<T>[];\n  color: string;\n  chartAreaClipPath: string;\n}\n\nexport default memo(AreaSeries) as typeof AreaSeries;\n\nfunction AreaSeries<T>({ data, color, chartAreaClipPath }: AreaSeriesProps<T>) {\n  const areaGenerator = area<ChartModel.PlotPoint<T>>()\n    .x((p: ChartModel.PlotPoint<T>) => p.scaled.x)\n    .y0((p: ChartModel.PlotPoint<T>) => p.scaled.y0)\n    .y1((p: ChartModel.PlotPoint<T>) => p.scaled.y1);\n  const areaPath = areaGenerator(data as ChartModel.PlotPoint<T>[]) || '';\n\n  const lineGenerator = line<ChartModel.PlotPoint<T>>()\n    .x((p: ChartModel.PlotPoint<T>) => p.scaled.x)\n    .y((p: ChartModel.PlotPoint<T>) => p.scaled.y1);\n  const linePath = lineGenerator(data as ChartModel.PlotPoint<T>[]) || '';\n\n  return (\n    <>\n      <path\n        aria-hidden={true}\n        fill={color}\n        stroke={color}\n        style={{ opacity: 0.4 }}\n        clipPath={`url(#${chartAreaClipPath})`}\n        d={areaPath}\n      />\n      <path aria-hidden={true} stroke={color} clipPath={`url(#${chartAreaClipPath})`} d={linePath} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}