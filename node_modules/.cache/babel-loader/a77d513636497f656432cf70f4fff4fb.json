{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { add } from 'date-fns';\nimport React from 'react';\nimport styles from '../../styles.css.js';\nimport { renderMonthAndYear } from '../../../date-picker/calendar/utils/intl';\nimport HeaderButton from './button';\n\nvar CalendarHeader = function (_a) {\n  var baseDate = _a.baseDate,\n      locale = _a.locale,\n      onChangeMonth = _a.onChangeMonth,\n      previousMonthLabel = _a.previousMonthLabel,\n      nextMonthLabel = _a.nextMonthLabel,\n      isSingleGrid = _a.isSingleGrid;\n  return React.createElement(\"div\", {\n    className: styles['calendar-header']\n  }, React.createElement(HeaderButton, {\n    ariaLabel: previousMonthLabel,\n    isPrevious: true,\n    onChangeMonth: onChangeMonth\n  }), React.createElement(\"div\", {\n    \"aria-live\": \"polite\",\n    className: styles['calendar-header-months-wrapper']\n  }, !isSingleGrid && React.createElement(\"div\", {\n    className: styles['calendar-header-month']\n  }, renderMonthAndYear(locale, add(baseDate, {\n    months: -1\n  }))), React.createElement(\"div\", {\n    className: styles['calendar-header-month']\n  }, renderMonthAndYear(locale, baseDate))), React.createElement(HeaderButton, {\n    ariaLabel: nextMonthLabel,\n    isPrevious: false,\n    onChangeMonth: onChangeMonth\n  }));\n};\n\nexport default CalendarHeader;","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,GAAT,QAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,kBAAT,QAAmC,0CAAnC;AACA,OAAOC,YAAP,MAAyB,UAAzB;;AAWA,IAAMC,cAAc,GAAG,UAACC,EAAD,EAOD;MANpBC,QAAQ;MACRC,MAAM;MACNC,aAAa;MACbC,kBAAkB;MAClBC,cAAc;MACdC,YAAY;EAEZ,OACEX;IAAKY,SAAS,EAAEX,MAAM,CAAC,iBAAD;EAAtB,GACED,oBAACG,YAAD,EAAa;IAACU,SAAS,EAAEJ,kBAAZ;IAAgCK,UAAU,EAAE,IAA5C;IAAkDN,aAAa,EAAEA;EAAjE,CAAb,CADF,EAEER;IAAA,aAAe,QAAf;IAAwBY,SAAS,EAAEX,MAAM,CAAC,gCAAD;EAAzC,GACG,CAACU,YAAD,IACCX;IAAKY,SAAS,EAAEX,MAAM,CAAC,uBAAD;EAAtB,GACGC,kBAAkB,CAACK,MAAD,EAASR,GAAG,CAACO,QAAD,EAAW;IAAES,MAAM,EAAE,CAAC;EAAX,CAAX,CAAZ,CADrB,CAFJ,EAMEf;IAAKY,SAAS,EAAEX,MAAM,CAAC,uBAAD;EAAtB,GAAkDC,kBAAkB,CAACK,MAAD,EAASD,QAAT,CAApE,CANF,CAFF,EAUEN,oBAACG,YAAD,EAAa;IAACU,SAAS,EAAEH,cAAZ;IAA4BI,UAAU,EAAE,KAAxC;IAA+CN,aAAa,EAAEA;EAA9D,CAAb,CAVF,CADF;AAcD,CAtBD;;AAwBA,eAAeJ,cAAf","names":["add","React","styles","renderMonthAndYear","HeaderButton","CalendarHeader","_a","baseDate","locale","onChangeMonth","previousMonthLabel","nextMonthLabel","isSingleGrid","className","ariaLabel","isPrevious","months"],"sourceRoot":"","sources":["../../../../../src/date-range-picker/calendar/header/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { add } from 'date-fns';\nimport React from 'react';\nimport styles from '../../styles.css.js';\nimport { renderMonthAndYear } from '../../../date-picker/calendar/utils/intl';\nimport HeaderButton from './button';\n\ninterface CalendarHeaderProps {\n  baseDate: Date;\n  locale: string;\n  onChangeMonth: (prev?: boolean) => void;\n  previousMonthLabel: string;\n  nextMonthLabel: string;\n  isSingleGrid: boolean;\n}\n\nconst CalendarHeader = ({\n  baseDate,\n  locale,\n  onChangeMonth,\n  previousMonthLabel,\n  nextMonthLabel,\n  isSingleGrid,\n}: CalendarHeaderProps) => {\n  return (\n    <div className={styles['calendar-header']}>\n      <HeaderButton ariaLabel={previousMonthLabel} isPrevious={true} onChangeMonth={onChangeMonth} />\n      <div aria-live=\"polite\" className={styles['calendar-header-months-wrapper']}>\n        {!isSingleGrid && (\n          <div className={styles['calendar-header-month']}>\n            {renderMonthAndYear(locale, add(baseDate, { months: -1 }))}\n          </div>\n        )}\n        <div className={styles['calendar-header-month']}>{renderMonthAndYear(locale, baseDate)}</div>\n      </div>\n      <HeaderButton ariaLabel={nextMonthLabel} isPrevious={false} onChangeMonth={onChangeMonth} />\n    </div>\n  );\n};\n\nexport default CalendarHeader;\n"]},"metadata":{},"sourceType":"module"}