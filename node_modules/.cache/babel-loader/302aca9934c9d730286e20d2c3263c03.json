{"ast":null,"code":"function setDayIndex(date, dayIndex) {\n  var diff = dayIndex - date.getDay();\n  date.setDate(date.getDate() + diff);\n}\n\nexport function renderDayName(locale, dayIndex) {\n  var tempDate = new Date();\n  setDayIndex(tempDate, dayIndex);\n  return tempDate.toLocaleDateString(locale, {\n    weekday: 'short'\n  });\n}\nexport function renderMonthAndYear(locale, baseDate) {\n  var result = baseDate.toLocaleDateString(locale, {\n    year: 'numeric',\n    month: 'long'\n  });\n  return result;\n}\n/*\n `toLocaleDateString` is expensive (10+ ms) to calculate in IE11.\n*/\n\nvar dayLabelCache = new Map();\nexport function getDateLabel(locale, date) {\n  var cacheKey = locale + date.getTime();\n  var cachedValue = dayLabelCache.get(cacheKey);\n\n  if (cachedValue) {\n    return cachedValue;\n  }\n\n  var value = date.toLocaleDateString(locale, {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  });\n  dayLabelCache.set(cacheKey, value);\n  return value;\n}\nexport function renderTimeLabel(locale, date, format) {\n  var options = {};\n\n  if (format === 'hh') {\n    options = {\n      hour: '2-digit'\n    };\n  }\n\n  if (format === 'hh:mm') {\n    options = {\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n  }\n\n  var value = date.toLocaleTimeString(locale, options);\n  return value;\n}","map":{"version":3,"mappings":"AAKA,SAASA,WAAT,CAAqBC,IAArB,EAAiCC,QAAjC,EAAmD;EACjD,IAAMC,IAAI,GAAGD,QAAQ,GAAGD,IAAI,CAACG,MAAL,EAAxB;EACAH,IAAI,CAACI,OAAL,CAAaJ,IAAI,CAACK,OAAL,KAAiBH,IAA9B;AACD;;AAED,OAAM,SAAUI,aAAV,CAAwBC,MAAxB,EAAwCN,QAAxC,EAA0D;EAC9D,IAAMO,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;EACAV,WAAW,CAACS,QAAD,EAAWP,QAAX,CAAX;EACA,OAAOO,QAAQ,CAACE,kBAAT,CAA4BH,MAA5B,EAAoC;IAAEI,OAAO,EAAE;EAAX,CAApC,CAAP;AACD;AAED,OAAM,SAAUC,kBAAV,CAA6BL,MAA7B,EAA6CM,QAA7C,EAA2D;EAC/D,IAAMC,MAAM,GAAGD,QAAQ,CAACH,kBAAT,CAA4BH,MAA5B,EAAoC;IACjDQ,IAAI,EAAE,SAD2C;IAEjDC,KAAK,EAAE;EAF0C,CAApC,CAAf;EAKA,OAAOF,MAAP;AACD;AAED;;;;AAGA,IAAMG,aAAa,GAAG,IAAIC,GAAJ,EAAtB;AACA,OAAM,SAAUC,YAAV,CAAuBZ,MAAvB,EAAuCP,IAAvC,EAAiD;EACrD,IAAMoB,QAAQ,GAAGb,MAAM,GAAGP,IAAI,CAACqB,OAAL,EAA1B;EACA,IAAMC,WAAW,GAAGL,aAAa,CAACM,GAAd,CAAkBH,QAAlB,CAApB;;EACA,IAAIE,WAAJ,EAAiB;IACf,OAAOA,WAAP;EACD;;EACD,IAAME,KAAK,GAAGxB,IAAI,CAACU,kBAAL,CAAwBH,MAAxB,EAAgC;IAC5CI,OAAO,EAAE,MADmC;IAE5CK,KAAK,EAAE,MAFqC;IAG5CS,GAAG,EAAE,SAHuC;IAI5CV,IAAI,EAAE;EAJsC,CAAhC,CAAd;EAMAE,aAAa,CAACS,GAAd,CAAkBN,QAAlB,EAA4BI,KAA5B;EACA,OAAOA,KAAP;AACD;AAED,OAAM,SAAUG,eAAV,CAA0BpB,MAA1B,EAA0CP,IAA1C,EAAsD4B,MAAtD,EAAoF;EACxF,IAAIC,OAAO,GAA+B,EAA1C;;EACA,IAAID,MAAM,KAAK,IAAf,EAAqB;IACnBC,OAAO,GAAG;MAAEC,IAAI,EAAE;IAAR,CAAV;EACD;;EACD,IAAIF,MAAM,KAAK,OAAf,EAAwB;IACtBC,OAAO,GAAG;MAAEC,IAAI,EAAE,SAAR;MAAmBC,MAAM,EAAE;IAA3B,CAAV;EACD;;EACD,IAAMP,KAAK,GAAGxB,IAAI,CAACgC,kBAAL,CAAwBzB,MAAxB,EAAgCsB,OAAhC,CAAd;EACA,OAAOL,KAAP;AACD","names":["setDayIndex","date","dayIndex","diff","getDay","setDate","getDate","renderDayName","locale","tempDate","Date","toLocaleDateString","weekday","renderMonthAndYear","baseDate","result","year","month","dayLabelCache","Map","getDateLabel","cacheKey","getTime","cachedValue","get","value","day","set","renderTimeLabel","format","options","hour","minute","toLocaleTimeString"],"sourceRoot":"","sources":["../../../../../src/date-picker/calendar/utils/intl.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { DayIndex } from '../index';\nimport { TimeInputProps } from '../../../time-input/interfaces';\n\nfunction setDayIndex(date: Date, dayIndex: DayIndex): void {\n  const diff = dayIndex - date.getDay();\n  date.setDate(date.getDate() + diff);\n}\n\nexport function renderDayName(locale: string, dayIndex: DayIndex): string {\n  const tempDate = new Date();\n  setDayIndex(tempDate, dayIndex);\n  return tempDate.toLocaleDateString(locale, { weekday: 'short' });\n}\n\nexport function renderMonthAndYear(locale: string, baseDate: Date): string {\n  const result = baseDate.toLocaleDateString(locale, {\n    year: 'numeric',\n    month: 'long',\n  });\n\n  return result;\n}\n\n/*\n `toLocaleDateString` is expensive (10+ ms) to calculate in IE11.\n*/\nconst dayLabelCache = new Map<string, string>();\nexport function getDateLabel(locale: string, date: Date): string {\n  const cacheKey = locale + date.getTime();\n  const cachedValue = dayLabelCache.get(cacheKey);\n  if (cachedValue) {\n    return cachedValue;\n  }\n  const value = date.toLocaleDateString(locale, {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric',\n  });\n  dayLabelCache.set(cacheKey, value);\n  return value;\n}\n\nexport function renderTimeLabel(locale: string, date: Date, format?: TimeInputProps.Format): string {\n  let options: Intl.DateTimeFormatOptions = {};\n  if (format === 'hh') {\n    options = { hour: '2-digit' };\n  }\n  if (format === 'hh:mm') {\n    options = { hour: '2-digit', minute: '2-digit' };\n  }\n  const value = date.toLocaleTimeString(locale, options);\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}