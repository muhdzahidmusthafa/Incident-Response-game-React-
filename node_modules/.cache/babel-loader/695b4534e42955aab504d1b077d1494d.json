{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nimport { useTelemetry } from '../use-telemetry';\nimport { PACKAGE_VERSION } from '../../environment';\nexport var COMPONENT_METADATA_KEY = '__awsuiMetadata__';\n/**\n * This hook is used for components which are exported to customers. The returned __internalRootRef needs to be\n * attached to the (internal) component's root DOM node. The hook takes care of attaching the metadata to this\n * root DOM node and emits the telemetry for this component.\n */\n\nexport default function useBaseComponent(componentName) {\n  var elementRef = useRef(null);\n  useTelemetry(componentName);\n  useComponentMetadata(componentName, elementRef);\n  return {\n    __internalRootRef: elementRef\n  };\n}\n\nfunction useComponentMetadata(componentName, elementRef) {\n  useEffect(function () {\n    if (elementRef.current && !Object.prototype.hasOwnProperty.call(elementRef.current, COMPONENT_METADATA_KEY)) {\n      var node = elementRef.current;\n      var metadata = {\n        name: componentName,\n        version: PACKAGE_VERSION\n      };\n      Object.freeze(metadata);\n      Object.defineProperty(node, COMPONENT_METADATA_KEY, {\n        value: metadata,\n        writable: false\n      });\n    } // Some component refs change dynamically. E.g. The Modal component where\n    // the content gets rendered conditionally inside a Portal.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [elementRef.current]);\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAA2BA,SAA3B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAO,IAAMC,sBAAsB,GAAG,mBAA/B;AAMP;;;;;;AAKA,eAAc,SAAUC,gBAAV,CAAoCC,aAApC,EAAyD;EACrE,IAAMC,UAAU,GAAGN,MAAM,CAAI,IAAJ,CAAzB;EACAC,YAAY,CAACI,aAAD,CAAZ;EACAE,oBAAoB,CAACF,aAAD,EAAgBC,UAAhB,CAApB;EAEA,OAAO;IACLE,iBAAiB,EAAEF;EADd,CAAP;AAGD;;AAED,SAASC,oBAAT,CAA8BF,aAA9B,EAAqDC,UAArD,EAAsF;EAUpFP,SAAS,CAAC;IACR,IAAIO,UAAU,CAACG,OAAX,IAAsB,CAACC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,UAAU,CAACG,OAAhD,EAAyDN,sBAAzD,CAA3B,EAA6G;MAC3G,IAAMW,IAAI,GAAGR,UAAU,CAACG,OAAxB;MACA,IAAMM,QAAQ,GAAG;QACfC,IAAI,EAAEX,aADS;QAEfY,OAAO,EAAEf;MAFM,CAAjB;MAKAQ,MAAM,CAACQ,MAAP,CAAcH,QAAd;MACAL,MAAM,CAACS,cAAP,CAAsBL,IAAtB,EAA4BX,sBAA5B,EAAoD;QAClDiB,KAAK,EAAEL,QAD2C;QAElDM,QAAQ,EAAE;MAFwC,CAApD;IAID,CAbO,CAcR;IACA;IACA;;EACD,CAjBQ,EAiBN,CAACf,UAAU,CAACG,OAAZ,CAjBM,CAAT;AAkBD","names":["useEffect","useRef","useTelemetry","PACKAGE_VERSION","COMPONENT_METADATA_KEY","useBaseComponent","componentName","elementRef","useComponentMetadata","__internalRootRef","current","Object","prototype","hasOwnProperty","call","node","metadata","name","version","freeze","defineProperty","value","writable"],"sourceRoot":"","sources":["../../../../../src/internal/hooks/use-base-component/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { MutableRefObject, useEffect, useRef } from 'react';\nimport { useTelemetry } from '../use-telemetry';\nimport { PACKAGE_VERSION } from '../../environment';\n\nexport const COMPONENT_METADATA_KEY = '__awsuiMetadata__';\n\nexport interface InternalBaseComponentProps {\n  __internalRootRef?: MutableRefObject<any> | null;\n}\n\n/**\n * This hook is used for components which are exported to customers. The returned __internalRootRef needs to be\n * attached to the (internal) component's root DOM node. The hook takes care of attaching the metadata to this\n * root DOM node and emits the telemetry for this component.\n */\nexport default function useBaseComponent<T = any>(componentName: string) {\n  const elementRef = useRef<T>(null);\n  useTelemetry(componentName);\n  useComponentMetadata(componentName, elementRef);\n\n  return {\n    __internalRootRef: elementRef,\n  };\n}\n\nfunction useComponentMetadata(componentName: string, elementRef: MutableRefObject<any>) {\n  interface AwsUiMetadata {\n    name: string;\n    version: string;\n  }\n\n  interface HTMLMetadataElement extends HTMLElement {\n    [COMPONENT_METADATA_KEY]: AwsUiMetadata;\n  }\n\n  useEffect(() => {\n    if (elementRef.current && !Object.prototype.hasOwnProperty.call(elementRef.current, COMPONENT_METADATA_KEY)) {\n      const node = elementRef.current as HTMLMetadataElement;\n      const metadata = {\n        name: componentName,\n        version: PACKAGE_VERSION,\n      };\n\n      Object.freeze(metadata);\n      Object.defineProperty(node, COMPONENT_METADATA_KEY, {\n        value: metadata,\n        writable: false,\n      });\n    }\n    // Some component refs change dynamically. E.g. The Modal component where\n    // the content gets rendered conditionally inside a Portal.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elementRef.current]);\n}\n"]},"metadata":{},"sourceType":"module"}