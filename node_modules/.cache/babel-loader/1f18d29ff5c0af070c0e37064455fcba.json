{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nexport default function InternalBox(_a) {\n  var _b = _a.variant,\n      variant = _b === void 0 ? 'div' : _b,\n      tagOverride = _a.tagOverride,\n      _c = _a.margin,\n      margin = _c === void 0 ? {} : _c,\n      _d = _a.padding,\n      padding = _d === void 0 ? {} : _d,\n      display = _a.display,\n      textAlign = _a.textAlign,\n      float = _a.float,\n      fontSize = _a.fontSize,\n      fontWeight = _a.fontWeight,\n      color = _a.color,\n      children = _a.children,\n      _e = _a.__internalRootRef,\n      __internalRootRef = _e === void 0 ? null : _e,\n      props = __rest(_a, [\"variant\", \"tagOverride\", \"margin\", \"padding\", \"display\", \"textAlign\", \"float\", \"fontSize\", \"fontWeight\", \"color\", \"children\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(props);\n  var marginsClassNamesSuffices = getClassNamesSuffixes(margin);\n  var paddingsClassNamesSuffices = getClassNamesSuffixes(padding); // This can be any arbitrary string if passed into tagOverride.\n  // We appease the compiler with an incorrect type.\n\n  var Tag = getTag(variant, tagOverride);\n  var className = clsx(baseProps.className, styles.root, styles.box, styles[\"\".concat(variant.replace(/^awsui-/, ''), \"-variant\")], marginsClassNamesSuffices.map(function (suffix) {\n    return styles[\"m-\".concat(suffix)];\n  }), paddingsClassNamesSuffices.map(function (suffix) {\n    return styles[\"p-\".concat(suffix)];\n  }), styles[\"d-\".concat(display)], styles[\"f-\".concat(float)], styles[\"color-\".concat(color || 'default')], styles[\"font-size-\".concat(fontSize || 'default')], styles[\"font-weight-\".concat(fontWeight || 'default')], styles[\"t-\".concat(textAlign)]);\n  return React.createElement(Tag, __assign({}, baseProps, {\n    className: className,\n    ref: __internalRootRef\n  }), children);\n}\n\nvar getClassNamesSuffixes = function (value) {\n  if (typeof value === 'string') {\n    return [value];\n  }\n\n  var sides = ['top', 'right', 'bottom', 'left', 'horizontal', 'vertical'];\n  return sides.filter(function (side) {\n    return !!value[side];\n  }).map(function (side) {\n    return \"\".concat(side, \"-\").concat(value[side]);\n  });\n};\n\nvar getTag = function (variant, tagOverride) {\n  if (tagOverride) {\n    return tagOverride;\n  }\n\n  if (variant === 'awsui-value-large') {\n    return 'span';\n  }\n\n  if (variant === 'awsui-key-label') {\n    return 'div';\n  }\n\n  return variant;\n};","map":{"version":3,"mappings":"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","names":["React","getBaseProps","clsx","styles","InternalBox","_a","_b","tagOverride","_c","margin","_d","padding","display","textAlign","float","fontSize","fontWeight","color","children","_e","__internalRootRef","props","baseProps","marginsClassNamesSuffices","getClassNamesSuffixes","paddingsClassNamesSuffices","Tag","getTag","variant","className","root","box","replace","map","suffix","__assign","ref","value","sides","filter","side","concat"],"sourceRoot":"","sources":["../../../src/box/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { BoxProps } from './interfaces';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\n\ntype InternalBoxProps = BoxProps & InternalBaseComponentProps;\n\nexport default function InternalBox({\n  variant = 'div',\n  tagOverride,\n  margin = {},\n  padding = {},\n  display,\n  textAlign,\n  float,\n  fontSize,\n  fontWeight,\n  color,\n  children,\n  __internalRootRef = null,\n  ...props\n}: InternalBoxProps) {\n  const baseProps = getBaseProps(props);\n  const marginsClassNamesSuffices = getClassNamesSuffixes(margin);\n  const paddingsClassNamesSuffices = getClassNamesSuffixes(padding);\n  // This can be any arbitrary string if passed into tagOverride.\n  // We appease the compiler with an incorrect type.\n  const Tag = getTag(variant, tagOverride) as 'div';\n\n  const className = clsx(\n    baseProps.className,\n    styles.root,\n    styles.box,\n    styles[`${variant.replace(/^awsui-/, '')}-variant`],\n    marginsClassNamesSuffices.map(suffix => styles[`m-${suffix}`]),\n    paddingsClassNamesSuffices.map(suffix => styles[`p-${suffix}`]),\n    styles[`d-${display}`],\n    styles[`f-${float}`],\n    styles[`color-${color || 'default'}`],\n    styles[`font-size-${fontSize || 'default'}`],\n    styles[`font-weight-${fontWeight || 'default'}`],\n    styles[`t-${textAlign}`]\n  );\n\n  return (\n    <Tag {...baseProps} className={className} ref={__internalRootRef}>\n      {children}\n    </Tag>\n  );\n}\n\nconst getClassNamesSuffixes = (value: BoxProps.SpacingSize | BoxProps.Spacing) => {\n  if (typeof value === 'string') {\n    return [value];\n  }\n  const sides = ['top', 'right', 'bottom', 'left', 'horizontal', 'vertical'] as const;\n  return sides.filter(side => !!value[side]).map(side => `${side}-${value[side]}`);\n};\n\nconst getTag = (variant: BoxProps.Variant, tagOverride: BoxProps['tagOverride']) => {\n  if (tagOverride) {\n    return tagOverride;\n  }\n\n  if (variant === 'awsui-value-large') {\n    return 'span';\n  }\n\n  if (variant === 'awsui-key-label') {\n    return 'div';\n  }\n\n  return variant;\n};\n"]},"metadata":{},"sourceType":"module"}