{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport styles from '../../styles.css.js';\nimport GridDay from './day';\nimport { isSameMonth, isAfter, isBefore, isSameDay, addWeeks, addDays } from 'date-fns';\nimport { getCalendarMonth } from 'mnth';\nimport rotateDayIndexes from '../../../date-picker/calendar/utils/rotate-day-indexes';\nimport { renderDayName } from '../../../date-picker/calendar/utils/intl';\nimport clsx from 'clsx';\nexport function Grid(_a) {\n  var baseDate = _a.baseDate,\n      selectedStartDate = _a.selectedStartDate,\n      selectedEndDate = _a.selectedEndDate,\n      rangeStartDate = _a.rangeStartDate,\n      rangeEndDate = _a.rangeEndDate,\n      focusedDate = _a.focusedDate,\n      focusedDateRef = _a.focusedDateRef,\n      onSelectDate = _a.onSelectDate,\n      onGridKeyDownHandler = _a.onGridKeyDownHandler,\n      onFocusedDateChange = _a.onFocusedDateChange,\n      isDateEnabled = _a.isDateEnabled,\n      locale = _a.locale,\n      startOfWeek = _a.startOfWeek,\n      todayAriaLabel = _a.todayAriaLabel,\n      className = _a.className;\n  var baseDateTime = baseDate === null || baseDate === void 0 ? void 0 : baseDate.getTime(); // `baseDateTime` is used as a more stable replacement for baseDate\n\n  var weeks = useMemo(function () {\n    return getCalendarMonth(baseDate, {\n      firstDayOfWeek: startOfWeek\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [baseDateTime, startOfWeek]);\n  return React.createElement(\"div\", {\n    className: clsx(styles.grid, className)\n  }, React.createElement(\"div\", {\n    className: styles['calendar-day-names']\n  }, rotateDayIndexes(startOfWeek).map(function (i) {\n    return React.createElement(\"div\", {\n      key: \"day-name-\".concat(i),\n      className: styles['calendar-day-name']\n    }, renderDayName(locale, i));\n  })), React.createElement(\"div\", {\n    className: styles['calendar-dates'],\n    onKeyDown: onGridKeyDownHandler\n  }, weeks.map(function (week, weekIndex) {\n    return React.createElement(\"div\", {\n      key: \"week-\".concat(weekIndex),\n      className: styles['calendar-week']\n    }, week.map(function (date, dateIndex) {\n      var isStartDate = !!selectedStartDate && isSameDay(date, selectedStartDate);\n      var isEndDate = !!selectedEndDate && isSameDay(date, selectedEndDate);\n      var isSelected = isStartDate || isEndDate;\n      var isRangeStartDate = !!rangeStartDate && isSameDay(date, rangeStartDate);\n      var isRangeEndDate = !!rangeEndDate && isSameDay(date, rangeEndDate);\n      var isFocused = !!focusedDate && isSameDay(date, focusedDate) && isSameMonth(date, baseDate);\n      var dateIsInRange = isStartDate || isEndDate || isInRange(date, rangeStartDate, rangeEndDate);\n      var inRangeStartWeek = rangeStartDate && isInRange(date, rangeStartDate, addDays(addWeeks(rangeStartDate, 1), -1));\n      var inRangeEndWeek = rangeEndDate && isInRange(date, rangeEndDate, addDays(addWeeks(rangeEndDate, -1), 1));\n      var onlyOneSelected = !!rangeStartDate && !!rangeEndDate ? isSameDay(rangeStartDate, rangeEndDate) : !selectedStartDate || !selectedEndDate;\n      return React.createElement(GridDay, {\n        key: \"date-\".concat(weekIndex, \"-\").concat(dateIndex),\n        locale: locale,\n        baseDate: baseDate,\n        isSelected: isSelected,\n        isStartDate: isStartDate,\n        isEndDate: isEndDate,\n        onlyOneSelected: onlyOneSelected,\n        isRangeStartDate: isRangeStartDate,\n        isRangeEndDate: isRangeEndDate,\n        date: date,\n        isFocusedDate: isFocused,\n        ref: isFocused ? focusedDateRef : undefined,\n        todayAriaLabel: todayAriaLabel,\n        onSelectDate: onSelectDate,\n        onFocusDate: onFocusedDateChange,\n        isInRange: dateIsInRange,\n        isDateEnabled: isDateEnabled,\n        isDateInFirstRow: weekIndex === 0,\n        isDateInFirstColumn: dateIndex === 0,\n        isDateInLastColumn: dateIndex === week.length - 1,\n        isDateInSelectionStartWeek: !!inRangeStartWeek,\n        isDateInSelectionEndWeek: !!inRangeEndWeek\n      });\n    }));\n  })));\n}\n\nfunction isInRange(date, dateOne, dateTwo) {\n  if (!dateOne || !dateTwo || isSameDay(dateOne, dateTwo)) {\n    return false;\n  }\n\n  var inRange = isAfter(date, dateOne) && isBefore(date, dateTwo) || isAfter(date, dateTwo) && isBefore(date, dateOne);\n  return inRange || isSameDay(date, dateOne) || isSameDay(date, dateTwo);\n}","map":{"version":3,"mappings":"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","names":["React","useMemo","styles","GridDay","isSameMonth","isAfter","isBefore","isSameDay","addWeeks","addDays","getCalendarMonth","rotateDayIndexes","renderDayName","clsx","Grid","_a","baseDate","selectedStartDate","selectedEndDate","rangeStartDate","rangeEndDate","focusedDate","focusedDateRef","onSelectDate","onGridKeyDownHandler","onFocusedDateChange","isDateEnabled","locale","startOfWeek","todayAriaLabel","className","baseDateTime","getTime","weeks","firstDayOfWeek","grid","map","key","i","onKeyDown","week","weekIndex","date","dateIndex","isStartDate","isEndDate","isSelected","isRangeStartDate","isRangeEndDate","isFocused","dateIsInRange","isInRange","inRangeStartWeek","inRangeEndWeek","onlyOneSelected","concat","isFocusedDate","ref","undefined","onFocusDate","isDateInFirstRow","isDateInFirstColumn","isDateInLastColumn","length","isDateInSelectionStartWeek","isDateInSelectionEndWeek","dateOne","dateTwo","inRange"],"sourceRoot":"","sources":["../../../../../src/date-range-picker/calendar/grids/grid.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport styles from '../../styles.css.js';\nimport GridDay from './day';\nimport { isSameMonth, isAfter, isBefore, isSameDay, addWeeks, addDays } from 'date-fns';\nimport { getCalendarMonth } from 'mnth';\nimport { DateChangeHandler, DayIndex } from '../index';\nimport { DateRangePickerProps } from '../../interfaces';\nimport rotateDayIndexes from '../../../date-picker/calendar/utils/rotate-day-indexes';\nimport { renderDayName } from '../../../date-picker/calendar/utils/intl';\nimport clsx from 'clsx';\n\nexport interface GridProps {\n  baseDate: Date;\n  selectedStartDate: Date | null;\n  selectedEndDate: Date | null;\n\n  rangeStartDate: Date | null;\n  rangeEndDate: Date | null;\n\n  focusedDate: Date | null;\n  focusedDateRef: React.RefObject<HTMLDivElement>;\n\n  onSelectDate: DateChangeHandler;\n  onGridKeyDownHandler: (e: React.KeyboardEvent) => void;\n  onFocusedDateChange: React.Dispatch<React.SetStateAction<Date | null>>;\n\n  isDateEnabled: DateRangePickerProps.IsDateEnabledFunction;\n\n  locale: string;\n  startOfWeek: DayIndex;\n  todayAriaLabel: string;\n\n  className?: string;\n}\n\nexport function Grid({\n  baseDate,\n  selectedStartDate,\n  selectedEndDate,\n  rangeStartDate,\n  rangeEndDate,\n  focusedDate,\n\n  focusedDateRef,\n\n  onSelectDate,\n  onGridKeyDownHandler,\n  onFocusedDateChange,\n\n  isDateEnabled,\n\n  locale,\n  startOfWeek,\n  todayAriaLabel,\n\n  className,\n}: GridProps) {\n  const baseDateTime = baseDate?.getTime();\n  // `baseDateTime` is used as a more stable replacement for baseDate\n  const weeks = useMemo<Date[][]>(\n    () => getCalendarMonth(baseDate, { firstDayOfWeek: startOfWeek }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [baseDateTime, startOfWeek]\n  );\n\n  return (\n    <div className={clsx(styles.grid, className)}>\n      <div className={styles['calendar-day-names']}>\n        {rotateDayIndexes(startOfWeek).map(i => (\n          <div key={`day-name-${i}`} className={styles['calendar-day-name']}>\n            {renderDayName(locale, i)}\n          </div>\n        ))}\n      </div>\n      <div className={styles['calendar-dates']} onKeyDown={onGridKeyDownHandler}>\n        {weeks.map((week, weekIndex) => {\n          return (\n            <div key={`week-${weekIndex}`} className={styles['calendar-week']}>\n              {week.map((date, dateIndex) => {\n                const isStartDate = !!selectedStartDate && isSameDay(date, selectedStartDate);\n                const isEndDate = !!selectedEndDate && isSameDay(date, selectedEndDate);\n                const isSelected = isStartDate || isEndDate;\n                const isRangeStartDate = !!rangeStartDate && isSameDay(date, rangeStartDate);\n                const isRangeEndDate = !!rangeEndDate && isSameDay(date, rangeEndDate);\n\n                const isFocused = !!focusedDate && isSameDay(date, focusedDate) && isSameMonth(date, baseDate);\n\n                const dateIsInRange = isStartDate || isEndDate || isInRange(date, rangeStartDate, rangeEndDate);\n                const inRangeStartWeek =\n                  rangeStartDate && isInRange(date, rangeStartDate, addDays(addWeeks(rangeStartDate, 1), -1));\n                const inRangeEndWeek =\n                  rangeEndDate && isInRange(date, rangeEndDate, addDays(addWeeks(rangeEndDate, -1), 1));\n                const onlyOneSelected =\n                  !!rangeStartDate && !!rangeEndDate\n                    ? isSameDay(rangeStartDate, rangeEndDate)\n                    : !selectedStartDate || !selectedEndDate;\n\n                return (\n                  <GridDay\n                    key={`date-${weekIndex}-${dateIndex}`}\n                    locale={locale}\n                    baseDate={baseDate}\n                    isSelected={isSelected}\n                    isStartDate={isStartDate}\n                    isEndDate={isEndDate}\n                    onlyOneSelected={onlyOneSelected}\n                    isRangeStartDate={isRangeStartDate}\n                    isRangeEndDate={isRangeEndDate}\n                    date={date}\n                    isFocusedDate={isFocused}\n                    ref={isFocused ? focusedDateRef : undefined}\n                    todayAriaLabel={todayAriaLabel}\n                    onSelectDate={onSelectDate}\n                    onFocusDate={onFocusedDateChange}\n                    isInRange={dateIsInRange}\n                    isDateEnabled={isDateEnabled}\n                    isDateInFirstRow={weekIndex === 0}\n                    isDateInFirstColumn={dateIndex === 0}\n                    isDateInLastColumn={dateIndex === week.length - 1}\n                    isDateInSelectionStartWeek={!!inRangeStartWeek}\n                    isDateInSelectionEndWeek={!!inRangeEndWeek}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction isInRange(date: Date, dateOne: Date | null, dateTwo: Date | null) {\n  if (!dateOne || !dateTwo || isSameDay(dateOne, dateTwo)) {\n    return false;\n  }\n\n  const inRange =\n    (isAfter(date, dateOne) && isBefore(date, dateTwo)) || (isAfter(date, dateTwo) && isBefore(date, dateOne));\n\n  return inRange || isSameDay(date, dateOne) || isSameDay(date, dateTwo);\n}\n"]},"metadata":{},"sourceType":"module"}