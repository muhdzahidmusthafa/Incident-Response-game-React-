{"ast":null,"code":"import _classCallCheck from\"/Users/firozahmed/PycharmProjects/incident-response/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/firozahmed/PycharmProjects/incident-response/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";// Webpack loads JSON files by default - parses as JavaScript objects\nimport ChoicesJSON from'../storyModules/module01CHOICES.json';import TextJSON from'../storyModules/module01TEXT.json';import constants from'../globals/constants';var TextManager=/*#__PURE__*/function(){function TextManager(){_classCallCheck(this,TextManager);}_createClass(TextManager,null,[{key:\"loadModule\",value:// This method loads JSON story data and returns an object\n// structured like this:\n// {\n//   textData: data,\n//   linkNodesData: data,\n//   choicesData: data\n// }\nfunction loadModule(moduleNumber){console.log('%c Loading story module '+moduleNumber+'... ','color:white; background:orange;');if(moduleNumber===constants.MODULE_INCIDENT){return this.loadJSON(TextJSON,ChoicesJSON);}else{console.log('%c Error: Invalid story module. ','color:white; background:red;');return{};}}// Use this method to asynchronously load the JSON story data.\n// It returns a promise, so it can be chained with .then() or .catch().\n},{key:\"loadModuleAsync\",value:function loadModuleAsync(moduleNumber){var _this=this;console.log('%c Loading story module '+moduleNumber+'... ','color:white; background:orange;');return new Promise(function(resolve,reject){if(moduleNumber===constants.MODULE_INCIDENT){var data=_this.loadJSON(TextJSON,ChoicesJSON);if(data){console.log('%c Successfully loaded story module '+moduleNumber+'. ','color:white; background:green;');resolve(data);}else{console.log('%c Error: Failed to load story module. ','color:white; background:red;');reject({error:'Failed to load story module'});}}else{console.log('%c Error: Invalid story module. ','color:white; background:red;');reject({error:'Invalid story module'});}});}// This method is used to structure and return the JSON story data.\n// It sets the data keys (such as AA000AA000AA) to be keys in the objects.\n// Don't use this method directly. Use either loadModule() or loadModuleAsync().\n// (Create React App is not currently configured to support private methods).\n},{key:\"loadJSON\",value:function loadJSON(moduleText,moduleChoices,moduleLinkNodes){var data={textData:{},linkNodesData:{},choicesData:{}};for(var i in moduleText){data.textData[moduleText[i].KEY]=moduleText[i].TEXT;}for(var j in moduleChoices){data.choicesData[moduleChoices[j].KEY]=moduleChoices[j];}for(var k in moduleLinkNodes){data.linkNodesData[moduleLinkNodes[k].KEY]=moduleLinkNodes[k];}return data;}}]);return TextManager;}();export{TextManager as default};","map":{"version":3,"names":["ChoicesJSON","TextJSON","constants","TextManager","moduleNumber","console","log","MODULE_INCIDENT","loadJSON","Promise","resolve","reject","data","error","moduleText","moduleChoices","moduleLinkNodes","textData","linkNodesData","choicesData","i","KEY","TEXT","j","k"],"sources":["/Users/firozahmed/PycharmProjects/incident-response/src/mechanics/TextManager.js"],"sourcesContent":["// Webpack loads JSON files by default - parses as JavaScript objects\r\nimport ChoicesJSON from '../storyModules/module01CHOICES.json';\r\nimport TextJSON from '../storyModules/module01TEXT.json';\r\n\r\nimport constants from '../globals/constants';\r\n\r\nexport default class TextManager {\r\n\r\n  // This method loads JSON story data and returns an object\r\n  // structured like this:\r\n  // {\r\n  //   textData: data,\r\n  //   linkNodesData: data,\r\n  //   choicesData: data\r\n  // }\r\n  static loadModule(moduleNumber) {\r\n    console.log('%c Loading story module ' + moduleNumber + '... ', 'color:white; background:orange;');\r\n\r\n    if (moduleNumber === constants.MODULE_INCIDENT) {\r\n      return this.loadJSON(TextJSON, ChoicesJSON);\r\n    } else {\r\n      console.log('%c Error: Invalid story module. ', 'color:white; background:red;');\r\n      return {};\r\n    }\r\n  }\r\n\r\n  // Use this method to asynchronously load the JSON story data.\r\n  // It returns a promise, so it can be chained with .then() or .catch().\r\n  static loadModuleAsync(moduleNumber) {\r\n    console.log('%c Loading story module ' + moduleNumber + '... ', 'color:white; background:orange;');\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (moduleNumber === constants.MODULE_INCIDENT) {\r\n        const data = this.loadJSON(TextJSON, ChoicesJSON);\r\n                \r\n        if(data) {\r\n          console.log('%c Successfully loaded story module ' + moduleNumber + '. ', 'color:white; background:green;');\r\n          resolve(data);\r\n        } else {\r\n          console.log('%c Error: Failed to load story module. ', 'color:white; background:red;');\r\n          reject({error: 'Failed to load story module'});\r\n        }        \r\n\r\n      } else {\r\n        console.log('%c Error: Invalid story module. ', 'color:white; background:red;');\r\n        reject({error: 'Invalid story module'});\r\n      }\r\n    });\r\n  }\r\n\r\n  // This method is used to structure and return the JSON story data.\r\n  // It sets the data keys (such as AA000AA000AA) to be keys in the objects.\r\n  // Don't use this method directly. Use either loadModule() or loadModuleAsync().\r\n  // (Create React App is not currently configured to support private methods).\r\n  static loadJSON(moduleText, moduleChoices, moduleLinkNodes) {\r\n    let data = {\r\n        textData: {},\r\n        linkNodesData: {},\r\n        choicesData: {}\r\n      }\r\n\r\n    for (const i in moduleText) {\r\n      data.textData[moduleText[i].KEY] = moduleText[i].TEXT;\r\n    }\r\n\r\n    for (const j in moduleChoices) {\r\n      data.choicesData[moduleChoices[j].KEY] = moduleChoices[j];\r\n    }\r\n\r\n    for (const k in moduleLinkNodes) {\r\n      data.linkNodesData[moduleLinkNodes[k].KEY] = moduleLinkNodes[k];\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n"],"mappings":"kVAAA;AACA,MAAOA,YAAP,KAAwB,sCAAxB,CACA,MAAOC,SAAP,KAAqB,mCAArB,CAEA,MAAOC,UAAP,KAAsB,sBAAtB,C,GAEqBC,Y,0IAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAkBC,YAAlB,CAAgC,CAC9BC,OAAO,CAACC,GAAR,CAAY,2BAA6BF,YAA7B,CAA4C,MAAxD,CAAgE,iCAAhE,EAEA,GAAIA,YAAY,GAAKF,SAAS,CAACK,eAA/B,CAAgD,CAC9C,MAAO,MAAKC,QAAL,CAAcP,QAAd,CAAwBD,WAAxB,CAAP,CACD,CAFD,IAEO,CACLK,OAAO,CAACC,GAAR,CAAY,kCAAZ,CAAgD,8BAAhD,EACA,MAAO,EAAP,CACD,CACF,CAED;AACA;+BACA,yBAAuBF,YAAvB,CAAqC,gBACnCC,OAAO,CAACC,GAAR,CAAY,2BAA6BF,YAA7B,CAA4C,MAAxD,CAAgE,iCAAhE,EAEA,MAAO,IAAIK,QAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtC,GAAIP,YAAY,GAAKF,SAAS,CAACK,eAA/B,CAAgD,CAC9C,GAAMK,KAAI,CAAG,KAAI,CAACJ,QAAL,CAAcP,QAAd,CAAwBD,WAAxB,CAAb,CAEA,GAAGY,IAAH,CAAS,CACPP,OAAO,CAACC,GAAR,CAAY,uCAAyCF,YAAzC,CAAwD,IAApE,CAA0E,gCAA1E,EACAM,OAAO,CAACE,IAAD,CAAP,CACD,CAHD,IAGO,CACLP,OAAO,CAACC,GAAR,CAAY,yCAAZ,CAAuD,8BAAvD,EACAK,MAAM,CAAC,CAACE,KAAK,CAAE,6BAAR,CAAD,CAAN,CACD,CAEF,CAXD,IAWO,CACLR,OAAO,CAACC,GAAR,CAAY,kCAAZ,CAAgD,8BAAhD,EACAK,MAAM,CAAC,CAACE,KAAK,CAAE,sBAAR,CAAD,CAAN,CACD,CACF,CAhBM,CAAP,CAiBD,CAED;AACA;AACA;AACA;wBACA,kBAAgBC,UAAhB,CAA4BC,aAA5B,CAA2CC,eAA3C,CAA4D,CAC1D,GAAIJ,KAAI,CAAG,CACPK,QAAQ,CAAE,EADH,CAEPC,aAAa,CAAE,EAFR,CAGPC,WAAW,CAAE,EAHN,CAAX,CAMA,IAAK,GAAMC,EAAX,GAAgBN,WAAhB,CAA4B,CAC1BF,IAAI,CAACK,QAAL,CAAcH,UAAU,CAACM,CAAD,CAAV,CAAcC,GAA5B,EAAmCP,UAAU,CAACM,CAAD,CAAV,CAAcE,IAAjD,CACD,CAED,IAAK,GAAMC,EAAX,GAAgBR,cAAhB,CAA+B,CAC7BH,IAAI,CAACO,WAAL,CAAiBJ,aAAa,CAACQ,CAAD,CAAb,CAAiBF,GAAlC,EAAyCN,aAAa,CAACQ,CAAD,CAAtD,CACD,CAED,IAAK,GAAMC,EAAX,GAAgBR,gBAAhB,CAAiC,CAC/BJ,IAAI,CAACM,aAAL,CAAmBF,eAAe,CAACQ,CAAD,CAAf,CAAmBH,GAAtC,EAA6CL,eAAe,CAACQ,CAAD,CAA5D,CACD,CAED,MAAOZ,KAAP,CACD,C,kCApEkBT,W"},"metadata":{},"sourceType":"module"}