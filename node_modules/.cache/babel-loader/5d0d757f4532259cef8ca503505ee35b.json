{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport InternalIcon from '../icon/internal';\nimport styles from './styles.css.js';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireCancelableEvent, isPlainLeftClick } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { KeyCode } from '../internal/keycode';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nvar InternalLink = React.forwardRef(function (_a, ref) {\n  var _b = _a.variant,\n      variant = _b === void 0 ? 'secondary' : _b,\n      _c = _a.fontSize,\n      fontSize = _c === void 0 ? 'body-m' : _c,\n      _d = _a.color,\n      color = _d === void 0 ? 'normal' : _d,\n      _e = _a.external,\n      external = _e === void 0 ? false : _e,\n      target = _a.target,\n      href = _a.href,\n      rel = _a.rel,\n      ariaLabel = _a.ariaLabel,\n      externalIconAriaLabel = _a.externalIconAriaLabel,\n      onFollow = _a.onFollow,\n      children = _a.children,\n      _f = _a.__internalRootRef,\n      __internalRootRef = _f === void 0 ? null : _f,\n      props = __rest(_a, [\"variant\", \"fontSize\", \"color\", \"external\", \"target\", \"href\", \"rel\", \"ariaLabel\", \"externalIconAriaLabel\", \"onFollow\", \"children\", \"__internalRootRef\"]);\n\n  checkSafeUrl('Link', href);\n  var isButton = !href;\n  var specialStyles = ['top-navigation', 'link', 'recovery'];\n  var hasSpecialStyle = specialStyles.indexOf(variant) > -1;\n  var focusVisible = useFocusVisible();\n  var baseProps = getBaseProps(props);\n  var anchorTarget = target !== null && target !== void 0 ? target : external ? '_blank' : undefined;\n  var anchorRel = rel !== null && rel !== void 0 ? rel : anchorTarget === '_blank' ? 'noopener noreferrer' : undefined;\n\n  var fireFollowEvent = function (event) {\n    fireCancelableEvent(onFollow, {\n      href: href,\n      external: external,\n      target: anchorTarget\n    }, event);\n  };\n\n  var handleLinkClick = function (event) {\n    if (isPlainLeftClick(event)) {\n      fireFollowEvent(event);\n    }\n  };\n\n  var handleButtonClick = function (event) {\n    fireFollowEvent(event);\n  };\n\n  var handleButtonKeyDown = function (event) {\n    if (event.keyCode === KeyCode.space || event.keyCode === KeyCode.enter) {\n      event.preventDefault();\n      fireFollowEvent(event);\n    }\n  };\n\n  var linkRef = useRef(null);\n  var isVisualRefresh = useVisualRefresh(linkRef);\n  useForwardFocus(ref, linkRef); // Visual refresh should only add styles to buttons that don't already have unique styles (e.g. primary/secondary variants)\n\n  var applyButtonStyles = isButton && isVisualRefresh && !hasSpecialStyle;\n\n  var sharedProps = __assign(__assign(__assign({}, focusVisible), baseProps), {\n    // https://github.com/microsoft/TypeScript/issues/36659\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ref: useMergeRefs(linkRef, __internalRootRef),\n    className: clsx(styles.link, baseProps.className, applyButtonStyles ? styles.button : null, styles[getVariantStyle(variant)], styles[getFontSizeStyle(variant, fontSize)], styles[getColorStyle(variant, color)]),\n    'aria-label': ariaLabel\n  });\n\n  var content = React.createElement(React.Fragment, null, children, external && React.createElement(React.Fragment, null, ' ', React.createElement(\"span\", {\n    className: styles.icon,\n    \"aria-label\": externalIconAriaLabel,\n    role: externalIconAriaLabel ? 'img' : undefined\n  }, React.createElement(InternalIcon, {\n    name: \"external\",\n    size: \"inherit\"\n  }))));\n\n  if (isButton) {\n    return React.createElement(\"a\", __assign({}, sharedProps, {\n      role: \"button\",\n      tabIndex: 0,\n      onKeyDown: handleButtonKeyDown,\n      onClick: handleButtonClick\n    }), content);\n  }\n\n  return (// we dynamically set proper rel in the code above\n    // eslint-disable-next-line react/jsx-no-target-blank\n    React.createElement(\"a\", __assign({}, sharedProps, {\n      target: anchorTarget,\n      rel: anchorRel,\n      href: href,\n      onClick: handleLinkClick\n    }), content)\n  );\n});\n\nfunction getVariantStyle(variant) {\n  return \"variant-\".concat(variant.replace(/^awsui-/, ''));\n}\n\nfunction getFontSizeStyle(variant, fontSize) {\n  switch (variant) {\n    case 'info':\n      return 'font-size-body-s';\n\n    case 'awsui-value-large':\n      return 'font-size-display-l';\n\n    default:\n      return \"font-size-\".concat(fontSize);\n  }\n}\n\nfunction getColorStyle(variant, color) {\n  return \"color-\".concat(variant === 'info' ? 'normal' : color);\n}\n\nexport default InternalLink;","map":{"version":3,"mappings":"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","names":["React","useRef","clsx","InternalIcon","styles","useFocusVisible","getBaseProps","fireCancelableEvent","isPlainLeftClick","useForwardFocus","KeyCode","useMergeRefs","useVisualRefresh","checkSafeUrl","InternalLink","forwardRef","_a","ref","_b","_c","fontSize","_d","color","_e","external","target","href","rel","ariaLabel","externalIconAriaLabel","onFollow","children","_f","__internalRootRef","props","isButton","specialStyles","hasSpecialStyle","indexOf","variant","focusVisible","baseProps","anchorTarget","undefined","anchorRel","fireFollowEvent","event","handleLinkClick","handleButtonClick","handleButtonKeyDown","keyCode","space","enter","preventDefault","linkRef","isVisualRefresh","applyButtonStyles","sharedProps","className","link","button","getVariantStyle","getFontSizeStyle","getColorStyle","content","icon","role","name","size","tabIndex","onKeyDown","onClick","replace"],"sourceRoot":"","sources":["../../../src/link/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport InternalIcon from '../icon/internal';\nimport styles from './styles.css.js';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireCancelableEvent, isPlainLeftClick } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { KeyCode } from '../internal/keycode';\nimport { LinkProps } from './interfaces';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\n\ntype InternalLinkProps = InternalBaseComponentProps &\n  Omit<LinkProps, 'variant'> & {\n    variant?: LinkProps['variant'] | 'top-navigation' | 'link' | 'recovery';\n  };\n\nconst InternalLink = React.forwardRef(\n  (\n    {\n      variant = 'secondary',\n      fontSize = 'body-m',\n      color = 'normal',\n      external = false,\n      target,\n      href,\n      rel,\n      ariaLabel,\n      externalIconAriaLabel,\n      onFollow,\n      children,\n      __internalRootRef = null,\n      ...props\n    }: InternalLinkProps,\n    ref: React.Ref<LinkProps.Ref>\n  ) => {\n    checkSafeUrl('Link', href);\n    const isButton = !href;\n    const specialStyles = ['top-navigation', 'link', 'recovery'];\n    const hasSpecialStyle = specialStyles.indexOf(variant) > -1;\n\n    const focusVisible = useFocusVisible();\n    const baseProps = getBaseProps(props);\n    const anchorTarget = target ?? (external ? '_blank' : undefined);\n    const anchorRel = rel ?? (anchorTarget === '_blank' ? 'noopener noreferrer' : undefined);\n\n    const fireFollowEvent = (event: React.SyntheticEvent) => {\n      fireCancelableEvent(onFollow, { href, external, target: anchorTarget }, event);\n    };\n\n    const handleLinkClick = (event: React.MouseEvent) => {\n      if (isPlainLeftClick(event)) {\n        fireFollowEvent(event);\n      }\n    };\n\n    const handleButtonClick = (event: React.MouseEvent) => {\n      fireFollowEvent(event);\n    };\n\n    const handleButtonKeyDown = (event: React.KeyboardEvent) => {\n      if (event.keyCode === KeyCode.space || event.keyCode === KeyCode.enter) {\n        event.preventDefault();\n        fireFollowEvent(event);\n      }\n    };\n\n    const linkRef = useRef<HTMLElement>(null);\n    const isVisualRefresh = useVisualRefresh(linkRef);\n    useForwardFocus(ref, linkRef);\n\n    // Visual refresh should only add styles to buttons that don't already have unique styles (e.g. primary/secondary variants)\n    const applyButtonStyles = isButton && isVisualRefresh && !hasSpecialStyle;\n\n    const sharedProps = {\n      ...focusVisible,\n      ...baseProps,\n      // https://github.com/microsoft/TypeScript/issues/36659\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ref: useMergeRefs(linkRef as any, __internalRootRef),\n      className: clsx(\n        styles.link,\n        baseProps.className,\n        applyButtonStyles ? styles.button : null,\n        styles[getVariantStyle(variant)],\n        styles[getFontSizeStyle(variant, fontSize)],\n        styles[getColorStyle(variant, color)]\n      ),\n      'aria-label': ariaLabel,\n    };\n\n    const content = (\n      <>\n        {children}\n        {external && (\n          <>\n            {' '}\n            <span\n              className={styles.icon}\n              aria-label={externalIconAriaLabel}\n              role={externalIconAriaLabel ? 'img' : undefined}\n            >\n              <InternalIcon name=\"external\" size=\"inherit\" />\n            </span>\n          </>\n        )}\n      </>\n    );\n\n    if (isButton) {\n      return (\n        <a {...sharedProps} role=\"button\" tabIndex={0} onKeyDown={handleButtonKeyDown} onClick={handleButtonClick}>\n          {content}\n        </a>\n      );\n    }\n\n    return (\n      // we dynamically set proper rel in the code above\n      // eslint-disable-next-line react/jsx-no-target-blank\n      <a {...sharedProps} target={anchorTarget} rel={anchorRel} href={href} onClick={handleLinkClick}>\n        {content}\n      </a>\n    );\n  }\n);\n\nfunction getVariantStyle(variant: Exclude<InternalLinkProps['variant'], undefined>) {\n  return `variant-${variant.replace(/^awsui-/, '')}`;\n}\n\nfunction getFontSizeStyle(variant: InternalLinkProps['variant'], fontSize: InternalLinkProps['fontSize']) {\n  switch (variant) {\n    case 'info':\n      return 'font-size-body-s';\n    case 'awsui-value-large':\n      return 'font-size-display-l';\n    default:\n      return `font-size-${fontSize}`;\n  }\n}\n\nfunction getColorStyle(variant: InternalLinkProps['variant'], color: InternalLinkProps['color']) {\n  return `color-${variant === 'info' ? 'normal' : color}`;\n}\n\nexport default InternalLink;\n"]},"metadata":{},"sourceType":"module"}