{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { useStickyPosition } from '../utils/use-sticky-position';\n\nvar StaticNotifications = function (_a) {\n  var testUtilsClassName = _a.testUtilsClassName,\n      children = _a.children,\n      labels = _a.labels;\n  return React.createElement(\"div\", {\n    className: clsx(testUtilsClassName),\n    role: \"region\",\n    \"aria-label\": labels === null || labels === void 0 ? void 0 : labels.notifications\n  }, children);\n};\n\nvar StickyNotifications = function (props) {\n  var _a = useStickyPosition(props.topOffset),\n      stickyRef = _a[0],\n      placeholder = _a[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    ref: stickyRef,\n    className: styles['notifications-sticky']\n  }, React.createElement(StaticNotifications, __assign({}, props))), placeholder);\n};\n\nexport var Notifications = React.forwardRef(function (_a, ref) {\n  var navigationPadding = _a.navigationPadding,\n      toolsPadding = _a.toolsPadding,\n      sticky = _a.sticky,\n      isMobile = _a.isMobile,\n      rest = __rest(_a, [\"navigationPadding\", \"toolsPadding\", \"sticky\", \"isMobile\"]);\n\n  var notificationsProps = __assign({\n    isMobile: isMobile\n  }, rest);\n\n  return React.createElement(\"div\", {\n    ref: ref,\n    className: clsx(isMobile && styles['root-mobile'], !navigationPadding && styles['root-no-navigation-padding'], !toolsPadding && styles['root-no-tools-padding'])\n  }, sticky ? React.createElement(StickyNotifications, __assign({}, notificationsProps)) : React.createElement(StaticNotifications, __assign({}, notificationsProps)));\n});","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,iBAAT,QAAkC,8BAAlC;;AAUA,IAAMC,mBAAmB,GAAG,UAACC,EAAD,EAA6D;MAA1DC,kBAAkB;MAAEC,QAAQ;MAAEC,MAAM;EACjE,OACER;IAAKS,SAAS,EAAER,IAAI,CAACK,kBAAD,CAApB;IAA0CI,IAAI,EAAC,QAA/C;IAAuD,cAAaF,MAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEG;EAA5E,GACGJ,QADH,CADF;AAKD,CAND;;AAQA,IAAMK,mBAAmB,GAAG,UAACC,KAAD,EAA0B;EAC9C,SAA2BV,iBAAiB,CAACU,KAAK,CAACC,SAAP,CAA5C;EAAA,IAACC,SAAS,QAAV;EAAA,IAAYC,WAAW,QAAvB;;EACN,OACEhB,0CACEA;IAAKiB,GAAG,EAAEF,SAAV;IAAqBN,SAAS,EAAEP,MAAM,CAAC,sBAAD;EAAtC,GACEF,oBAACI,mBAAD,EAAoBc,aAAKL,KAAL,CAApB,CADF,CADF,EAIGG,WAJH,CADF;AAQD,CAVD;;AAmBA,OAAO,IAAMG,aAAa,GAAGnB,KAAK,CAACoB,UAAN,CAC3B,UACEf,EADF,EAEEY,GAFF,EAEgC;EAD5B,qBAAiB,uBAAjB;EAAA,IAAmBI,YAAY,kBAA/B;EAAA,IAAiCC,MAAM,YAAvC;EAAA,IAAyCC,QAAQ,cAAjD;EAAA,IAAsDC,IAAI,cAA5D,2DAA4D,CAA1D;;EAGF,IAAMC,kBAAkB;IAAyBF,QAAQ;EAAjC,GAAsCC,IAAtC,CAAxB;;EACA,OACExB;IACEiB,GAAG,EAAEA,GADP;IAEER,SAAS,EAAER,IAAI,CACbsB,QAAQ,IAAIrB,MAAM,CAAC,aAAD,CADL,EAEb,CAACwB,iBAAD,IAAsBxB,MAAM,CAAC,4BAAD,CAFf,EAGb,CAACmB,YAAD,IAAiBnB,MAAM,CAAC,uBAAD,CAHV;EAFjB,GAQGoB,MAAM,GAAGtB,oBAACY,mBAAD,EAAoBM,aAAKO,kBAAL,CAApB,CAAH,GAAqDzB,oBAACI,mBAAD,EAAoBc,aAAKO,kBAAL,CAApB,CAR9D,CADF;AAYD,CAlB0B,CAAtB","names":["React","clsx","styles","useStickyPosition","StaticNotifications","_a","testUtilsClassName","children","labels","className","role","notifications","StickyNotifications","props","topOffset","stickyRef","placeholder","ref","__assign","Notifications","forwardRef","toolsPadding","sticky","isMobile","rest","notificationsProps","navigationPadding"],"sourceRoot":"","sources":["../../../../src/app-layout/notifications/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { AppLayoutProps } from '../interfaces';\nimport { useStickyPosition } from '../utils/use-sticky-position';\n\ninterface NotificationsProps {\n  testUtilsClassName: string;\n  children?: React.ReactNode;\n  labels: AppLayoutProps.Labels | undefined;\n  topOffset: number | undefined;\n  isMobile: boolean;\n}\n\nconst StaticNotifications = ({ testUtilsClassName, children, labels }: NotificationsProps) => {\n  return (\n    <div className={clsx(testUtilsClassName)} role=\"region\" aria-label={labels?.notifications}>\n      {children}\n    </div>\n  );\n};\n\nconst StickyNotifications = (props: NotificationsProps) => {\n  const [stickyRef, placeholder] = useStickyPosition(props.topOffset);\n  return (\n    <>\n      <div ref={stickyRef} className={styles['notifications-sticky']}>\n        <StaticNotifications {...props} />\n      </div>\n      {placeholder}\n    </>\n  );\n};\n\ninterface NotificationWrapperProps extends NotificationsProps {\n  sticky: boolean | undefined;\n  navigationPadding: boolean;\n  toolsPadding: boolean;\n  contentWidthStyles?: React.CSSProperties;\n}\n\nexport const Notifications = React.forwardRef(\n  (\n    { navigationPadding, toolsPadding, sticky, isMobile, ...rest }: NotificationWrapperProps,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    const notificationsProps: NotificationsProps = { isMobile, ...rest };\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          isMobile && styles['root-mobile'],\n          !navigationPadding && styles['root-no-navigation-padding'],\n          !toolsPadding && styles['root-no-tools-padding']\n        )}\n      >\n        {sticky ? <StickyNotifications {...notificationsProps} /> : <StaticNotifications {...notificationsProps} />}\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}