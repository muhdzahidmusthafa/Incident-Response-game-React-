{"ast":null,"code":"var isGroup = function (option) {\n  return 'type' in option && option.type === 'parent';\n};\n\nvar popLastGroup = function (options) {\n  if (options.length) {\n    var lastOption = options[options.length - 1];\n\n    if (isGroup(lastOption)) {\n      options.pop();\n    }\n  }\n};\n\nexport var filterOptions = function (options, text) {\n  var filteredOptions = options.reduce(function (filteredIn, option) {\n    if (isGroup(option)) {\n      popLastGroup(filteredIn);\n      filteredIn.push(option);\n    } else if (matchSingleOption(option, text)) {\n      filteredIn.push(option);\n    }\n\n    return filteredIn;\n  }, []);\n  popLastGroup(filteredOptions);\n  return filteredOptions;\n};\n\nvar matchSingleOption = function (option, text) {\n  var searchableFields = ['value', 'label', 'description', 'labelTag'];\n  var searchableTagFields = ['tags', 'filteringTags'];\n  var searchText = text.toLowerCase();\n\n  var searchStrFieldsFn = function (attr) {\n    return matchString(option[attr], searchText);\n  };\n\n  var searchTagsFieldsFn = function (attr) {\n    var _a;\n\n    return (_a = option[attr]) === null || _a === void 0 ? void 0 : _a.some(function (value) {\n      return matchString(value, searchText);\n    });\n  };\n\n  return searchableFields.some(searchStrFieldsFn) || searchableTagFields.some(searchTagsFieldsFn);\n};\n\nvar matchString = function (value, searchText) {\n  return value && value.toLowerCase().indexOf(searchText) !== -1;\n};","map":{"version":3,"mappings":"AAOA,IAAMA,OAAO,GAAG,UAACC,MAAD,EAAwB;EAAK,iBAAUA,MAAV,IAAoBA,MAAM,CAACC,IAAP,KAAgB,QAApC;AAA4C,CAAzF;;AAEA,IAAMC,YAAY,GAAG,UAACC,OAAD,EAA2B;EAC9C,IAAIA,OAAO,CAACC,MAAZ,EAAoB;IAClB,IAAMC,UAAU,GAAGF,OAAO,CAACA,OAAO,CAACC,MAAR,GAAiB,CAAlB,CAA1B;;IACA,IAAIL,OAAO,CAACM,UAAD,CAAX,EAAyB;MACvBF,OAAO,CAACG,GAAR;IACD;EACF;AACF,CAPD;;AASA,OAAO,IAAMC,aAAa,GAAG,UAACJ,OAAD,EAA6BK,IAA7B,EAAyC;EACpE,IAAMC,eAAe,GAAGN,OAAO,CAACO,MAAR,CAAkC,UAACC,UAAD,EAAaX,MAAb,EAAmB;IAC3E,IAAID,OAAO,CAACC,MAAD,CAAX,EAAqB;MACnBE,YAAY,CAACS,UAAD,CAAZ;MACAA,UAAU,CAACC,IAAX,CAAgBZ,MAAhB;IACD,CAHD,MAGO,IAAIa,iBAAiB,CAACb,MAAD,EAASQ,IAAT,CAArB,EAAqC;MAC1CG,UAAU,CAACC,IAAX,CAAgBZ,MAAhB;IACD;;IACD,OAAOW,UAAP;EACD,CARuB,EAQrB,EARqB,CAAxB;EASAT,YAAY,CAACO,eAAD,CAAZ;EACA,OAAOA,eAAP;AACD,CAZM;;AAcP,IAAMI,iBAAiB,GAAG,UAACb,MAAD,EAA0BQ,IAA1B,EAAsC;EAC9D,IAAMM,gBAAgB,GAAuB,CAAC,OAAD,EAAU,OAAV,EAAmB,aAAnB,EAAkC,UAAlC,CAA7C;EACA,IAAMC,mBAAmB,GAA0B,CAAC,MAAD,EAAS,eAAT,CAAnD;EAEA,IAAMC,UAAU,GAAGR,IAAI,CAACS,WAAL,EAAnB;;EAEA,IAAMC,iBAAiB,GAAG,UAACC,IAAD,EAAuB;IAAK,kBAAW,CAACnB,MAAM,CAACmB,IAAD,CAAP,EAAeH,UAAf,CAAX;EAAqC,CAA3F;;EACA,IAAMI,kBAAkB,GAAG,UAACD,IAAD,EAA0B;IAAA;;IAAK,mBAAM,CAACA,IAAD,CAAN,MAAY,IAAZ,IAAYE,aAAZ,GAAY,MAAZ,GAAYA,GAAEC,IAAF,CAAO,iBAAK;MAAI,kBAAW,CAACC,KAAD,EAAQP,UAAR,CAAX;IAA8B,CAA9C,CAAZ;EAA2D,CAArH;;EAEA,OAAOF,gBAAgB,CAACQ,IAAjB,CAAsBJ,iBAAtB,KAA4CH,mBAAmB,CAACO,IAApB,CAAyBF,kBAAzB,CAAnD;AACD,CAVD;;AAYA,IAAMI,WAAW,GAAG,UAACD,KAAD,EAA4BP,UAA5B,EAA8C;EAChE,OAAOO,KAAK,IAAIA,KAAK,CAACN,WAAN,GAAoBQ,OAApB,CAA4BT,UAA5B,MAA4C,CAAC,CAA7D;AACD,CAFD","names":["isGroup","option","type","popLastGroup","options","length","lastOption","pop","filterOptions","text","filteredOptions","reduce","filteredIn","push","matchSingleOption","searchableFields","searchableTagFields","searchText","toLowerCase","searchStrFieldsFn","attr","searchTagsFieldsFn","_a","some","value","matchString","indexOf"],"sourceRoot":"","sources":["../../../../src/autosuggest/utils/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AutosuggestItem } from '../interfaces';\n\ntype SearchableFields = 'value' | 'label' | 'description' | 'labelTag';\ntype SearchableTagFields = 'tags' | 'filteringTags';\n\nconst isGroup = (option: AutosuggestItem) => 'type' in option && option.type === 'parent';\n\nconst popLastGroup = (options: AutosuggestItem[]) => {\n  if (options.length) {\n    const lastOption = options[options.length - 1];\n    if (isGroup(lastOption)) {\n      options.pop();\n    }\n  }\n};\n\nexport const filterOptions = (options: AutosuggestItem[], text: string): AutosuggestItem[] => {\n  const filteredOptions = options.reduce<AutosuggestItem[]>((filteredIn, option) => {\n    if (isGroup(option)) {\n      popLastGroup(filteredIn);\n      filteredIn.push(option);\n    } else if (matchSingleOption(option, text)) {\n      filteredIn.push(option);\n    }\n    return filteredIn;\n  }, []);\n  popLastGroup(filteredOptions);\n  return filteredOptions;\n};\n\nconst matchSingleOption = (option: AutosuggestItem, text: string): boolean => {\n  const searchableFields: SearchableFields[] = ['value', 'label', 'description', 'labelTag'];\n  const searchableTagFields: SearchableTagFields[] = ['tags', 'filteringTags'];\n\n  const searchText = text.toLowerCase();\n\n  const searchStrFieldsFn = (attr: SearchableFields) => matchString(option[attr], searchText);\n  const searchTagsFieldsFn = (attr: SearchableTagFields) => option[attr]?.some(value => matchString(value, searchText));\n\n  return searchableFields.some(searchStrFieldsFn) || searchableTagFields.some(searchTagsFieldsFn);\n};\n\nconst matchString = (value: string | undefined, searchText: string) => {\n  return value && value.toLowerCase().indexOf(searchText) !== -1;\n};\n"]},"metadata":{},"sourceType":"module"}