{"ast":null,"code":"import { __spreadArray } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useState } from 'react';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalModal from '../modal/internal';\nimport InternalSelect from '../select/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { FormFieldContext } from '../internal/context/form-field-context';\nimport { LightThemes, DarkThemes } from './ace-themes';\nexport default (function (props) {\n  var _a, _b, _c, _d;\n\n  var _e = useState((_b = (_a = props.preferences) === null || _a === void 0 ? void 0 : _a.wrapLines) !== null && _b !== void 0 ? _b : true),\n      wrapLines = _e[0],\n      setWrapLines = _e[1];\n\n  var _f = useState((_d = (_c = props.preferences) === null || _c === void 0 ? void 0 : _c.theme) !== null && _d !== void 0 ? _d : props.defaultTheme),\n      theme = _f[0],\n      setTheme = _f[1];\n\n  var _g = useState(function () {\n    return __spreadArray(__spreadArray([], LightThemes, true), DarkThemes, true).filter(function (t) {\n      return t.value === theme;\n    })[0];\n  }),\n      selectedThemeOption = _g[0],\n      setSelectedThemeOption = _g[1];\n\n  var onThemeSelected = function (e) {\n    setTheme(e.detail.selectedOption.value);\n    setSelectedThemeOption(e.detail.selectedOption);\n  };\n\n  return React.createElement(FormFieldContext.Provider, {\n    value: {}\n  }, React.createElement(InternalModal, {\n    size: \"medium\",\n    visible: true,\n    onDismiss: props.onDismiss,\n    header: props.i18nStrings.header,\n    closeAriaLabel: props.i18nStrings.cancel,\n    footer: React.createElement(InternalBox, {\n      float: \"right\"\n    }, React.createElement(InternalSpaceBetween, {\n      direction: \"horizontal\",\n      size: \"xs\"\n    }, React.createElement(InternalButton, {\n      onClick: props.onDismiss\n    }, props.i18nStrings.cancel), React.createElement(InternalButton, {\n      onClick: function () {\n        return props.onConfirm({\n          wrapLines: wrapLines,\n          theme: theme\n        });\n      },\n      variant: \"primary\"\n    }, props.i18nStrings.confirm)))\n  }, React.createElement(InternalColumnLayout, {\n    columns: 2,\n    variant: \"text-grid\"\n  }, React.createElement(\"div\", null, React.createElement(InternalCheckbox, {\n    checked: wrapLines,\n    onChange: function (e) {\n      return setWrapLines(e.detail.checked);\n    }\n  }, props.i18nStrings.wrapLines)), React.createElement(\"div\", null, React.createElement(InternalFormField, {\n    label: props.i18nStrings.theme\n  }, React.createElement(InternalSelect, {\n    selectedOption: selectedThemeOption,\n    onChange: onThemeSelected,\n    options: [{\n      label: props.i18nStrings.lightThemes,\n      options: LightThemes\n    }, {\n      label: props.i18nStrings.darkThemes,\n      options: DarkThemes\n    }],\n    filteringType: \"auto\"\n  }))))));\n});","map":{"version":3,"mappings":"uCAAA;AACA;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AAEA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AAEA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,cAAxC;AAwBA,gBAAe,UAACC,KAAD,EAA6B;;;EACpC,SAA4BZ,QAAQ,CAAU,iBAAK,CAACa,WAAN,MAAiB,IAAjB,IAAiBC,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEC,SAAnB,MAA4B,IAA5B,IAA4BC,aAA5B,GAA4BA,EAA5B,GAAgC,IAA1C,CAApC;EAAA,IAACD,SAAS,QAAV;EAAA,IAAYE,YAAY,QAAxB;;EACA,SAAoBjB,QAAQ,CAAwB,iBAAK,CAACa,WAAN,MAAiB,IAAjB,IAAiBK,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEC,KAAnB,MAAwB,IAAxB,IAAwBC,aAAxB,GAAwBA,EAAxB,GAA4BR,KAAK,CAACS,YAA1D,CAA5B;EAAA,IAACF,KAAK,QAAN;EAAA,IAAQG,QAAQ,QAAhB;;EACA,SAAgDtB,QAAQ,CAC5D;IAAM,uCAAIU,WAAJ,EAAe,IAAf,GAAoBC,UAApB,EAA8B,IAA9B,EAAgCY,MAAhC,CAAuC,aAAC;MAAI,QAAC,CAACC,KAAF,KAAYL,KAAZ;IAAiB,CAA7D,EAA+D,CAA/D;EAAiE,CADX,CAAxD;EAAA,IAACM,mBAAmB,QAApB;EAAA,IAAsBC,sBAAsB,QAA5C;;EAIN,IAAMC,eAAe,GAAG,UAACC,CAAD,EAAsD;IAC5EN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,cAAT,CAAwBN,KAAzB,CAAR;IACAE,sBAAsB,CAACE,CAAC,CAACC,MAAF,CAASC,cAAV,CAAtB;EACD,CAHD;;EAKA,OACE/B,oBAACU,gBAAgB,CAACsB,QAAlB,EAA0B;IAACP,KAAK,EAAE;EAAR,CAA1B,EACEzB,oBAACO,aAAD,EAAc;IACZ0B,IAAI,EAAC,QADO;IAEZC,OAAO,EAAE,IAFG;IAGZC,SAAS,EAAEtB,KAAK,CAACsB,SAHL;IAIZC,MAAM,EAAEvB,KAAK,CAACwB,WAAN,CAAkBD,MAJd;IAKZE,cAAc,EAAEzB,KAAK,CAACwB,WAAN,CAAkBE,MALtB;IAMZC,MAAM,EACJxC,oBAACE,WAAD,EAAY;MAACuC,KAAK,EAAC;IAAP,CAAZ,EACEzC,oBAACS,oBAAD,EAAqB;MAACiC,SAAS,EAAC,YAAX;MAAwBT,IAAI,EAAC;IAA7B,CAArB,EACEjC,oBAACG,cAAD,EAAe;MAACwC,OAAO,EAAE9B,KAAK,CAACsB;IAAhB,CAAf,EAA2CtB,KAAK,CAACwB,WAAN,CAAkBE,MAA7D,CADF,EAEEvC,oBAACG,cAAD,EAAe;MAACwC,OAAO,EAAE;QAAM,YAAK,CAACC,SAAN,CAAgB;UAAE5B,SAAS,WAAX;UAAaI,KAAK;QAAlB,CAAhB;MAAqC,CAArD;MAAuDyB,OAAO,EAAC;IAA/D,CAAf,EACGhC,KAAK,CAACwB,WAAN,CAAkBS,OADrB,CAFF,CADF;EAPU,CAAd,EAiBE9C,oBAACK,oBAAD,EAAqB;IAAC0C,OAAO,EAAE,CAAV;IAAaF,OAAO,EAAC;EAArB,CAArB,EACE7C,iCACEA,oBAACI,gBAAD,EAAiB;IAAC4C,OAAO,EAAEhC,SAAV;IAAqBiC,QAAQ,EAAE,aAAC;MAAI,mBAAY,CAACpB,CAAC,CAACC,MAAF,CAASkB,OAAV,CAAZ;IAA8B;EAAlE,CAAjB,EACGnC,KAAK,CAACwB,WAAN,CAAkBrB,SADrB,CADF,CADF,EAMEhB,iCACEA,oBAACM,iBAAD,EAAkB;IAAC4C,KAAK,EAAErC,KAAK,CAACwB,WAAN,CAAkBjB;EAA1B,CAAlB,EACEpB,oBAACQ,cAAD,EAAe;IACbuB,cAAc,EAAEL,mBADH;IAEbuB,QAAQ,EAAErB,eAFG;IAGbuB,OAAO,EAAE,CACP;MAAED,KAAK,EAAErC,KAAK,CAACwB,WAAN,CAAkBe,WAA3B;MAAwCD,OAAO,EAAExC;IAAjD,CADO,EAEP;MAAEuC,KAAK,EAAErC,KAAK,CAACwB,WAAN,CAAkBgB,UAA3B;MAAuCF,OAAO,EAAEvC;IAAhD,CAFO,CAHI;IAOb0C,aAAa,EAAC;EAPD,CAAf,CADF,CADF,CANF,CAjBF,CADF,CADF;AA0CD,CAtDD","names":["React","useState","InternalBox","InternalButton","InternalCheckbox","InternalColumnLayout","InternalFormField","InternalModal","InternalSelect","InternalSpaceBetween","FormFieldContext","LightThemes","DarkThemes","props","preferences","_a","wrapLines","_b","setWrapLines","_c","theme","_d","defaultTheme","setTheme","filter","value","selectedThemeOption","setSelectedThemeOption","onThemeSelected","e","detail","selectedOption","Provider","size","visible","onDismiss","header","i18nStrings","closeAriaLabel","cancel","footer","float","direction","onClick","onConfirm","variant","confirm","columns","checked","onChange","label","options","lightThemes","darkThemes","filteringType"],"sourceRoot":"","sources":["../../../src/code-editor/preferences-modal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\n\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalModal from '../modal/internal';\nimport { SelectProps } from '../select/interfaces';\nimport InternalSelect from '../select/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { FormFieldContext } from '../internal/context/form-field-context';\nimport { NonCancelableCustomEvent } from '../internal/events';\nimport { LightThemes, DarkThemes } from './ace-themes';\nimport { CodeEditorProps } from './interfaces';\n\ninterface PreferencesModali18nStrings {\n  header: string;\n  cancel: string;\n  confirm: string;\n  wrapLines: string;\n  theme: string;\n  lightThemes: string;\n  darkThemes: string;\n}\n\ninterface PreferencesModalProps {\n  preferences?: Partial<CodeEditorProps.Preferences>;\n\n  i18nStrings: PreferencesModali18nStrings;\n\n  defaultTheme: CodeEditorProps.Theme;\n\n  onConfirm: (preferences: CodeEditorProps.Preferences) => void;\n  onDismiss: () => void;\n}\n\nexport default (props: PreferencesModalProps) => {\n  const [wrapLines, setWrapLines] = useState<boolean>(props.preferences?.wrapLines ?? true);\n  const [theme, setTheme] = useState<CodeEditorProps.Theme>(props.preferences?.theme ?? props.defaultTheme);\n  const [selectedThemeOption, setSelectedThemeOption] = useState<SelectProps.Option>(\n    () => [...LightThemes, ...DarkThemes].filter(t => t.value === theme)[0]\n  );\n\n  const onThemeSelected = (e: NonCancelableCustomEvent<SelectProps.ChangeDetail>) => {\n    setTheme(e.detail.selectedOption.value as CodeEditorProps.Theme);\n    setSelectedThemeOption(e.detail.selectedOption);\n  };\n\n  return (\n    <FormFieldContext.Provider value={{}}>\n      <InternalModal\n        size=\"medium\"\n        visible={true}\n        onDismiss={props.onDismiss}\n        header={props.i18nStrings.header}\n        closeAriaLabel={props.i18nStrings.cancel}\n        footer={\n          <InternalBox float=\"right\">\n            <InternalSpaceBetween direction=\"horizontal\" size=\"xs\">\n              <InternalButton onClick={props.onDismiss}>{props.i18nStrings.cancel}</InternalButton>\n              <InternalButton onClick={() => props.onConfirm({ wrapLines, theme })} variant=\"primary\">\n                {props.i18nStrings.confirm}\n              </InternalButton>\n            </InternalSpaceBetween>\n          </InternalBox>\n        }\n      >\n        <InternalColumnLayout columns={2} variant=\"text-grid\">\n          <div>\n            <InternalCheckbox checked={wrapLines} onChange={e => setWrapLines(e.detail.checked)}>\n              {props.i18nStrings.wrapLines}\n            </InternalCheckbox>\n          </div>\n          <div>\n            <InternalFormField label={props.i18nStrings.theme}>\n              <InternalSelect\n                selectedOption={selectedThemeOption}\n                onChange={onThemeSelected}\n                options={[\n                  { label: props.i18nStrings.lightThemes, options: LightThemes },\n                  { label: props.i18nStrings.darkThemes, options: DarkThemes },\n                ]}\n                filteringType=\"auto\"\n              />\n            </InternalFormField>\n          </div>\n        </InternalColumnLayout>\n      </InternalModal>\n    </FormFieldContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}