{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport clsx from 'clsx';\nimport FocusLock from 'react-focus-lock';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { InternalButton } from '../button/internal';\nimport styles from './styles.css.js';\nexport default function PopoverBody(_a) {\n  var _b, _c;\n\n  var size = _a.size,\n      fixedWidth = _a.fixedWidth,\n      showDismissButton = _a.dismissButton,\n      dismissAriaLabel = _a.dismissAriaLabel,\n      header = _a.header,\n      children = _a.children,\n      onDismiss = _a.onDismiss,\n      variant = _a.variant,\n      _d = _a.returnFocus,\n      returnFocus = _d === void 0 ? true : _d,\n      overflowVisible = _a.overflowVisible,\n      dismissButtonRef = _a.dismissButtonRef,\n      className = _a.className;\n  var labelledById = useUniqueId('awsui-popover-');\n  var onKeyDown = useCallback(function (event) {\n    if (event.keyCode === KeyCode.escape) {\n      onDismiss();\n    }\n  }, [onDismiss]);\n  var dismissButton = (showDismissButton !== null && showDismissButton !== void 0 ? showDismissButton : null) && React.createElement(\"div\", {\n    className: styles.dismiss\n  }, React.createElement(InternalButton, {\n    variant: \"icon\",\n    formAction: \"none\",\n    iconName: \"close\",\n    className: styles['dismiss-control'],\n    ariaLabel: dismissAriaLabel,\n    onClick: function () {\n      return onDismiss();\n    },\n    ref: dismissButtonRef\n  }));\n  return React.createElement(\"div\", {\n    className: clsx(styles.body, className, styles[\"body-size-\".concat(size)], (_b = {}, _b[styles['fixed-width']] = fixedWidth, _b[styles[\"variant-\".concat(variant)]] = variant, _b[styles['body-overflow-visible']] = overflowVisible === 'both', _b)),\n    role: header ? 'dialog' : undefined,\n    onKeyDown: onKeyDown,\n    \"aria-modal\": showDismissButton && variant !== 'annotation' ? true : undefined,\n    \"aria-labelledby\": header ? labelledById : undefined\n  }, React.createElement(FocusLock, {\n    disabled: variant === 'annotation' || !showDismissButton,\n    autoFocus: true,\n    returnFocus: returnFocus\n  }, header && React.createElement(\"div\", {\n    className: clsx(styles['header-row'], showDismissButton && styles['has-dismiss'])\n  }, dismissButton, React.createElement(\"div\", {\n    className: styles.header,\n    id: labelledById\n  }, React.createElement(\"h2\", null, header))), React.createElement(\"div\", {\n    className: !header && showDismissButton ? styles['has-dismiss'] : undefined\n  }, !header && dismissButton, React.createElement(\"div\", {\n    className: clsx(styles.content, (_c = {}, _c[styles['content-overflow-visible']] = !!overflowVisible, _c))\n  }, children))));\n}","map":{"version":3,"mappings":"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","names":["React","useCallback","clsx","FocusLock","KeyCode","useUniqueId","InternalButton","styles","PopoverBody","_a","size","fixedWidth","showDismissButton","dismissAriaLabel","header","children","onDismiss","variant","_d","returnFocus","overflowVisible","dismissButtonRef","className","labelledById","onKeyDown","event","keyCode","escape","dismissButton","dismiss","formAction","iconName","ariaLabel","onClick","ref","body","_b","role","undefined","disabled","autoFocus","id","content","_c"],"sourceRoot":"","sources":["../../../src/popover/body.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport clsx from 'clsx';\nimport FocusLock from 'react-focus-lock';\n\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\n\nimport { PopoverProps } from './interfaces';\nimport styles from './styles.css.js';\n\nexport interface PopoverBodyProps {\n  size: PopoverProps.Size;\n  fixedWidth: boolean;\n  dismissButton: boolean;\n  dismissAriaLabel: string | undefined;\n  onDismiss: () => void;\n\n  header: React.ReactNode | undefined;\n  children: React.ReactNode;\n  variant?: 'annotation';\n  returnFocus?: boolean;\n  overflowVisible?: 'content' | 'both';\n\n  dismissButtonRef?: React.Ref<ButtonProps.Ref>;\n\n  className?: string;\n}\n\nexport default function PopoverBody({\n  size,\n  fixedWidth,\n  dismissButton: showDismissButton,\n  dismissAriaLabel,\n  header,\n  children,\n  onDismiss,\n  variant,\n  returnFocus = true,\n  overflowVisible,\n  dismissButtonRef,\n  className,\n}: PopoverBodyProps) {\n  const labelledById = useUniqueId('awsui-popover-');\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.keyCode === KeyCode.escape) {\n        onDismiss();\n      }\n    },\n    [onDismiss]\n  );\n\n  const dismissButton = (showDismissButton ?? null) && (\n    <div className={styles.dismiss}>\n      <InternalButton\n        variant=\"icon\"\n        formAction=\"none\"\n        iconName=\"close\"\n        className={styles['dismiss-control']}\n        ariaLabel={dismissAriaLabel}\n        onClick={() => onDismiss()}\n        ref={dismissButtonRef}\n      />\n    </div>\n  );\n\n  return (\n    <div\n      className={clsx(styles.body, className, styles[`body-size-${size}`], {\n        [styles['fixed-width']]: fixedWidth,\n        [styles[`variant-${variant}`]]: variant,\n        [styles['body-overflow-visible']]: overflowVisible === 'both',\n      })}\n      role={header ? 'dialog' : undefined}\n      onKeyDown={onKeyDown}\n      aria-modal={showDismissButton && variant !== 'annotation' ? true : undefined}\n      aria-labelledby={header ? labelledById : undefined}\n    >\n      <FocusLock disabled={variant === 'annotation' || !showDismissButton} autoFocus={true} returnFocus={returnFocus}>\n        {header && (\n          <div className={clsx(styles['header-row'], showDismissButton && styles['has-dismiss'])}>\n            {dismissButton}\n            <div className={styles.header} id={labelledById}>\n              <h2>{header}</h2>\n            </div>\n          </div>\n        )}\n        <div className={!header && showDismissButton ? styles['has-dismiss'] : undefined}>\n          {!header && dismissButton}\n          <div className={clsx(styles.content, { [styles['content-overflow-visible']]: !!overflowVisible })}>\n            {children}\n          </div>\n        </div>\n      </FocusLock>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}