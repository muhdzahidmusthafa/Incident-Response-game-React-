{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO [mjawors] _.range\nexport function range(from, to) {\n  var result = [];\n\n  for (var i = from; i <= to; i++) {\n    result.push(i);\n  }\n\n  return result;\n}\nexport function getPaginationState(currentPageIndex, totalPagesCount, isOpenEnd) {\n  // Total number of elements handled here\n  var numberOfControls = 7; // Max number of controls that can be displayed on the left and right hand side of the current page.\n  // Works only for odd numbers\n\n  var leftDelta = Math.floor(numberOfControls / 2);\n  var rightDelta = leftDelta; // upper and lower limits for pages range\n\n  var lowerLimit = 2;\n  var upperLimit = totalPagesCount - 1;\n\n  if (isOpenEnd) {\n    rightDelta++;\n    upperLimit = totalPagesCount + 1;\n  } // Left and right indices based on delta calculation\n\n\n  var leftIndex = currentPageIndex - leftDelta;\n  var rightIndex = currentPageIndex + rightDelta; // adjust page indexes if page index is too small\n\n  if (leftIndex < lowerLimit) {\n    rightIndex += lowerLimit - leftIndex;\n    leftIndex = lowerLimit;\n  } // adjust page indexes if page index is to big\n\n\n  if (rightIndex > upperLimit) {\n    leftIndex -= rightIndex - upperLimit;\n    rightIndex = upperLimit;\n  } // adjust indexes one more time to avoid out of range errors\n\n\n  leftIndex = Math.max(leftIndex, 2);\n  rightIndex = Math.min(rightIndex, upperLimit); // consider adding dots\n\n  var leftDots = leftIndex > 2;\n  var rightDots = isOpenEnd || rightIndex < upperLimit;\n\n  if (leftDots) {\n    leftIndex++;\n  }\n\n  if (rightDots) {\n    rightIndex--;\n  }\n\n  return {\n    leftDots: leftDots,\n    rightDots: rightDots,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA;AACA,OAAM,SAAUA,KAAV,CAAgBC,IAAhB,EAA8BC,EAA9B,EAAwC;EAC5C,IAAMC,MAAM,GAAG,EAAf;;EACA,KAAK,IAAIC,CAAC,GAAGH,IAAb,EAAmBG,CAAC,IAAIF,EAAxB,EAA4BE,CAAC,EAA7B,EAAiC;IAC/BD,MAAM,CAACE,IAAP,CAAYD,CAAZ;EACD;;EACD,OAAOD,MAAP;AACD;AAED,OAAM,SAAUG,kBAAV,CAA6BC,gBAA7B,EAAuDC,eAAvD,EAAgFC,SAAhF,EAAmG;EACvG;EACA,IAAMC,gBAAgB,GAAG,CAAzB,CAFuG,CAGvG;EACA;;EACA,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,gBAAgB,GAAG,CAA9B,CAAlB;EACA,IAAII,UAAU,GAAGH,SAAjB,CANuG,CAOvG;;EACA,IAAMI,UAAU,GAAG,CAAnB;EACA,IAAIC,UAAU,GAAGR,eAAe,GAAG,CAAnC;;EAEA,IAAIC,SAAJ,EAAe;IACbK,UAAU;IACVE,UAAU,GAAGR,eAAe,GAAG,CAA/B;EACD,CAdsG,CAgBvG;;;EACA,IAAIS,SAAS,GAAGV,gBAAgB,GAAGI,SAAnC;EACA,IAAIO,UAAU,GAAGX,gBAAgB,GAAGO,UAApC,CAlBuG,CAoBvG;;EACA,IAAIG,SAAS,GAAGF,UAAhB,EAA4B;IAC1BG,UAAU,IAAIH,UAAU,GAAGE,SAA3B;IACAA,SAAS,GAAGF,UAAZ;EACD,CAxBsG,CA0BvG;;;EACA,IAAIG,UAAU,GAAGF,UAAjB,EAA6B;IAC3BC,SAAS,IAAIC,UAAU,GAAGF,UAA1B;IACAE,UAAU,GAAGF,UAAb;EACD,CA9BsG,CAgCvG;;;EACAC,SAAS,GAAGL,IAAI,CAACO,GAAL,CAASF,SAAT,EAAoB,CAApB,CAAZ;EACAC,UAAU,GAAGN,IAAI,CAACQ,GAAL,CAASF,UAAT,EAAqBF,UAArB,CAAb,CAlCuG,CAoCvG;;EACA,IAAMK,QAAQ,GAAGJ,SAAS,GAAG,CAA7B;EACA,IAAMK,SAAS,GAAGb,SAAS,IAAIS,UAAU,GAAGF,UAA5C;;EAEA,IAAIK,QAAJ,EAAc;IACZJ,SAAS;EACV;;EAED,IAAIK,SAAJ,EAAe;IACbJ,UAAU;EACX;;EAED,OAAO;IAAEG,QAAQ,UAAV;IAAYC,SAAS,WAArB;IAAuBL,SAAS,WAAhC;IAAkCC,UAAU;EAA5C,CAAP;AACD","names":["range","from","to","result","i","push","getPaginationState","currentPageIndex","totalPagesCount","isOpenEnd","numberOfControls","leftDelta","Math","floor","rightDelta","lowerLimit","upperLimit","leftIndex","rightIndex","max","min","leftDots","rightDots"],"sourceRoot":"","sources":["../../../src/pagination/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n// TODO [mjawors] _.range\nexport function range(from: number, to: number) {\n  const result = [];\n  for (let i = from; i <= to; i++) {\n    result.push(i);\n  }\n  return result;\n}\n\nexport function getPaginationState(currentPageIndex: number, totalPagesCount: number, isOpenEnd?: boolean) {\n  // Total number of elements handled here\n  const numberOfControls = 7;\n  // Max number of controls that can be displayed on the left and right hand side of the current page.\n  // Works only for odd numbers\n  const leftDelta = Math.floor(numberOfControls / 2);\n  let rightDelta = leftDelta;\n  // upper and lower limits for pages range\n  const lowerLimit = 2;\n  let upperLimit = totalPagesCount - 1;\n\n  if (isOpenEnd) {\n    rightDelta++;\n    upperLimit = totalPagesCount + 1;\n  }\n\n  // Left and right indices based on delta calculation\n  let leftIndex = currentPageIndex - leftDelta;\n  let rightIndex = currentPageIndex + rightDelta;\n\n  // adjust page indexes if page index is too small\n  if (leftIndex < lowerLimit) {\n    rightIndex += lowerLimit - leftIndex;\n    leftIndex = lowerLimit;\n  }\n\n  // adjust page indexes if page index is to big\n  if (rightIndex > upperLimit) {\n    leftIndex -= rightIndex - upperLimit;\n    rightIndex = upperLimit;\n  }\n\n  // adjust indexes one more time to avoid out of range errors\n  leftIndex = Math.max(leftIndex, 2);\n  rightIndex = Math.min(rightIndex, upperLimit);\n\n  // consider adding dots\n  const leftDots = leftIndex > 2;\n  const rightDots = isOpenEnd || rightIndex < upperLimit;\n\n  if (leftDots) {\n    leftIndex++;\n  }\n\n  if (rightDots) {\n    rightIndex--;\n  }\n\n  return { leftDots, rightDots, leftIndex, rightIndex };\n}\n"]},"metadata":{},"sourceType":"module"}