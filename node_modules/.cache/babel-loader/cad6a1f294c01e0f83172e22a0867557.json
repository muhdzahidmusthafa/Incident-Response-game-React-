{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport InternalBox from '../box/internal';\nimport styles from './styles.css.js';\nimport React, { useCallback } from 'react';\nimport InternalFormField from '../form-field/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalGrid from '../grid/internal';\nimport { InternalButton } from '../button/internal';\nimport clsx from 'clsx';\n\nvar Divider = function () {\n  return React.createElement(InternalBox, {\n    className: styles.divider,\n    padding: {\n      top: 'l'\n    }\n  });\n};\n\nvar Attribute = function (_a) {\n  var control = _a.control,\n      hideLabel = _a.hideLabel,\n      props = __rest(_a, [\"control\", \"hideLabel\"]);\n\n  return React.createElement(InternalFormField, __assign({\n    __hideLabel: hideLabel\n  }, props, {\n    className: styles.field,\n    stretch: true\n  }), control);\n};\n\nvar GRID_DEFINITION = [{\n  colspan: {\n    \"default\": 12,\n    xs: 9\n  }\n}];\nvar REMOVABLE_GRID_DEFINITION = [{\n  colspan: {\n    \"default\": 12,\n    xs: 9\n  }\n}, {\n  colspan: {\n    \"default\": 12,\n    xs: 3\n  }\n}];\nexport var Row = React.memo(function (_a) {\n  var breakpoint = _a.breakpoint,\n      item = _a.item,\n      definition = _a.definition,\n      index = _a.index,\n      removable = _a.removable,\n      removeButtonText = _a.removeButtonText,\n      removeButtonRefs = _a.removeButtonRefs,\n      onRemoveButtonClick = _a.onRemoveButtonClick;\n  var isNarrowViewport = breakpoint === 'default' || breakpoint === 'xxs';\n  var isWideViewport = !isNarrowViewport;\n  var handleRemoveClick = useCallback(function () {\n    fireNonCancelableEvent(onRemoveButtonClick, {\n      itemIndex: index\n    });\n  }, [onRemoveButtonClick, index]);\n\n  var render = function (item, itemIndex, slot) {\n    return typeof slot === 'function' ? slot(item, itemIndex) : slot;\n  };\n\n  return React.createElement(InternalBox, {\n    className: styles.row,\n    margin: {\n      bottom: 's'\n    }\n  }, React.createElement(InternalGrid, {\n    __breakpoint: breakpoint,\n    gridDefinition: removable ? REMOVABLE_GRID_DEFINITION : GRID_DEFINITION\n  }, React.createElement(InternalColumnLayout, {\n    className: styles['row-control'],\n    columns: definition.length,\n    __breakpoint: breakpoint\n  }, definition.map(function (_a, defIndex) {\n    var info = _a.info,\n        label = _a.label,\n        constraintText = _a.constraintText,\n        errorText = _a.errorText,\n        control = _a.control;\n    return React.createElement(Attribute, {\n      key: defIndex,\n      label: label,\n      info: info,\n      constraintText: constraintText && render(item, index, constraintText),\n      errorText: errorText && render(item, index, errorText),\n      control: control && render(item, index, control),\n      hideLabel: isWideViewport && index > 0\n    });\n  })), removable && React.createElement(ButtonContainer, {\n    index: index,\n    isNarrowViewport: isNarrowViewport\n  }, React.createElement(InternalButton, {\n    className: styles['remove-button'],\n    formAction: \"none\",\n    ref: function (ref) {\n      removeButtonRefs[index] = ref !== null && ref !== void 0 ? ref : undefined;\n    },\n    onClick: handleRemoveClick\n  }, removeButtonText))), isNarrowViewport && React.createElement(Divider, null));\n});\n\nvar ButtonContainer = function (_a) {\n  var _b;\n\n  var index = _a.index,\n      children = _a.children,\n      isNarrowViewport = _a.isNarrowViewport;\n  return React.createElement(\"div\", {\n    className: clsx((_b = {}, _b[styles['button-container']] = !isNarrowViewport && index === 0, _b[styles['right-align']] = isNarrowViewport, _b))\n  }, children);\n};","map":{"version":3,"mappings":"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","names":["InternalBox","styles","React","useCallback","InternalFormField","InternalColumnLayout","fireNonCancelableEvent","InternalGrid","InternalButton","clsx","Divider","className","divider","padding","top","Attribute","_a","hideLabel","props","__assign","__hideLabel","field","stretch","control","GRID_DEFINITION","colspan","xs","REMOVABLE_GRID_DEFINITION","Row","memo","breakpoint","item","definition","index","removable","removeButtonText","removeButtonRefs","onRemoveButtonClick","isNarrowViewport","isWideViewport","handleRemoveClick","itemIndex","render","slot","row","margin","bottom","__breakpoint","gridDefinition","columns","length","map","defIndex","info","label","constraintText","errorText","key","ButtonContainer","formAction","ref","undefined","onClick","children","_b"],"sourceRoot":"","sources":["../../../src/attribute-editor/row.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport InternalBox from '../box/internal';\nimport styles from './styles.css.js';\nimport React, { useCallback } from 'react';\nimport InternalFormField from '../form-field/internal';\nimport InternalColumnLayout, { ColumnLayoutBreakpoint } from '../column-layout/internal';\nimport { AttributeEditorProps } from './interfaces';\nimport { ButtonProps } from '../button/interfaces';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport InternalGrid from '../grid/internal';\nimport { InternalButton } from '../button/internal';\nimport clsx from 'clsx';\n\nconst Divider = () => <InternalBox className={styles.divider} padding={{ top: 'l' }} />;\n\ninterface AttributeProps {\n  info?: React.ReactNode;\n  label?: React.ReactNode;\n  errorText?: React.ReactNode;\n  control?: React.ReactNode;\n  constraintText?: React.ReactNode;\n  hideLabel?: boolean;\n}\n\nconst Attribute = ({ control, hideLabel, ...props }: AttributeProps) => (\n  <InternalFormField __hideLabel={hideLabel} {...props} className={styles.field} stretch={true}>\n    {control}\n  </InternalFormField>\n);\n\nexport interface RowProps<T> {\n  breakpoint: ColumnLayoutBreakpoint | null;\n  item: T;\n  definition: ReadonlyArray<AttributeEditorProps.FieldDefinition<T>>;\n  index: number;\n  removable: boolean;\n  removeButtonText: string;\n  removeButtonRefs: Array<ButtonProps.Ref | undefined>;\n  onRemoveButtonClick?: NonCancelableEventHandler<AttributeEditorProps.RemoveButtonClickDetail>;\n}\n\nconst GRID_DEFINITION = [{ colspan: { default: 12, xs: 9 } }];\nconst REMOVABLE_GRID_DEFINITION = [{ colspan: { default: 12, xs: 9 } }, { colspan: { default: 12, xs: 3 } }];\nexport const Row = React.memo(\n  <T,>({\n    breakpoint,\n    item,\n    definition,\n    index,\n    removable,\n    removeButtonText,\n    removeButtonRefs,\n    onRemoveButtonClick,\n  }: RowProps<T>) => {\n    const isNarrowViewport = breakpoint === 'default' || breakpoint === 'xxs';\n    const isWideViewport = !isNarrowViewport;\n\n    const handleRemoveClick = useCallback(() => {\n      fireNonCancelableEvent(onRemoveButtonClick, { itemIndex: index });\n    }, [onRemoveButtonClick, index]);\n\n    const render = (item: T, itemIndex: number, slot: AttributeEditorProps.FieldRenderable<T> | React.ReactNode) =>\n      typeof slot === 'function' ? slot(item, itemIndex) : slot;\n\n    return (\n      <InternalBox className={styles.row} margin={{ bottom: 's' }}>\n        <InternalGrid\n          __breakpoint={breakpoint}\n          gridDefinition={removable ? REMOVABLE_GRID_DEFINITION : GRID_DEFINITION}\n        >\n          <InternalColumnLayout className={styles['row-control']} columns={definition.length} __breakpoint={breakpoint}>\n            {definition.map(({ info, label, constraintText, errorText, control }, defIndex) => (\n              <Attribute\n                key={defIndex}\n                label={label}\n                info={info}\n                constraintText={constraintText && render(item, index, constraintText)}\n                errorText={errorText && render(item, index, errorText)}\n                control={control && render(item, index, control)}\n                hideLabel={isWideViewport && index > 0}\n              />\n            ))}\n          </InternalColumnLayout>\n          {removable && (\n            <ButtonContainer index={index} isNarrowViewport={isNarrowViewport}>\n              <InternalButton\n                className={styles['remove-button']}\n                formAction=\"none\"\n                ref={ref => {\n                  removeButtonRefs[index] = ref ?? undefined;\n                }}\n                onClick={handleRemoveClick}\n              >\n                {removeButtonText}\n              </InternalButton>\n            </ButtonContainer>\n          )}\n        </InternalGrid>\n        {isNarrowViewport && <Divider />}\n      </InternalBox>\n    );\n  }\n);\n\ninterface ButtonContainer {\n  index: number;\n  children: React.ReactNode;\n  isNarrowViewport: boolean;\n}\n\nconst ButtonContainer = ({ index, children, isNarrowViewport }: ButtonContainer) => (\n  <div\n    className={clsx({\n      [styles['button-container']]: !isNarrowViewport && index === 0,\n      [styles['right-align']]: isNarrowViewport,\n    })}\n  >\n    {children}\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}