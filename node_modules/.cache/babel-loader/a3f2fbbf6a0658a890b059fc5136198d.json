{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { ResizableBox } from 'react-resizable';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { getBaseProps } from '../internal/base-component';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { Pane } from './pane';\nimport { useChangeEffect } from './listeners';\nimport { getDefaultConfig, getAceTheme, getLanguageLabel, DEFAULT_DARK_THEME, DEFAULT_LIGHT_THEME, getDefaultTheme } from './util';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { setupEditor } from './setup-editor';\nimport handler from './resize-handler';\nimport PreferencesModal from './preferences-modal';\nimport LoadingScreen from './loading-screen';\nimport ErrorScreen from './error-screen';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { useContainerQuery } from '../internal/hooks/container-queries/use-container-query';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useCurrentMode } from '../internal/hooks/use-visual-mode';\nimport { StatusBar } from './status-bar';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useControllable } from '../internal/hooks/use-controllable';\nexport default function CodeEditor(props) {\n  var _a;\n\n  var __internalRootRef = useBaseComponent('CodeEditor').__internalRootRef;\n\n  var _b = useFormFieldContext(props),\n      controlId = _b.controlId,\n      ariaLabelledby = _b.ariaLabelledby,\n      ariaDescribedby = _b.ariaDescribedby;\n\n  var ace = props.ace,\n      value = props.value,\n      language = props.language,\n      i18nStrings = props.i18nStrings,\n      editorContentHeight = props.editorContentHeight,\n      onEditorContentResize = props.onEditorContentResize,\n      rest = __rest(props, [\"ace\", \"value\", \"language\", \"i18nStrings\", \"editorContentHeight\", \"onEditorContentResize\"]);\n\n  var _c = useControllable(editorContentHeight, onEditorContentResize, 480, {\n    componentName: 'code-editor',\n    changeHandler: 'onEditorContentResize',\n    controlledProp: 'editorContentHeight'\n  }),\n      _d = _c[0],\n      editorHeight = _d === void 0 ? 480 : _d,\n      setEditorHeight = _c[1];\n\n  var baseProps = getBaseProps(rest);\n\n  var _e = useState(),\n      editor = _e[0],\n      setEditor = _e[1];\n\n  var mode = useCurrentMode(__internalRootRef);\n  var defaultTheme = mode === 'dark' ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;\n  var editorRef = useCallback(function (elem) {\n    if (!ace || !elem) {\n      return;\n    }\n\n    var config = getDefaultConfig();\n    setEditor(ace.edit(elem, __assign(__assign({}, config), {\n      theme: getAceTheme(getDefaultTheme(elem))\n    })));\n  }, [ace]); // loads as soon as ace lib is available\n\n  useEffect(function () {\n    if (!editor) {\n      return;\n    }\n\n    var textarea = editor.renderer.textarea;\n\n    if (!textarea) {\n      return;\n    }\n\n    var updateAttribute = function (attribute, value) {\n      return value ? textarea.setAttribute(attribute, value) : textarea.removeAttribute(attribute);\n    };\n\n    updateAttribute('id', controlId);\n    updateAttribute('aria-labelledby', ariaLabelledby);\n    updateAttribute('aria-describedby', ariaDescribedby);\n  }, [ariaDescribedby, ariaLabelledby, controlId, editor]);\n\n  var _f = useState('hidden'),\n      paneStatus = _f[0],\n      setPaneStatus = _f[1];\n\n  var _g = useState([]),\n      annotations = _g[0],\n      setAnnotations = _g[1];\n\n  var _h = useState(),\n      highlightedAnnotation = _h[0],\n      setHighlightedAnnotation = _h[1];\n\n  var _j = useState(''),\n      languageLabel = _j[0],\n      setLanguageLabel = _j[1];\n\n  var _k = useState({\n    row: 0,\n    column: 0\n  }),\n      cursorPosition = _k[0],\n      setCursorPosition = _k[1];\n\n  var _l = useState(false),\n      isTabFocused = _l[0],\n      setTabFocused = _l[1];\n\n  var errorsTabRef = useRef(null);\n  var warningsTabRef = useRef(null);\n\n  var _m = useContainerQuery(function (rect) {\n    return rect.width;\n  }),\n      codeEditorWidth = _m[0],\n      codeEditorMeasureRef = _m[1];\n\n  var refObject = useRef(null);\n  var mergedRef = useMergeRefs(codeEditorMeasureRef, refObject, __internalRootRef);\n  var isRefresh = useVisualRefresh(refObject);\n  useEffect(function () {\n    editor === null || editor === void 0 ? void 0 : editor.resize();\n  }, [editor, editorContentHeight, codeEditorWidth]);\n  var paneId = useUniqueId('code-editor-pane');\n  useEffect(function () {\n    if (!ace || !editor) {\n      return;\n    }\n\n    setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus);\n    return function () {\n      editor === null || editor === void 0 ? void 0 : editor.destroy();\n    }; // TODO profile/monitor this\n  }, [ace, editor, __internalRootRef]);\n  useEffect(function () {\n    if (!editor) {\n      return;\n    }\n\n    if (value === editor.getValue()) {\n      return;\n    } // TODO maintain cursor position?\n\n\n    var pos = editor.session.selection.toJSON();\n    editor.setValue(value, -1);\n    editor.session.selection.fromJSON(pos);\n  }, [editor, value]);\n  useEffect(function () {\n    if (!editor) {\n      return;\n    }\n\n    editor.session.setMode(\"ace/mode/\".concat(language));\n    setLanguageLabel(getLanguageLabel(language));\n  }, [editor, language]);\n  useEffect(function () {\n    var _a, _b, _c, _d;\n\n    if (!editor) {\n      return;\n    }\n\n    var theme = (_b = (_a = props.preferences) === null || _a === void 0 ? void 0 : _a.theme) !== null && _b !== void 0 ? _b : defaultTheme;\n    editor.setTheme(getAceTheme(theme));\n    editor.session.setUseWrapMode((_d = (_c = props.preferences) === null || _c === void 0 ? void 0 : _c.wrapLines) !== null && _d !== void 0 ? _d : true);\n  }, [editor, defaultTheme, props.preferences]); // listeners\n\n  useChangeEffect(editor, props.onChange, props.onDelayedChange); // TODO implement other listeners\n  // Hide error panel when there are no errors to show.\n\n  useEffect(function () {\n    if (annotations.length === 0) {\n      setPaneStatus('hidden');\n    }\n\n    if (props.onValidate) {\n      fireNonCancelableEvent(props.onValidate, {\n        annotations: annotations\n      });\n    }\n  }, [annotations, props.onValidate]);\n  var errorCount = annotations.filter(function (a) {\n    return a.type === 'error';\n  }).length;\n  var warningCount = annotations.filter(function (a) {\n    return a.type === 'warning';\n  }).length;\n  var currentAnnotations = useMemo(function () {\n    return annotations.filter(function (a) {\n      return a.type === paneStatus;\n    });\n  }, [annotations, paneStatus]);\n  /*\n   * Callbacks\n   */\n\n  var onEditorKeydown = useCallback(function (e) {\n    if (editor && e.target === editor.container && e.keyCode === KeyCode.enter) {\n      e.stopPropagation();\n      e.preventDefault();\n      editor.focus();\n    }\n  }, [editor]);\n  var onTabFocus = useCallback(function () {\n    return setTabFocused(true);\n  }, []);\n  var onTabBlur = useCallback(function () {\n    return setTabFocused(false);\n  }, []);\n  var onResize = useCallback(function () {\n    editor === null || editor === void 0 ? void 0 : editor.resize();\n  }, [editor]);\n  var onErrorPaneToggle = useCallback(function () {\n    setPaneStatus(paneStatus !== 'error' ? 'error' : 'hidden');\n  }, [paneStatus]);\n  var onWarningPaneToggle = useCallback(function () {\n    setPaneStatus(paneStatus !== 'warning' ? 'warning' : 'hidden');\n  }, [paneStatus]);\n  var onPaneClose = useCallback(function () {\n    if (paneStatus === 'error' && errorsTabRef.current) {\n      errorsTabRef.current.focus();\n    }\n\n    if (paneStatus === 'warning' && warningsTabRef.current) {\n      warningsTabRef.current.focus();\n    }\n\n    setPaneStatus('hidden');\n  }, [paneStatus]);\n\n  var onAnnotationClick = function (_a) {\n    var _b = _a.row,\n        row = _b === void 0 ? 0 : _b,\n        _c = _a.column,\n        column = _c === void 0 ? 0 : _c;\n\n    if (!editor) {\n      return;\n    }\n\n    editor.focus();\n    editor.gotoLine(row + 1, column, false);\n    setHighlightedAnnotation(undefined);\n  };\n\n  var onAnnotationClear = useCallback(function () {\n    setHighlightedAnnotation(undefined);\n  }, []);\n  /**\n   * Ignore focus lock if focused element is the pane tab button or within editor tree.\n   * This check is required:\n   * - When closing the pane with `ESC` key: The panel closes asynchronously and its focus lock\n   *   still exists when trying to focus the tab button in higher-order component.\n   * - When clicking or hittin `Enter` on an annotation: The panel remains open but focus lock\n   *   deactivates asynchronously.\n   */\n\n  var shouldHandleFocus = useCallback(function (activeElement) {\n    return activeElement !== errorsTabRef.current && activeElement !== warningsTabRef.current && !(editor === null || editor === void 0 ? void 0 : editor.container.contains(activeElement));\n  }, [editor]);\n\n  var _o = useState(false),\n      isPreferencesModalVisible = _o[0],\n      setPreferencesModalVisible = _o[1];\n\n  var onPreferencesOpen = function () {\n    return setPreferencesModalVisible(true);\n  };\n\n  var onPreferencesConfirm = function (p) {\n    fireNonCancelableEvent(props.onPreferencesChange, p);\n    setPreferencesModalVisible(false);\n  };\n\n  var onPreferencesDismiss = function () {\n    return setPreferencesModalVisible(false);\n  };\n\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(styles['code-editor'], baseProps.className, (_a = {}, _a[styles['code-editor-refresh']] = isRefresh, _a)),\n    ref: mergedRef\n  }), props.loading && React.createElement(LoadingScreen, null, i18nStrings.loadingState), !ace && !props.loading && React.createElement(ErrorScreen, {\n    recoveryText: i18nStrings.errorStateRecovery,\n    onRecoveryClick: props.onRecoveryClick\n  }, i18nStrings.errorState), ace && !props.loading && React.createElement(React.Fragment, null, React.createElement(ResizableBox, {\n    className: styles['resizable-box'],\n    width: Infinity,\n    height: Math.max(editorHeight, 20),\n    minConstraints: [Infinity, 20],\n    axis: \"y\",\n    handle: handler,\n    onResize: function (e, data) {\n      setEditorHeight(data.size.height);\n      onResize();\n      fireNonCancelableEvent(onEditorContentResize, {\n        height: data.size.height\n      });\n    }\n  }, React.createElement(\"div\", {\n    ref: editorRef,\n    className: clsx(styles.editor, styles.ace),\n    onKeyDown: onEditorKeydown,\n    tabIndex: 0,\n    role: \"group\",\n    \"aria-label\": i18nStrings.editorGroupAriaLabel\n  })), React.createElement(\"div\", {\n    role: \"group\",\n    \"aria-label\": i18nStrings.statusBarGroupAriaLabel\n  }, React.createElement(StatusBar, {\n    languageLabel: languageLabel,\n    cursorPosition: i18nStrings.cursorPosition(cursorPosition.row + 1, cursorPosition.column + 1),\n    errorCount: errorCount,\n    warningCount: warningCount,\n    paneStatus: paneStatus,\n    onErrorPaneToggle: onErrorPaneToggle,\n    onWarningPaneToggle: onWarningPaneToggle,\n    onTabFocus: onTabFocus,\n    onTabBlur: onTabBlur,\n    errorsTabRef: errorsTabRef,\n    warningsTabRef: warningsTabRef,\n    i18nStrings: i18nStrings,\n    isTabFocused: isTabFocused,\n    paneId: paneId,\n    onPreferencesOpen: onPreferencesOpen,\n    isRefresh: isRefresh\n  }), React.createElement(Pane, {\n    id: paneId,\n    visible: paneStatus !== 'hidden',\n    annotations: currentAnnotations,\n    highlighted: highlightedAnnotation,\n    onAnnotationClick: onAnnotationClick,\n    onAnnotationClear: onAnnotationClear,\n    onClose: onPaneClose,\n    onAllowlist: shouldHandleFocus,\n    cursorPositionLabel: i18nStrings.cursorPosition,\n    closeButtonAriaLabel: i18nStrings.paneCloseButtonAriaLabel\n  })), isPreferencesModalVisible && React.createElement(PreferencesModal, {\n    onConfirm: onPreferencesConfirm,\n    onDismiss: onPreferencesDismiss,\n    preferences: props.preferences,\n    defaultTheme: defaultTheme,\n    i18nStrings: {\n      header: i18nStrings.preferencesModalHeader,\n      cancel: i18nStrings.preferencesModalCancel,\n      confirm: i18nStrings.preferencesModalConfirm,\n      wrapLines: i18nStrings.preferencesModalWrapLines,\n      theme: i18nStrings.preferencesModalTheme,\n      lightThemes: i18nStrings.preferencesModalLightThemes,\n      darkThemes: i18nStrings.preferencesModalDarkThemes\n    }\n  })));\n}\napplyDisplayName(CodeEditor, 'CodeEditor');","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useRef","useState","clsx","ResizableBox","useMergeRefs","getBaseProps","KeyCode","useUniqueId","Pane","useChangeEffect","getDefaultConfig","getAceTheme","getLanguageLabel","DEFAULT_DARK_THEME","DEFAULT_LIGHT_THEME","getDefaultTheme","fireNonCancelableEvent","setupEditor","handler","PreferencesModal","LoadingScreen","ErrorScreen","styles","applyDisplayName","useContainerQuery","useBaseComponent","useCurrentMode","StatusBar","useFormFieldContext","useVisualRefresh","useControllable","CodeEditor","props","__internalRootRef","controlId","ariaLabelledby","ariaDescribedby","value","language","i18nStrings","editorContentHeight","onEditorContentResize","rest","componentName","changeHandler","controlledProp","_d","editorHeight","setEditorHeight","baseProps","editor","setEditor","mode","defaultTheme","editorRef","elem","ace","config","edit","__assign","theme","renderer","textarea","updateAttribute","attribute","setAttribute","removeAttribute","paneStatus","setPaneStatus","annotations","setAnnotations","highlightedAnnotation","setHighlightedAnnotation","languageLabel","setLanguageLabel","row","column","cursorPosition","setCursorPosition","isTabFocused","setTabFocused","errorsTabRef","warningsTabRef","width","codeEditorWidth","codeEditorMeasureRef","refObject","mergedRef","isRefresh","resize","paneId","destroy","getValue","pos","session","selection","toJSON","setValue","fromJSON","setMode","preferences","_a","_b","setTheme","setUseWrapMode","_c","wrapLines","onChange","onDelayedChange","length","onValidate","errorCount","filter","type","warningCount","currentAnnotations","onEditorKeydown","e","target","container","keyCode","enter","stopPropagation","preventDefault","focus","onTabFocus","onTabBlur","onResize","onErrorPaneToggle","onWarningPaneToggle","onPaneClose","current","onAnnotationClick","gotoLine","undefined","onAnnotationClear","shouldHandleFocus","activeElement","contains","isPreferencesModalVisible","setPreferencesModalVisible","onPreferencesOpen","onPreferencesConfirm","p","onPreferencesChange","onPreferencesDismiss","className","ref","loading","loadingState","recoveryText","errorStateRecovery","onRecoveryClick","errorState","Infinity","height","Math","max","minConstraints","axis","handle","data","size","onKeyDown","tabIndex","role","editorGroupAriaLabel","statusBarGroupAriaLabel","id","visible","highlighted","onClose","onAllowlist","cursorPositionLabel","closeButtonAriaLabel","paneCloseButtonAriaLabel","onConfirm","onDismiss","header","preferencesModalHeader","cancel","preferencesModalCancel","confirm","preferencesModalConfirm","preferencesModalWrapLines","preferencesModalTheme","lightThemes","preferencesModalLightThemes","darkThemes","preferencesModalDarkThemes"],"sourceRoot":"","sources":["../../../src/code-editor/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Ace } from 'ace-builds';\nimport clsx from 'clsx';\nimport { ResizableBox } from 'react-resizable';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { CodeEditorProps } from './interfaces';\nimport { Pane } from './pane';\nimport { useChangeEffect } from './listeners';\nimport {\n  getDefaultConfig,\n  getAceTheme,\n  PaneStatus,\n  getLanguageLabel,\n  DEFAULT_DARK_THEME,\n  DEFAULT_LIGHT_THEME,\n  getDefaultTheme,\n} from './util';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { setupEditor } from './setup-editor';\nimport handler from './resize-handler';\nimport PreferencesModal from './preferences-modal';\nimport LoadingScreen from './loading-screen';\nimport ErrorScreen from './error-screen';\n\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { useContainerQuery } from '../internal/hooks/container-queries/use-container-query';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useCurrentMode } from '../internal/hooks/use-visual-mode';\nimport { StatusBar } from './status-bar';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useControllable } from '../internal/hooks/use-controllable';\nexport { CodeEditorProps };\n\nexport default function CodeEditor(props: CodeEditorProps) {\n  const { __internalRootRef } = useBaseComponent('CodeEditor');\n  const { controlId, ariaLabelledby, ariaDescribedby } = useFormFieldContext(props);\n  const { ace, value, language, i18nStrings, editorContentHeight, onEditorContentResize, ...rest } = props;\n  const [editorHeight = 480, setEditorHeight] = useControllable(editorContentHeight, onEditorContentResize, 480, {\n    componentName: 'code-editor',\n    changeHandler: 'onEditorContentResize',\n    controlledProp: 'editorContentHeight',\n  });\n  const baseProps = getBaseProps(rest);\n\n  const [editor, setEditor] = useState<Ace.Editor>();\n  const mode = useCurrentMode(__internalRootRef);\n  const defaultTheme = mode === 'dark' ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;\n\n  const editorRef = useCallback(\n    (elem: HTMLDivElement) => {\n      if (!ace || !elem) {\n        return;\n      }\n\n      const config = getDefaultConfig();\n      setEditor(\n        ace.edit(elem, {\n          ...config,\n          theme: getAceTheme(getDefaultTheme(elem)),\n        })\n      );\n    },\n    [ace]\n  ); // loads as soon as ace lib is available\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n    const { textarea } = editor.renderer as unknown as { textarea: HTMLTextAreaElement };\n    if (!textarea) {\n      return;\n    }\n    const updateAttribute = (attribute: string, value: string | undefined) =>\n      value ? textarea.setAttribute(attribute, value) : textarea.removeAttribute(attribute);\n    updateAttribute('id', controlId);\n    updateAttribute('aria-labelledby', ariaLabelledby);\n    updateAttribute('aria-describedby', ariaDescribedby);\n  }, [ariaDescribedby, ariaLabelledby, controlId, editor]);\n\n  const [paneStatus, setPaneStatus] = useState<PaneStatus>('hidden');\n  const [annotations, setAnnotations] = useState<Ace.Annotation[]>([]);\n  const [highlightedAnnotation, setHighlightedAnnotation] = useState<Ace.Annotation>();\n  const [languageLabel, setLanguageLabel] = useState<string>('');\n  const [cursorPosition, setCursorPosition] = useState<Ace.Point>({ row: 0, column: 0 });\n  const [isTabFocused, setTabFocused] = useState<boolean>(false);\n\n  const errorsTabRef = useRef<HTMLButtonElement>(null);\n  const warningsTabRef = useRef<HTMLButtonElement>(null);\n\n  const [codeEditorWidth, codeEditorMeasureRef] = useContainerQuery(rect => rect.width);\n  const refObject = useRef(null);\n  const mergedRef = useMergeRefs(codeEditorMeasureRef, refObject, __internalRootRef);\n\n  const isRefresh = useVisualRefresh(refObject);\n\n  useEffect(() => {\n    editor?.resize();\n  }, [editor, editorContentHeight, codeEditorWidth]);\n\n  const paneId = useUniqueId('code-editor-pane');\n\n  useEffect(() => {\n    if (!ace || !editor) {\n      return;\n    }\n\n    setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus);\n\n    return () => {\n      editor?.destroy();\n    }; // TODO profile/monitor this\n  }, [ace, editor, __internalRootRef]);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n    if (value === editor.getValue()) {\n      return;\n    }\n    // TODO maintain cursor position?\n    const pos = editor.session.selection.toJSON();\n    editor.setValue(value, -1);\n    editor.session.selection.fromJSON(pos);\n  }, [editor, value]);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n    editor.session.setMode(`ace/mode/${language}`);\n\n    setLanguageLabel(getLanguageLabel(language));\n  }, [editor, language]);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n\n    const theme: CodeEditorProps.Theme = props.preferences?.theme ?? defaultTheme;\n\n    editor.setTheme(getAceTheme(theme));\n\n    editor.session.setUseWrapMode(props.preferences?.wrapLines ?? true);\n  }, [editor, defaultTheme, props.preferences]);\n\n  // listeners\n  useChangeEffect(editor, props.onChange, props.onDelayedChange);\n  // TODO implement other listeners\n\n  // Hide error panel when there are no errors to show.\n  useEffect(() => {\n    if (annotations.length === 0) {\n      setPaneStatus('hidden');\n    }\n\n    if (props.onValidate) {\n      fireNonCancelableEvent(props.onValidate, { annotations });\n    }\n  }, [annotations, props.onValidate]);\n\n  const errorCount = annotations.filter(a => a.type === 'error').length;\n  const warningCount = annotations.filter(a => a.type === 'warning').length;\n  const currentAnnotations = useMemo(() => annotations.filter(a => a.type === paneStatus), [annotations, paneStatus]);\n\n  /*\n   * Callbacks\n   */\n\n  const onEditorKeydown = useCallback(\n    (e: React.KeyboardEvent) => {\n      if (editor && e.target === editor.container && e.keyCode === KeyCode.enter) {\n        e.stopPropagation();\n        e.preventDefault();\n        editor.focus();\n      }\n    },\n    [editor]\n  );\n\n  const onTabFocus = useCallback(() => setTabFocused(true), []);\n  const onTabBlur = useCallback(() => setTabFocused(false), []);\n\n  const onResize = useCallback(() => {\n    editor?.resize();\n  }, [editor]);\n\n  const onErrorPaneToggle = useCallback(() => {\n    setPaneStatus(paneStatus !== 'error' ? 'error' : 'hidden');\n  }, [paneStatus]);\n\n  const onWarningPaneToggle = useCallback(() => {\n    setPaneStatus(paneStatus !== 'warning' ? 'warning' : 'hidden');\n  }, [paneStatus]);\n\n  const onPaneClose = useCallback(() => {\n    if (paneStatus === 'error' && errorsTabRef.current) {\n      errorsTabRef.current.focus();\n    }\n    if (paneStatus === 'warning' && warningsTabRef.current) {\n      warningsTabRef.current.focus();\n    }\n    setPaneStatus('hidden');\n  }, [paneStatus]);\n\n  const onAnnotationClick = ({ row = 0, column = 0 }: Ace.Annotation) => {\n    if (!editor) {\n      return;\n    }\n    editor.focus();\n    editor.gotoLine(row + 1, column, false);\n    setHighlightedAnnotation(undefined);\n  };\n\n  const onAnnotationClear = useCallback(() => {\n    setHighlightedAnnotation(undefined);\n  }, []);\n\n  /**\n   * Ignore focus lock if focused element is the pane tab button or within editor tree.\n   * This check is required:\n   * - When closing the pane with `ESC` key: The panel closes asynchronously and its focus lock\n   *   still exists when trying to focus the tab button in higher-order component.\n   * - When clicking or hittin `Enter` on an annotation: The panel remains open but focus lock\n   *   deactivates asynchronously.\n   */\n  const shouldHandleFocus = useCallback(\n    (activeElement: HTMLElement): boolean => {\n      return (\n        activeElement !== errorsTabRef.current &&\n        activeElement !== warningsTabRef.current &&\n        !editor?.container.contains(activeElement)\n      );\n    },\n    [editor]\n  );\n\n  const [isPreferencesModalVisible, setPreferencesModalVisible] = useState(false);\n  const onPreferencesOpen = () => setPreferencesModalVisible(true);\n  const onPreferencesConfirm = (p: CodeEditorProps.Preferences) => {\n    fireNonCancelableEvent(props.onPreferencesChange, p);\n    setPreferencesModalVisible(false);\n  };\n  const onPreferencesDismiss = () => setPreferencesModalVisible(false);\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(styles['code-editor'], baseProps.className, { [styles['code-editor-refresh']]: isRefresh })}\n      ref={mergedRef}\n    >\n      {props.loading && <LoadingScreen>{i18nStrings.loadingState}</LoadingScreen>}\n\n      {!ace && !props.loading && (\n        <ErrorScreen recoveryText={i18nStrings.errorStateRecovery} onRecoveryClick={props.onRecoveryClick}>\n          {i18nStrings.errorState}\n        </ErrorScreen>\n      )}\n\n      {ace && !props.loading && (\n        <>\n          <ResizableBox\n            className={styles['resizable-box']}\n            width={Infinity}\n            height={Math.max(editorHeight, 20)}\n            minConstraints={[Infinity, 20]}\n            axis=\"y\"\n            handle={handler}\n            onResize={(e, data) => {\n              setEditorHeight(data.size.height);\n              onResize();\n              fireNonCancelableEvent(onEditorContentResize, {\n                height: data.size.height,\n              });\n            }}\n          >\n            <div\n              ref={editorRef}\n              className={clsx(styles.editor, styles.ace)}\n              onKeyDown={onEditorKeydown}\n              tabIndex={0}\n              role=\"group\"\n              aria-label={i18nStrings.editorGroupAriaLabel}\n            />\n          </ResizableBox>\n          <div role=\"group\" aria-label={i18nStrings.statusBarGroupAriaLabel}>\n            <StatusBar\n              languageLabel={languageLabel}\n              cursorPosition={i18nStrings.cursorPosition(cursorPosition.row + 1, cursorPosition.column + 1)}\n              errorCount={errorCount}\n              warningCount={warningCount}\n              paneStatus={paneStatus}\n              onErrorPaneToggle={onErrorPaneToggle}\n              onWarningPaneToggle={onWarningPaneToggle}\n              onTabFocus={onTabFocus}\n              onTabBlur={onTabBlur}\n              errorsTabRef={errorsTabRef}\n              warningsTabRef={warningsTabRef}\n              i18nStrings={i18nStrings}\n              isTabFocused={isTabFocused}\n              paneId={paneId}\n              onPreferencesOpen={onPreferencesOpen}\n              isRefresh={isRefresh}\n            />\n            <Pane\n              id={paneId}\n              visible={paneStatus !== 'hidden'}\n              annotations={currentAnnotations}\n              highlighted={highlightedAnnotation}\n              onAnnotationClick={onAnnotationClick}\n              onAnnotationClear={onAnnotationClear}\n              onClose={onPaneClose}\n              onAllowlist={shouldHandleFocus}\n              cursorPositionLabel={i18nStrings.cursorPosition}\n              closeButtonAriaLabel={i18nStrings.paneCloseButtonAriaLabel}\n            />\n          </div>\n          {isPreferencesModalVisible && (\n            <PreferencesModal\n              onConfirm={onPreferencesConfirm}\n              onDismiss={onPreferencesDismiss}\n              preferences={props.preferences}\n              defaultTheme={defaultTheme}\n              i18nStrings={{\n                header: i18nStrings.preferencesModalHeader,\n                cancel: i18nStrings.preferencesModalCancel,\n                confirm: i18nStrings.preferencesModalConfirm,\n                wrapLines: i18nStrings.preferencesModalWrapLines,\n                theme: i18nStrings.preferencesModalTheme,\n                lightThemes: i18nStrings.preferencesModalLightThemes,\n                darkThemes: i18nStrings.preferencesModalDarkThemes,\n              }}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\napplyDisplayName(CodeEditor, 'CodeEditor');\n"]},"metadata":{},"sourceType":"module"}