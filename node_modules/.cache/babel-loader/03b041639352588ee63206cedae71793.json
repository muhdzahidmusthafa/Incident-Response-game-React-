{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useState } from 'react';\nimport { useObservedElement } from './use-observed-element';\nexport default function useContentHeight(headerSelector, footerSelector, disableBodyScroll) {\n  var _a;\n\n  var headerHeight = useObservedElement(headerSelector);\n  var footerHeight = useObservedElement(footerSelector);\n\n  var _b = useState(0),\n      headerFooterHeight = _b[0],\n      setHeaderFooterHeight = _b[1]; // Delay applying changes in header/footer height, as applying them immediately can cause\n  // ResizeOberver warnings due to the algorithm thinking that the change might have side-effects\n  // further up the tree, therefore blocking notifications to prevent loops\n\n\n  useEffect(function () {\n    var id = requestAnimationFrame(function () {\n      return setHeaderFooterHeight(headerHeight + footerHeight);\n    });\n    return function () {\n      return cancelAnimationFrame(id);\n    };\n  }, [headerHeight, footerHeight]);\n  var heightStyleValue = \"calc(100vh - \".concat(headerFooterHeight, \"px)\");\n  return {\n    headerHeight: headerHeight,\n    footerHeight: footerHeight,\n    contentHeightStyle: (_a = {}, _a[disableBodyScroll ? 'height' : 'minHeight'] = heightStyleValue, _a),\n    panelHeightStyle: {\n      height: heightStyleValue\n    }\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AAEA,eAAc,SAAUC,gBAAV,CAA2BC,cAA3B,EAAmDC,cAAnD,EAA2EC,iBAA3E,EAAsG;;;EAClH,IAAMC,YAAY,GAAGL,kBAAkB,CAACE,cAAD,CAAvC;EACA,IAAMI,YAAY,GAAGN,kBAAkB,CAACG,cAAD,CAAvC;;EACM,SAA8CJ,QAAQ,CAAC,CAAD,CAAtD;EAAA,IAACQ,kBAAkB,QAAnB;EAAA,IAAqBC,qBAAqB,QAA1C,CAH4G,CAKlH;EACA;EACA;;;EACAV,SAAS,CAAC;IACR,IAAMW,EAAE,GAAGC,qBAAqB,CAAC;MAAM,4BAAqB,CAACL,YAAY,GAAGC,YAAhB,CAArB;IAAkD,CAAzD,CAAhC;IACA,OAAO;MAAM,2BAAoB,CAACG,EAAD,CAApB;IAAwB,CAArC;EACD,CAHQ,EAGN,CAACJ,YAAD,EAAeC,YAAf,CAHM,CAAT;EAKA,IAAMK,gBAAgB,GAAG,uBAAgBJ,kBAAhB,EAAkC,KAAlC,CAAzB;EAEA,OAAO;IACLF,YAAY,cADP;IAELC,YAAY,cAFP;IAGLM,kBAAkB,YAChBC,GAACT,iBAAiB,GAAG,QAAH,GAAc,WAAhC,IAA8CO,gBAD9B,KAHb;IAMLG,gBAAgB,EAAE;MAChBC,MAAM,EAAEJ;IADQ;EANb,CAAP;AAUD","names":["useEffect","useState","useObservedElement","useContentHeight","headerSelector","footerSelector","disableBodyScroll","headerHeight","footerHeight","headerFooterHeight","setHeaderFooterHeight","id","requestAnimationFrame","heightStyleValue","contentHeightStyle","_a","panelHeightStyle","height"],"sourceRoot":"","sources":["../../../../src/app-layout/utils/use-content-height.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useState } from 'react';\nimport { useObservedElement } from './use-observed-element';\n\nexport default function useContentHeight(headerSelector: string, footerSelector: string, disableBodyScroll?: boolean) {\n  const headerHeight = useObservedElement(headerSelector);\n  const footerHeight = useObservedElement(footerSelector);\n  const [headerFooterHeight, setHeaderFooterHeight] = useState(0);\n\n  // Delay applying changes in header/footer height, as applying them immediately can cause\n  // ResizeOberver warnings due to the algorithm thinking that the change might have side-effects\n  // further up the tree, therefore blocking notifications to prevent loops\n  useEffect(() => {\n    const id = requestAnimationFrame(() => setHeaderFooterHeight(headerHeight + footerHeight));\n    return () => cancelAnimationFrame(id);\n  }, [headerHeight, footerHeight]);\n\n  const heightStyleValue = `calc(100vh - ${headerFooterHeight}px)`;\n\n  return {\n    headerHeight,\n    footerHeight,\n    contentHeightStyle: {\n      [disableBodyScroll ? 'height' : 'minHeight']: heightStyleValue,\n    },\n    panelHeightStyle: {\n      height: heightStyleValue,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}