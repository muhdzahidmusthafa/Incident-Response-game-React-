{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useState } from 'react';\nimport { useResizeObserver } from '../../internal/hooks/container-queries';\nexport default function useAppLayoutOffsets(element) {\n  var _a = useState({\n    left: 0,\n    right: 0\n  }),\n      offsets = _a[0],\n      setOffsets = _a[1];\n\n  var updatePosition = useCallback(function () {\n    if (!element) {\n      return;\n    }\n\n    var _a = element.getBoundingClientRect(),\n        left = _a.left,\n        right = _a.right;\n\n    var bodyWidth = document.body.clientWidth;\n    setOffsets({\n      left: left,\n      right: bodyWidth - right\n    });\n  }, [element]);\n  useEffect(function () {\n    window.addEventListener('resize', updatePosition);\n    return function () {\n      return window.removeEventListener('resize', updatePosition);\n    };\n  }, [updatePosition]);\n  var getElement = useCallback(function () {\n    return element;\n  }, [element]);\n  useResizeObserver(getElement, updatePosition);\n  return offsets;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AAEA,eAAc,SAAUC,mBAAV,CAA8BC,OAA9B,EAA4D;EAClE,SAAwBH,QAAQ,CAAC;IAAEI,IAAI,EAAE,CAAR;IAAWC,KAAK,EAAE;EAAlB,CAAD,CAAhC;EAAA,IAACC,OAAO,QAAR;EAAA,IAAUC,UAAU,QAApB;;EAEN,IAAMC,cAAc,GAAGV,WAAW,CAAC;IACjC,IAAI,CAACK,OAAL,EAAc;MACZ;IACD;;IACK,SAAkBA,OAAO,CAACM,qBAAR,EAAlB;IAAA,IAAEL,IAAI,UAAN;IAAA,IAAQC,KAAK,WAAb;;IACN,IAAMK,SAAS,GAAGC,QAAQ,CAACC,IAAT,CAAcC,WAAhC;IAEAN,UAAU,CAAC;MAAEH,IAAI,MAAN;MAAQC,KAAK,EAAEK,SAAS,GAAGL;IAA3B,CAAD,CAAV;EACD,CARiC,EAQ/B,CAACF,OAAD,CAR+B,CAAlC;EAUAJ,SAAS,CAAC;IACRe,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCP,cAAlC;IACA,OAAO;MAAM,aAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCR,cAArC;IAAoD,CAAjE;EACD,CAHQ,EAGN,CAACA,cAAD,CAHM,CAAT;EAKA,IAAMS,UAAU,GAAGnB,WAAW,CAAC;IAAM;EAAO,CAAd,EAAgB,CAACK,OAAD,CAAhB,CAA9B;EACAF,iBAAiB,CAACgB,UAAD,EAAaT,cAAb,CAAjB;EAEA,OAAOF,OAAP;AACD","names":["useCallback","useEffect","useState","useResizeObserver","useAppLayoutOffsets","element","left","right","offsets","setOffsets","updatePosition","getBoundingClientRect","bodyWidth","document","body","clientWidth","window","addEventListener","removeEventListener","getElement"],"sourceRoot":"","sources":["../../../../src/app-layout/utils/use-content-width.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useState } from 'react';\nimport { useResizeObserver } from '../../internal/hooks/container-queries';\n\nexport default function useAppLayoutOffsets(element: HTMLDivElement | null): { left: number; right: number } {\n  const [offsets, setOffsets] = useState({ left: 0, right: 0 });\n\n  const updatePosition = useCallback(() => {\n    if (!element) {\n      return;\n    }\n    const { left, right } = element.getBoundingClientRect();\n    const bodyWidth = document.body.clientWidth;\n\n    setOffsets({ left, right: bodyWidth - right });\n  }, [element]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updatePosition);\n    return () => window.removeEventListener('resize', updatePosition);\n  }, [updatePosition]);\n\n  const getElement = useCallback(() => element, [element]);\n  useResizeObserver(getElement, updatePosition);\n\n  return offsets;\n}\n"]},"metadata":{},"sourceType":"module"}