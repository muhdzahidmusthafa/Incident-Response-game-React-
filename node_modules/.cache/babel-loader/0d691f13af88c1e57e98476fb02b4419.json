{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useEffect, useImperativeHandle, useRef } from 'react';\nimport { useVirtual } from 'react-virtual';\nimport OptionsList from '../internal/components/options-list';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport AutosuggestOption from './autosuggest-option';\nimport { getOptionProps } from './plain-list';\nimport styles from './styles.css.js';\n\nvar VirtualList = function (_a) {\n  var handleLoadMore = _a.handleLoadMore,\n      filteredItems = _a.filteredItems,\n      usingMouse = _a.usingMouse,\n      menuProps = _a.menuProps,\n      highlightedOption = _a.highlightedOption,\n      highlightedIndex = _a.highlightedIndex,\n      enteredTextLabel = _a.enteredTextLabel,\n      highlightedA11yProps = _a.highlightedA11yProps,\n      hasDropdownStatus = _a.hasDropdownStatus,\n      highlightText = _a.highlightText,\n      listBottom = _a.listBottom,\n      screenReaderContent = _a.screenReaderContent;\n  var scrollRef = useRef(null); // update component, when it gets wider or narrower to reposition items\n\n  var _b = useContainerQuery(function (rect) {\n    return rect.width;\n  }, []),\n      width = _b[0],\n      strutRef = _b[1];\n\n  useImperativeHandle(strutRef, function () {\n    return scrollRef.current;\n  });\n  var rowVirtualizer = useVirtual({\n    size: filteredItems.length,\n    parentRef: scrollRef,\n    // estimateSize is a dependency of measurements memo. We update it to force full recalculation\n    // when the height of any option could have changed:\n    // 1: because the component got resized (width property got updated)\n    // 2: becasue the option changed its content (highlightText property controls the highlight and the visibility of hidden tags)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    estimateSize: useCallback(function () {\n      return 31;\n    }, [width, highlightText]),\n    overscan: 5\n  });\n  useEffect(function () {\n    if (!usingMouse.current) {\n      rowVirtualizer.scrollToIndex(highlightedIndex);\n    }\n  }, [usingMouse, rowVirtualizer, highlightedIndex]);\n  return React.createElement(OptionsList, __assign({}, menuProps, {\n    onLoadMore: handleLoadMore,\n    ref: scrollRef,\n    open: true,\n    // to prevent closing the list when clicking the scrollbar on IE11\n    nativeAttributes: {\n      unselectable: 'on'\n    }\n  }), React.createElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    key: \"total-size\",\n    className: styles['layout-strut'],\n    style: {\n      height: rowVirtualizer.totalSize + (filteredItems.length === 1 ? 1 : 0)\n    }\n  }), rowVirtualizer.virtualItems.map(function (virtualRow) {\n    var index = virtualRow.index,\n        start = virtualRow.start,\n        measureRef = virtualRow.measureRef;\n    var item = filteredItems[index];\n    var optionProps = getOptionProps(index, item, filteredItems, highlightedA11yProps, highlightedOption, hasDropdownStatus);\n    return React.createElement(AutosuggestOption, __assign({\n      key: index,\n      ref: measureRef,\n      highlightText: highlightText,\n      option: item,\n      highlighted: item === highlightedOption,\n      \"data-mouse-target\": index,\n      enteredTextLabel: enteredTextLabel,\n      virtualPosition: start + (index === 0 ? 1 : 0),\n      screenReaderContent: screenReaderContent,\n      ariaSetsize: filteredItems.length,\n      ariaPosinset: index + 1\n    }, optionProps));\n  }), listBottom ? React.createElement(\"li\", {\n    role: \"option\",\n    className: styles['list-bottom']\n  }, listBottom) : null);\n};\n\nexport default VirtualList;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useImperativeHandle","useRef","useVirtual","OptionsList","useContainerQuery","AutosuggestOption","getOptionProps","styles","VirtualList","_a","handleLoadMore","filteredItems","usingMouse","menuProps","highlightedOption","highlightedIndex","enteredTextLabel","highlightedA11yProps","hasDropdownStatus","highlightText","listBottom","screenReaderContent","scrollRef","width","strutRef","current","rowVirtualizer","size","length","parentRef","estimateSize","overscan","scrollToIndex","__assign","onLoadMore","ref","open","nativeAttributes","unselectable","key","className","style","height","totalSize","virtualItems","map","virtualRow","start","measureRef","item","index","optionProps","option","highlighted","virtualPosition","ariaSetsize","ariaPosinset","role"],"sourceRoot":"","sources":["../../../src/autosuggest/virtual-list.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useImperativeHandle, useRef } from 'react';\nimport { useVirtual } from 'react-virtual';\n\nimport OptionsList from '../internal/components/options-list';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\n\nimport AutosuggestOption from './autosuggest-option';\nimport { getOptionProps, ListProps } from './plain-list';\nimport styles from './styles.css.js';\n\nconst VirtualList = ({\n  handleLoadMore,\n  filteredItems,\n  usingMouse,\n  menuProps,\n  highlightedOption,\n  highlightedIndex,\n  enteredTextLabel,\n  highlightedA11yProps,\n  hasDropdownStatus,\n  highlightText,\n  listBottom,\n  screenReaderContent,\n}: ListProps) => {\n  const scrollRef = useRef<HTMLUListElement>(null);\n  // update component, when it gets wider or narrower to reposition items\n  const [width, strutRef] = useContainerQuery(rect => rect.width, []);\n  useImperativeHandle(strutRef, () => scrollRef.current);\n  const rowVirtualizer = useVirtual({\n    size: filteredItems.length,\n    parentRef: scrollRef,\n    // estimateSize is a dependency of measurements memo. We update it to force full recalculation\n    // when the height of any option could have changed:\n    // 1: because the component got resized (width property got updated)\n    // 2: becasue the option changed its content (highlightText property controls the highlight and the visibility of hidden tags)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    estimateSize: useCallback(() => 31, [width, highlightText]),\n    overscan: 5,\n  });\n\n  useEffect(() => {\n    if (!usingMouse.current) {\n      rowVirtualizer.scrollToIndex(highlightedIndex);\n    }\n  }, [usingMouse, rowVirtualizer, highlightedIndex]);\n\n  return (\n    <OptionsList\n      {...menuProps}\n      onLoadMore={handleLoadMore}\n      ref={scrollRef}\n      open={true}\n      // to prevent closing the list when clicking the scrollbar on IE11\n      nativeAttributes={{ unselectable: 'on' }}\n    >\n      <div\n        aria-hidden=\"true\"\n        key=\"total-size\"\n        className={styles['layout-strut']}\n        style={{ height: rowVirtualizer.totalSize + (filteredItems.length === 1 ? 1 : 0) }}\n      />\n      {rowVirtualizer.virtualItems.map(virtualRow => {\n        const { index, start, measureRef } = virtualRow;\n        const item = filteredItems[index];\n        const optionProps = getOptionProps(\n          index,\n          item,\n          filteredItems,\n          highlightedA11yProps,\n          highlightedOption,\n          hasDropdownStatus\n        );\n\n        return (\n          <AutosuggestOption\n            key={index}\n            ref={measureRef}\n            highlightText={highlightText}\n            option={item}\n            highlighted={item === highlightedOption}\n            data-mouse-target={index}\n            enteredTextLabel={enteredTextLabel}\n            virtualPosition={start + (index === 0 ? 1 : 0)}\n            screenReaderContent={screenReaderContent}\n            ariaSetsize={filteredItems.length}\n            ariaPosinset={index + 1}\n            {...optionProps}\n          />\n        );\n      })}\n      {listBottom ? (\n        <li role=\"option\" className={styles['list-bottom']}>\n          {listBottom}\n        </li>\n      ) : null}\n    </OptionsList>\n  );\n};\n\nexport default VirtualList;\n"]},"metadata":{},"sourceType":"module"}