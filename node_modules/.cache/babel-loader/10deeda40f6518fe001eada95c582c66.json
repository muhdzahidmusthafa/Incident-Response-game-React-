{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport InternalInput from '../input/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nvar InternalTextFilter = React.forwardRef(function (_a, ref) {\n  var filteringText = _a.filteringText,\n      filteringAriaLabel = _a.filteringAriaLabel,\n      filteringPlaceholder = _a.filteringPlaceholder,\n      disabled = _a.disabled,\n      countText = _a.countText,\n      onChange = _a.onChange,\n      onDelayedChange = _a.onDelayedChange,\n      __internalRootRef = _a.__internalRootRef,\n      rest = __rest(_a, [\"filteringText\", \"filteringAriaLabel\", \"filteringPlaceholder\", \"disabled\", \"countText\", \"onChange\", \"onDelayedChange\", \"__internalRootRef\"]);\n\n  var inputRef = useRef(null);\n  var baseProps = getBaseProps(rest);\n  useForwardFocus(ref, inputRef);\n  var showResults = filteringText && countText && !disabled;\n  return React.createElement(\"span\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), React.createElement(InternalInput, {\n    ref: inputRef,\n    className: styles.input,\n    type: \"search\",\n    ariaLabel: filteringAriaLabel,\n    placeholder: filteringPlaceholder,\n    value: filteringText,\n    disabled: disabled,\n    autoComplete: false,\n    onChange: function (event) {\n      return fireNonCancelableEvent(onChange, {\n        filteringText: event.detail.value\n      });\n    },\n    __onDelayedInput: function (event) {\n      return fireNonCancelableEvent(onDelayedChange, {\n        filteringText: event.detail.value\n      });\n    }\n  }), React.createElement(\"span\", {\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\",\n    className: clsx(styles.results, showResults && styles['results-visible'])\n  }, showResults ? countText : ''));\n});\nexport default InternalTextFilter;","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAMA,IAAMC,kBAAkB,GAAGP,KAAK,CAACQ,UAAN,CACzB,UACEC,EADF,EAYEC,GAZF,EAYqC;EAVjC,iBAAa,mBAAb;EAAA,IACAC,kBAAkB,wBADlB;EAAA,IAEAC,oBAAoB,0BAFpB;EAAA,IAGAC,QAAQ,cAHR;EAAA,IAIAC,SAAS,eAJT;EAAA,IAKAC,QAAQ,cALR;EAAA,IAMAC,eAAe,qBANf;EAAA,IAOAC,iBAAiB,uBAPjB;EAAA,IAQGC,IAAI,cATT,4IASS,CARP;;EAYF,IAAMC,QAAQ,GAAGlB,MAAM,CAAmB,IAAnB,CAAvB;EACA,IAAMmB,SAAS,GAAGjB,YAAY,CAACe,IAAD,CAA9B;EACAd,eAAe,CAACM,GAAD,EAAMS,QAAN,CAAf;EACA,IAAME,WAAW,GAAGC,aAAa,IAAIR,SAAjB,IAA8B,CAACD,QAAnD;EAEA,OACEb,yCAAUoB,SAAV,EAAmB;IAAEG,SAAS,EAAExB,IAAI,CAACqB,SAAS,CAACG,SAAX,EAAsBjB,MAAM,CAACkB,IAA7B,CAAjB;IAAqDd,GAAG,EAAEO;EAA1D,CAAnB,GACEjB,oBAACE,aAAD,EAAc;IACZQ,GAAG,EAAES,QADO;IAEZI,SAAS,EAAEjB,MAAM,CAACmB,KAFN;IAGZC,IAAI,EAAC,QAHO;IAIZC,SAAS,EAAEhB,kBAJC;IAKZiB,WAAW,EAAEhB,oBALD;IAMZiB,KAAK,EAAEP,aANK;IAOZT,QAAQ,EAAEA,QAPE;IAQZiB,YAAY,EAAE,KARF;IASZf,QAAQ,EAAE,iBAAK;MAAI,6BAAsB,CAACA,QAAD,EAAW;QAAEO,aAAa,EAAES,KAAK,CAACC,MAAN,CAAaH;MAA9B,CAAX,CAAtB;IAAuE,CAT9E;IAUZI,gBAAgB,EAAE,iBAAK;MAAI,6BAAsB,CAACjB,eAAD,EAAkB;QAAEM,aAAa,EAAES,KAAK,CAACC,MAAN,CAAaH;MAA9B,CAAlB,CAAtB;IAA8E;EAV7F,CAAd,CADF,EAaE7B;IAAA,aACY,QADZ;IACoB,eACN,MAFd;IAGEuB,SAAS,EAAExB,IAAI,CAACO,MAAM,CAAC4B,OAAR,EAAiBb,WAAW,IAAIf,MAAM,CAAC,iBAAD,CAAtC;EAHjB,GAKGe,WAAW,GAAGP,SAAH,GAAe,EAL7B,CAbF,CADF;AAuBD,CA3CwB,CAA3B;AA8CA,eAAeP,kBAAf","names":["clsx","React","useRef","InternalInput","getBaseProps","useForwardFocus","fireNonCancelableEvent","styles","InternalTextFilter","forwardRef","_a","ref","filteringAriaLabel","filteringPlaceholder","disabled","countText","onChange","onDelayedChange","__internalRootRef","rest","inputRef","baseProps","showResults","filteringText","className","root","input","type","ariaLabel","placeholder","value","autoComplete","event","detail","__onDelayedInput","results"],"sourceRoot":"","sources":["../../../src/text-filter/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport InternalInput from '../input/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { TextFilterProps } from './interfaces';\n\ntype InternalTextFilterProps = TextFilterProps & InternalBaseComponentProps;\n\nconst InternalTextFilter = React.forwardRef(\n  (\n    {\n      filteringText,\n      filteringAriaLabel,\n      filteringPlaceholder,\n      disabled,\n      countText,\n      onChange,\n      onDelayedChange,\n      __internalRootRef,\n      ...rest\n    }: InternalTextFilterProps,\n    ref: React.Ref<TextFilterProps.Ref>\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const baseProps = getBaseProps(rest);\n    useForwardFocus(ref, inputRef);\n    const showResults = filteringText && countText && !disabled;\n\n    return (\n      <span {...baseProps} className={clsx(baseProps.className, styles.root)} ref={__internalRootRef}>\n        <InternalInput\n          ref={inputRef}\n          className={styles.input}\n          type=\"search\"\n          ariaLabel={filteringAriaLabel}\n          placeholder={filteringPlaceholder}\n          value={filteringText}\n          disabled={disabled}\n          autoComplete={false}\n          onChange={event => fireNonCancelableEvent(onChange, { filteringText: event.detail.value })}\n          __onDelayedInput={event => fireNonCancelableEvent(onDelayedChange, { filteringText: event.detail.value })}\n        />\n        <span\n          aria-live=\"polite\"\n          aria-atomic=\"true\"\n          className={clsx(styles.results, showResults && styles['results-visible'])}\n        >\n          {showResults ? countText : ''}\n        </span>\n      </span>\n    );\n  }\n);\n\nexport default InternalTextFilter;\n"]},"metadata":{},"sourceType":"module"}