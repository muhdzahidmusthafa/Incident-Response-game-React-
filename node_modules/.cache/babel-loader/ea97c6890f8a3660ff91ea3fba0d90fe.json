{"ast":null,"code":"// https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html\nvar SCHEME = 's3://';\nvar BUCKET_FIRST_CHAR = /^[a-z0-9]{1}/;\nvar CAPITAL_LETTER = /[A-Z]/;\nvar DNS_NAME = /^(([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])$/;\n\nfunction checkBucketNameLength(bucketName) {\n  return 3 <= bucketName.length && bucketName.length <= 63;\n}\n\nexport function extractBucketName(uri) {\n  var _a = uri.replace(SCHEME, '').split('/'),\n      bucketName = _a[0],\n      rest = _a.slice(1);\n\n  return [bucketName, rest.join('/')];\n}\nexport function validate(uri) {\n  if (uri === '') {\n    return undefined;\n  }\n\n  if (uri.slice(0, SCHEME.length) !== SCHEME) {\n    return 'validationPathMustBegin';\n  }\n\n  var bucketName = extractBucketName(uri)[0];\n\n  if (!BUCKET_FIRST_CHAR.test(bucketName)) {\n    return 'validationBucketLowerCase';\n  }\n\n  if (CAPITAL_LETTER.test(bucketName)) {\n    return 'validationBucketMustNotContain';\n  }\n\n  if (!checkBucketNameLength(bucketName)) {\n    return 'validationBucketLength';\n  }\n\n  if (!DNS_NAME.test(bucketName)) {\n    return 'validationBucketMustComplyDns';\n  }\n\n  return undefined;\n}\nexport function getErrorText(i18nStrings, errorCode) {\n  return errorCode ? i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings[errorCode] : undefined;\n}","map":{"version":3,"mappings":"AAIA;AACA,IAAMA,MAAM,GAAG,OAAf;AACA,IAAMC,iBAAiB,GAAG,cAA1B;AACA,IAAMC,cAAc,GAAG,OAAvB;AACA,IAAMC,QAAQ,GAAG,mFAAjB;;AAEA,SAASC,qBAAT,CAA+BC,UAA/B,EAAiD;EAC/C,OAAO,KAAKA,UAAU,CAACC,MAAhB,IAA0BD,UAAU,CAACC,MAAX,IAAqB,EAAtD;AACD;;AAED,OAAM,SAAUC,iBAAV,CAA4BC,GAA5B,EAAuC;EACrC,SAAwBA,GAAG,CAACC,OAAJ,CAAYT,MAAZ,EAAoB,EAApB,EAAwBU,KAAxB,CAA8B,GAA9B,CAAxB;EAAA,IAACL,UAAU,QAAX;EAAA,IAAgBM,IAAI,cAApB;;EACN,OAAO,CAACN,UAAD,EAAaM,IAAI,CAACC,IAAL,CAAU,GAAV,CAAb,CAAP;AACD;AAED,OAAM,SAAUC,QAAV,CAAmBL,GAAnB,EAA8B;EAClC,IAAIA,GAAG,KAAK,EAAZ,EAAgB;IACd,OAAOM,SAAP;EACD;;EACD,IAAIN,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAaf,MAAM,CAACM,MAApB,MAAgCN,MAApC,EAA4C;IAC1C,OAAO,yBAAP;EACD;;EACM,cAAU,GAAIO,iBAAiB,CAACC,GAAD,CAAjB,CAAsB,CAAtB,CAAd;;EACP,IAAI,CAACP,iBAAiB,CAACe,IAAlB,CAAuBX,UAAvB,CAAL,EAAyC;IACvC,OAAO,2BAAP;EACD;;EACD,IAAIH,cAAc,CAACc,IAAf,CAAoBX,UAApB,CAAJ,EAAqC;IACnC,OAAO,gCAAP;EACD;;EACD,IAAI,CAACD,qBAAqB,CAACC,UAAD,CAA1B,EAAwC;IACtC,OAAO,wBAAP;EACD;;EACD,IAAI,CAACF,QAAQ,CAACa,IAAT,CAAcX,UAAd,CAAL,EAAgC;IAC9B,OAAO,+BAAP;EACD;;EACD,OAAOS,SAAP;AACD;AAED,OAAM,SAAUG,YAAV,CACJC,WADI,EAEJC,SAFI,EAEkC;EAEtC,OAAOA,SAAS,GAAGD,WAAW,SAAX,eAAW,WAAX,GAAW,MAAX,cAAW,CAAGC,SAAH,CAAd,GAA8BL,SAA9C;AACD","names":["SCHEME","BUCKET_FIRST_CHAR","CAPITAL_LETTER","DNS_NAME","checkBucketNameLength","bucketName","length","extractBucketName","uri","replace","split","rest","join","validate","undefined","slice","test","getErrorText","i18nStrings","errorCode"],"sourceRoot":"","sources":["../../../../src/s3-resource-selector/s3-in-context/validation.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { S3ResourceSelectorProps } from '../interfaces';\n\n// https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html\nconst SCHEME = 's3://';\nconst BUCKET_FIRST_CHAR = /^[a-z0-9]{1}/;\nconst CAPITAL_LETTER = /[A-Z]/;\nconst DNS_NAME = /^(([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])$/;\n\nfunction checkBucketNameLength(bucketName: string) {\n  return 3 <= bucketName.length && bucketName.length <= 63;\n}\n\nexport function extractBucketName(uri: string) {\n  const [bucketName, ...rest] = uri.replace(SCHEME, '').split('/');\n  return [bucketName, rest.join('/')];\n}\n\nexport function validate(uri: string) {\n  if (uri === '') {\n    return undefined;\n  }\n  if (uri.slice(0, SCHEME.length) !== SCHEME) {\n    return 'validationPathMustBegin' as const;\n  }\n  const [bucketName] = extractBucketName(uri);\n  if (!BUCKET_FIRST_CHAR.test(bucketName)) {\n    return 'validationBucketLowerCase' as const;\n  }\n  if (CAPITAL_LETTER.test(bucketName)) {\n    return 'validationBucketMustNotContain' as const;\n  }\n  if (!checkBucketNameLength(bucketName)) {\n    return 'validationBucketLength' as const;\n  }\n  if (!DNS_NAME.test(bucketName)) {\n    return 'validationBucketMustComplyDns' as const;\n  }\n  return undefined;\n}\n\nexport function getErrorText(\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined,\n  errorCode: ReturnType<typeof validate>\n) {\n  return errorCode ? i18nStrings?.[errorCode] : undefined;\n}\n"]},"metadata":{},"sourceType":"module"}