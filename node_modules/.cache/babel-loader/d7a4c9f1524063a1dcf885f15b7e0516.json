{"ast":null,"code":"import React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport ItemsList from '../items-list';\n\nvar CategoryElement = function (_a) {\n  var _b;\n\n  var item = _a.item,\n      onItemActivate = _a.onItemActivate,\n      onGroupToggle = _a.onGroupToggle,\n      targetItem = _a.targetItem,\n      isHighlighted = _a.isHighlighted,\n      isExpanded = _a.isExpanded,\n      highlightItem = _a.highlightItem,\n      disabled = _a.disabled,\n      variant = _a.variant; // Hide the category title element from screen readers because it will be\n  // provided as an ARIA label.\n\n  return React.createElement(\"li\", {\n    className: clsx(styles.category, styles[\"variant-\".concat(variant)], disabled && styles.disabled),\n    role: \"presentation\",\n    \"aria-disabled\": disabled ? 'true' : undefined\n  }, item.text && React.createElement(\"p\", {\n    className: clsx(styles.header, (_b = {}, _b[styles.disabled] = disabled, _b)),\n    \"aria-hidden\": \"true\"\n  }, item.text), React.createElement(\"ul\", {\n    className: clsx(styles['items-list-container']),\n    role: \"group\",\n    \"aria-label\": item.text\n  }, item.items && React.createElement(ItemsList, {\n    items: item.items,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isExpanded: isExpanded,\n    highlightItem: highlightItem,\n    categoryDisabled: disabled,\n    hasCategoryHeader: !!item.text,\n    variant: variant\n  })));\n};\n\nexport default CategoryElement;","map":{"version":3,"mappings":"AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,eAAtB;;AAEA,IAAMC,eAAe,GAAG,UAACC,EAAD,EAUR;;;MATdC,IAAI;MACJC,cAAc;MACdC,aAAa;MACbC,UAAU;MACVC,aAAa;MACbC,UAAU;MACVC,aAAa;MACbC,QAAQ;MACRC,OAAO,cACO,CACd;EACA;;EACA,OACEd;IACEe,SAAS,EAAEd,IAAI,CAACC,MAAM,CAACc,QAAR,EAAkBd,MAAM,CAAC,kBAAWY,OAAX,CAAD,CAAxB,EAAgDD,QAAQ,IAAIX,MAAM,CAACW,QAAnE,CADjB;IAEEI,IAAI,EAAC,cAFP;IAEqB,iBACJJ,QAAQ,GAAG,MAAH,GAAYK;EAHrC,GAKGZ,IAAI,CAACa,IAAL,IACCnB;IAAGe,SAAS,EAAEd,IAAI,CAACC,MAAM,CAACkB,MAAR,GAAcC,SAAIA,GAACnB,MAAM,CAACW,QAAR,IAAmBA,QAAvB,EAA+BQ,EAA7C,EAAlB;IAAkE,eAAc;EAAhF,GACGf,IAAI,CAACa,IADR,CANJ,EAUEnB;IAAIe,SAAS,EAAEd,IAAI,CAACC,MAAM,CAAC,sBAAD,CAAP,CAAnB;IAAqDe,IAAI,EAAC,OAA1D;IAAiE,cAAaX,IAAI,CAACa;EAAnF,GACGb,IAAI,CAACgB,KAAL,IACCtB,oBAACG,SAAD,EAAU;IACRmB,KAAK,EAAEhB,IAAI,CAACgB,KADJ;IAERf,cAAc,EAAEA,cAFR;IAGRC,aAAa,EAAEA,aAHP;IAIRC,UAAU,EAAEA,UAJJ;IAKRC,aAAa,EAAEA,aALP;IAMRC,UAAU,EAAEA,UANJ;IAORC,aAAa,EAAEA,aAPP;IAQRW,gBAAgB,EAAEV,QARV;IASRW,iBAAiB,EAAE,CAAC,CAAClB,IAAI,CAACa,IATlB;IAURL,OAAO,EAAEA;EAVD,CAAV,CAFJ,CAVF,CADF;AA6BD,CA1CD;;AA4CA,eAAeV,eAAf","names":["React","clsx","styles","ItemsList","CategoryElement","_a","item","onItemActivate","onGroupToggle","targetItem","isHighlighted","isExpanded","highlightItem","disabled","variant","className","category","role","undefined","text","header","_b","items","categoryDisabled","hasCategoryHeader"],"sourceRoot":"","sources":["../../../../src/button-dropdown/category-elements/category-element.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CategoryProps } from '../interfaces';\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport ItemsList from '../items-list';\n\nconst CategoryElement = ({\n  item,\n  onItemActivate,\n  onGroupToggle,\n  targetItem,\n  isHighlighted,\n  isExpanded,\n  highlightItem,\n  disabled,\n  variant,\n}: CategoryProps) => {\n  // Hide the category title element from screen readers because it will be\n  // provided as an ARIA label.\n  return (\n    <li\n      className={clsx(styles.category, styles[`variant-${variant}`], disabled && styles.disabled)}\n      role=\"presentation\"\n      aria-disabled={disabled ? 'true' : undefined}\n    >\n      {item.text && (\n        <p className={clsx(styles.header, { [styles.disabled]: disabled })} aria-hidden=\"true\">\n          {item.text}\n        </p>\n      )}\n      <ul className={clsx(styles['items-list-container'])} role=\"group\" aria-label={item.text}>\n        {item.items && (\n          <ItemsList\n            items={item.items}\n            onItemActivate={onItemActivate}\n            onGroupToggle={onGroupToggle}\n            targetItem={targetItem}\n            isHighlighted={isHighlighted}\n            isExpanded={isExpanded}\n            highlightItem={highlightItem}\n            categoryDisabled={disabled}\n            hasCategoryHeader={!!item.text}\n            variant={variant}\n          />\n        )}\n      </ul>\n    </li>\n  );\n};\n\nexport default CategoryElement;\n"]},"metadata":{},"sourceType":"module"}