{"ast":null,"code":"var _jsxFileName = \"/Users/firozahmed/Downloads/project/src/components/MenuPage/MenuList.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport constants from \"../../globals/constants\";\nimport GameManager from \"../../mechanics/GameManager\";\nimport { checkIfGameOver } from \"../../mechanics/helpers\";\nimport \"./Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MenuList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.startNewGame = this.startNewGame.bind(this);\n    this.loadData = this.loadData.bind(this);\n  }\n\n  startNewGame() {\n    const {\n      startGame,\n      resetTextChoices,\n      resetVariables\n    } = this.props;\n    localStorage.setItem(\"start_second\", 0); // Dispatch Redux actions\n\n    startGame();\n    resetTextChoices();\n    resetVariables();\n    this.loadData();\n  }\n\n  loadData() {\n    const {\n      loadModuleData,\n      setLoading\n    } = this.props; // Check if text data is already loaded - only load if it's not\n\n    if (!GameManager.checkIfModuleLoaded(constants.MODULE_INCIDENT)) {\n      // Set loading flag for GameLoadingContainer\n      setLoading(true); // Dispatch Redux action to load text data\n\n      loadModuleData(constants.MODULE_INCIDENT);\n    }\n  } // Starting a new game should load everything from a default state (using\n  // the startNewGame function). Resuming a game shouldn't need to load anything,\n  // unless the state has been loaded from browser storage (after a hard page\n  // refresh, or going to the page again after closing it). The text data is\n  // too large to keep in browser storage, so it must be loaded again.\n\n\n  render() {\n    const {\n      gameStarted,\n      currentNodeKey\n    } = this.props;\n    const gameOver = checkIfGameOver(currentNodeKey);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"400px\",\n            backgroundColor: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: \"left\",\n              width: \"50%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"optionButton\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/game\",\n                onClick: this.startNewGame,\n                children: \"Security Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: \"right\",\n              width: \"50%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"GeeksforGeeks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Geeks Portal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Writing Portal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Disabled\",\n        children: \"Work In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Link","constants","GameManager","checkIfGameOver","MenuList","Component","constructor","props","startNewGame","bind","loadData","startGame","resetTextChoices","resetVariables","localStorage","setItem","loadModuleData","setLoading","checkIfModuleLoaded","MODULE_INCIDENT","render","gameStarted","currentNodeKey","gameOver","width","height","backgroundColor","float"],"sources":["/Users/firozahmed/Downloads/project/src/components/MenuPage/MenuList.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport constants from \"../../globals/constants\";\r\nimport GameManager from \"../../mechanics/GameManager\";\r\nimport { checkIfGameOver } from \"../../mechanics/helpers\";\r\n\r\nimport \"./Style.css\";\r\n\r\nexport class MenuList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.startNewGame = this.startNewGame.bind(this);\r\n    this.loadData = this.loadData.bind(this);\r\n  }\r\n\r\n  startNewGame() {\r\n    const { startGame, resetTextChoices, resetVariables } = this.props;\r\n    localStorage.setItem(\"start_second\", 0);\r\n\r\n    // Dispatch Redux actions\r\n    startGame();\r\n    resetTextChoices();\r\n    resetVariables();\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    const { loadModuleData, setLoading } = this.props;\r\n\r\n    // Check if text data is already loaded - only load if it's not\r\n    if (!GameManager.checkIfModuleLoaded(constants.MODULE_INCIDENT)) {\r\n      // Set loading flag for GameLoadingContainer\r\n      setLoading(true);\r\n      // Dispatch Redux action to load text data\r\n      loadModuleData(constants.MODULE_INCIDENT);\r\n    }\r\n  }\r\n\r\n  // Starting a new game should load everything from a default state (using\r\n  // the startNewGame function). Resuming a game shouldn't need to load anything,\r\n  // unless the state has been loaded from browser storage (after a hard page\r\n  // refresh, or going to the page again after closing it). The text data is\r\n  // too large to keep in browser storage, so it must be loaded again.\r\n  render() {\r\n    const { gameStarted, currentNodeKey } = this.props;\r\n    const gameOver = checkIfGameOver(currentNodeKey);\r\n\r\n    return (\r\n      <div className=\"menu-list\">\r\n        <h3>\r\n          <div style={{width:\"100%\", height:\"400px\", backgroundColor:\"white\"}}>\r\n            <div style={{height:\"100px\"}}>\r\n          </div>\r\n          </div>\r\n          <div>\r\n          <div style={{float: \"left\", width: \"50%\"}}>\r\n          <button className=\"optionButton\">\r\n            <Link to=\"/game\" onClick={this.startNewGame}>\r\n              Security Analysis\r\n            </Link>\r\n          </button>\r\n    </div>\r\n    <div style={{float: \"right\", width: \"50%\"}}>\r\n        <p>GeeksforGeeks</p>\r\n        <p>Geeks Portal</p>\r\n        <p>Writing Portal</p>\r\n    </div>\r\n          </div>\r\n          \r\n        </h3>\r\n        <button className=\"Disabled\">Work In Progress</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAEA,OAAO,aAAP;;AAEA,OAAO,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;EAC5CC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IAEA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;IACA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;EACD;;EAEDD,YAAY,GAAG;IACb,MAAM;MAAEG,SAAF;MAAaC,gBAAb;MAA+BC;IAA/B,IAAkD,KAAKN,KAA7D;IACAO,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,CAArC,EAFa,CAIb;;IACAJ,SAAS;IACTC,gBAAgB;IAChBC,cAAc;IAEd,KAAKH,QAAL;EACD;;EAEDA,QAAQ,GAAG;IACT,MAAM;MAAEM,cAAF;MAAkBC;IAAlB,IAAiC,KAAKV,KAA5C,CADS,CAGT;;IACA,IAAI,CAACL,WAAW,CAACgB,mBAAZ,CAAgCjB,SAAS,CAACkB,eAA1C,CAAL,EAAiE;MAC/D;MACAF,UAAU,CAAC,IAAD,CAAV,CAF+D,CAG/D;;MACAD,cAAc,CAACf,SAAS,CAACkB,eAAX,CAAd;IACD;EACF,CA9B2C,CAgC5C;EACA;EACA;EACA;EACA;;;EACAC,MAAM,GAAG;IACP,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAkC,KAAKf,KAA7C;IACA,MAAMgB,QAAQ,GAAGpB,eAAe,CAACmB,cAAD,CAAhC;IAEA,oBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAA,wBACE;UAAK,KAAK,EAAE;YAACE,KAAK,EAAC,MAAP;YAAeC,MAAM,EAAC,OAAtB;YAA+BC,eAAe,EAAC;UAA/C,CAAZ;UAAA,uBACE;YAAK,KAAK,EAAE;cAACD,MAAM,EAAC;YAAR;UAAZ;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAA,wBACA;YAAK,KAAK,EAAE;cAACE,KAAK,EAAE,MAAR;cAAgBH,KAAK,EAAE;YAAvB,CAAZ;YAAA,uBACA;cAAQ,SAAS,EAAC,cAAlB;cAAA,uBACE,QAAC,IAAD;gBAAM,EAAE,EAAC,OAAT;gBAAiB,OAAO,EAAE,KAAKhB,YAA/B;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA;UADA;YAAA;YAAA;YAAA;UAAA,QADA,eAQN;YAAK,KAAK,EAAE;cAACmB,KAAK,EAAE,OAAR;cAAiBH,KAAK,EAAE;YAAxB,CAAZ;YAAA,wBACI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFJ,eAGI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAHJ;UAAA;YAAA;YAAA;YAAA;UAAA,QARM;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAsBE;QAAQ,SAAS,EAAC,UAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAtBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EA0BD;;AAnE2C"},"metadata":{},"sourceType":"module"}