{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import configureStore from'./store/store';import App from'./App';import{Footer}from'./components/common/Footer';import reportWebVitals from'./reportWebVitals';import'bootstrap/dist/css/bootstrap.css';import'./index.css';// Load previous state from browser's localStorage into Redux store\n// if it exists, otherwise use empty object. Define store at top level\n// so it can be exported to be used with GameManager class.\nimport{jsx as _jsx}from\"react/jsx-runtime\";var preloadedState=localStorage.state?JSON.parse(localStorage.state):{};var store=configureStore(preloadedState);// Set up sticky footer with Flexbox by rendering an array.\nvar content=[/*#__PURE__*/_jsx(App,{store:store},\"1\"),/*#__PURE__*/_jsx(Footer,{},\"2\")];document.addEventListener('DOMContentLoaded',function(){ReactDOM.render(/*#__PURE__*/_jsx(React.StrictMode,{children:content}),document.getElementById('root'));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();});// Export Redux store so it can be imported into GameManager class and accessed\n// in its static methods. For React components, use connect() instead.\nexport{store};","map":{"version":3,"names":["React","ReactDOM","configureStore","App","Footer","reportWebVitals","preloadedState","localStorage","state","JSON","parse","store","content","document","addEventListener","render","getElementById"],"sources":["/Users/igostu/test/project/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport configureStore from './store/store';\r\n\r\nimport App from './App';\r\nimport { Footer } from './components/common/Footer';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\n// Load previous state from browser's localStorage into Redux store\r\n// if it exists, otherwise use empty object. Define store at top level\r\n// so it can be exported to be used with GameManager class.\r\nconst preloadedState = localStorage.state ?\r\n  JSON.parse(localStorage.state) : {};\r\nconst store = configureStore(preloadedState);\r\n\r\n// Set up sticky footer with Flexbox by rendering an array.\r\nconst content = [<App store={store} key=\"1\" />, <Footer key=\"2\" />];\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      {content}\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  // If you want to start measuring performance in your app, pass a function\r\n  // to log results (for example: reportWebVitals(console.log))\r\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n  reportWebVitals();\r\n});\r\n\r\n// Export Redux store so it can be imported into GameManager class and accessed\r\n// in its static methods. For React components, use connect() instead.\r\nexport { store };"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,SAAP,KAAqB,WAArB,CACA,MAAOC,eAAP,KAA2B,eAA3B,CAEA,MAAOC,IAAP,KAAgB,OAAhB,CACA,OAASC,MAAT,KAAuB,4BAAvB,CACA,MAAOC,gBAAP,KAA4B,mBAA5B,CAEA,MAAO,kCAAP,CACA,MAAO,aAAP,CAEA;AACA;AACA;2CACA,GAAMC,eAAc,CAAGC,YAAY,CAACC,KAAb,CACrBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,KAAxB,CADqB,CACY,EADnC,CAEA,GAAMG,MAAK,CAAGT,cAAc,CAACI,cAAD,CAA5B,CAEA;AACA,GAAMM,QAAO,CAAG,cAAC,KAAC,GAAD,EAAK,KAAK,CAAED,KAAZ,EAAuB,GAAvB,CAAD,cAAgC,KAAC,MAAD,IAAY,GAAZ,CAAhC,CAAhB,CAEAE,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,CAA8C,UAAM,CAClDb,QAAQ,CAACc,MAAT,cACE,KAAC,KAAD,CAAO,UAAP,WACGH,OADH,EADF,CAIEC,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAJF,EAOA;AACA;AACA;AACAX,eAAe,GAChB,CAZD,EAcA;AACA;AACA,OAASM,KAAT"},"metadata":{},"sourceType":"module"}