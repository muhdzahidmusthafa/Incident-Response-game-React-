{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { Label, LabelTag, Description, Tags, FilteringTags, OptionIcon } from './option-parts';\nimport { getBaseProps } from '../../base-component';\nimport { warnOnce } from '../../logging';\nimport { isDevelopment } from '../../is-development';\n\nfunction validateStringValue(value, propertyName) {\n  if (typeof value !== 'undefined' && typeof value !== 'string') {\n    warnOnce('DropdownOption', \"This component only supports string values, but \\\"option.\".concat(propertyName, \"\\\" has \").concat(typeof value, \" type. The component may work incorrectly.\"));\n  }\n}\n\nvar Option = function (_a) {\n  var _b, _c;\n\n  var option = _a.option,\n      highlightText = _a.highlightText,\n      _d = _a.triggerVariant,\n      triggerVariant = _d === void 0 ? false : _d,\n      _e = _a.isGroupOption,\n      isGroupOption = _e === void 0 ? false : _e,\n      restProps = __rest(_a, [\"option\", \"highlightText\", \"triggerVariant\", \"isGroupOption\"]);\n\n  if (!option) {\n    return null;\n  }\n\n  var disabled = option.disabled;\n  var baseProps = getBaseProps(restProps);\n\n  if (isDevelopment) {\n    validateStringValue(option.label, 'label');\n    validateStringValue(option.description, 'description');\n    validateStringValue(option.labelTag, 'labelTag');\n    (_b = option.tags) === null || _b === void 0 ? void 0 : _b.forEach(function (tag, index) {\n      validateStringValue(tag, \"tags[\".concat(index, \"]\"));\n    });\n    (_c = option.filteringTags) === null || _c === void 0 ? void 0 : _c.forEach(function (tag, index) {\n      validateStringValue(tag, \"filteringTags[\".concat(index, \"]\"));\n    });\n  }\n\n  var className = clsx(styles.option, disabled && styles.disabled, isGroupOption && styles.parent);\n  var icon = option.__customIcon || React.createElement(OptionIcon, {\n    name: option.iconName,\n    url: option.iconUrl,\n    svg: option.iconSvg,\n    alt: option.iconAlt,\n    size: option.description || option.tags ? 'big' : 'normal'\n  });\n  return React.createElement(\"span\", __assign({\n    title: option.label || option.value,\n    \"data-value\": option.value,\n    className: className,\n    \"aria-disabled\": disabled\n  }, baseProps), icon, React.createElement(\"span\", {\n    className: clsx(styles.content)\n  }, React.createElement(\"span\", {\n    className: clsx(styles['label-content'])\n  }, React.createElement(Label, {\n    label: option.label || option.value,\n    prefix: option.__labelPrefix,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  }), React.createElement(LabelTag, {\n    labelTag: option.labelTag,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  })), React.createElement(Description, {\n    description: option.description,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  }), React.createElement(Tags, {\n    tags: option.tags,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  }), React.createElement(FilteringTags, {\n    filteringTags: option.filteringTags,\n    highlightText: highlightText,\n    triggerVariant: triggerVariant\n  })));\n};\n\nexport default Option;","map":{"version":3,"mappings":"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","names":["React","clsx","styles","Label","LabelTag","Description","Tags","FilteringTags","OptionIcon","getBaseProps","warnOnce","isDevelopment","validateStringValue","value","propertyName","concat","Option","_a","highlightText","_d","triggerVariant","_e","isGroupOption","restProps","option","baseProps","label","description","labelTag","tags","_b","forEach","tag","index","filteringTags","_c","className","disabled","parent","icon","__customIcon","name","iconName","url","iconUrl","svg","iconSvg","alt","iconAlt","size","title","content","prefix","__labelPrefix"],"sourceRoot":"","sources":["../../../../../src/internal/components/option/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { OptionProps } from './interfaces';\nimport { Label, LabelTag, Description, Tags, FilteringTags, OptionIcon } from './option-parts';\nimport { getBaseProps } from '../../base-component';\nimport { warnOnce } from '../../logging';\nimport { isDevelopment } from '../../is-development';\n\nexport { OptionProps };\n\nfunction validateStringValue(value: string | undefined, propertyName: string) {\n  if (typeof value !== 'undefined' && typeof value !== 'string') {\n    warnOnce(\n      'DropdownOption',\n      `This component only supports string values, but \"option.${propertyName}\" has ${typeof value} type. The component may work incorrectly.`\n    );\n  }\n}\n\nconst Option = ({\n  option,\n  highlightText,\n  triggerVariant = false,\n  isGroupOption = false,\n  ...restProps\n}: OptionProps) => {\n  if (!option) {\n    return null;\n  }\n  const { disabled } = option;\n  const baseProps = getBaseProps(restProps);\n\n  if (isDevelopment) {\n    validateStringValue(option.label, 'label');\n    validateStringValue(option.description, 'description');\n    validateStringValue(option.labelTag, 'labelTag');\n    option.tags?.forEach((tag, index) => {\n      validateStringValue(tag, `tags[${index}]`);\n    });\n    option.filteringTags?.forEach((tag, index) => {\n      validateStringValue(tag, `filteringTags[${index}]`);\n    });\n  }\n\n  const className = clsx(styles.option, disabled && styles.disabled, isGroupOption && styles.parent);\n\n  const icon = option.__customIcon || (\n    <OptionIcon\n      name={option.iconName}\n      url={option.iconUrl}\n      svg={option.iconSvg}\n      alt={option.iconAlt}\n      size={option.description || option.tags ? 'big' : 'normal'}\n    />\n  );\n\n  return (\n    <span\n      title={option.label || option.value}\n      data-value={option.value}\n      className={className}\n      aria-disabled={disabled}\n      {...baseProps}\n    >\n      {icon}\n      <span className={clsx(styles.content)}>\n        <span className={clsx(styles['label-content'])}>\n          <Label\n            label={option.label || option.value}\n            prefix={option.__labelPrefix}\n            highlightText={highlightText}\n            triggerVariant={triggerVariant}\n          />\n          <LabelTag labelTag={option.labelTag} highlightText={highlightText} triggerVariant={triggerVariant} />\n        </span>\n        <Description description={option.description} highlightText={highlightText} triggerVariant={triggerVariant} />\n        <Tags tags={option.tags} highlightText={highlightText} triggerVariant={triggerVariant} />\n        <FilteringTags\n          filteringTags={option.filteringTags}\n          highlightText={highlightText}\n          triggerVariant={triggerVariant}\n        />\n      </span>\n    </span>\n  );\n};\n\nexport default Option;\n"]},"metadata":{},"sourceType":"module"}