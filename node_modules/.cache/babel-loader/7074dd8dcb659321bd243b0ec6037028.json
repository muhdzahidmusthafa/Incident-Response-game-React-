{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalContainer from '../container/internal';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { TabHeaderBar } from './tab-header-bar';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nvar lastGeneratedId = 0;\nexport var nextGeneratedId = function () {\n  return \"awsui-tabs-\".concat(lastGeneratedId++, \"-\").concat(Math.round(Math.random() * 10000));\n};\n\nfunction firstEnabledTab(tabs) {\n  var enabledTabs = tabs.filter(function (tab) {\n    return !tab.disabled;\n  });\n\n  if (enabledTabs.length > 0) {\n    return enabledTabs[0];\n  }\n\n  return null;\n}\n\nexport default function Tabs(_a) {\n  var _b, _c;\n\n  var tabs = _a.tabs,\n      _d = _a.variant,\n      variant = _d === void 0 ? 'default' : _d,\n      onChange = _a.onChange,\n      controlledTabId = _a.activeTabId,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby,\n      _e = _a.disableContentPaddings,\n      disableContentPaddings = _e === void 0 ? false : _e,\n      rest = __rest(_a, [\"tabs\", \"variant\", \"onChange\", \"activeTabId\", \"ariaLabel\", \"ariaLabelledby\", \"disableContentPaddings\"]);\n\n  for (var _i = 0, tabs_1 = tabs; _i < tabs_1.length; _i++) {\n    var tab = tabs_1[_i];\n    checkSafeUrl('Tabs', tab.href);\n  }\n\n  var __internalRootRef = useBaseComponent('Tabs').__internalRootRef;\n\n  var idNamespace = useState(function () {\n    return nextGeneratedId();\n  })[0];\n\n  var _f = useControllable(controlledTabId, onChange, (_c = (_b = firstEnabledTab(tabs)) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : '', {\n    componentName: 'Tabs',\n    controlledProp: 'activeTabId',\n    changeHandler: 'onChange'\n  }),\n      activeTabId = _f[0],\n      setActiveTabId = _f[1];\n\n  var baseProps = getBaseProps(rest);\n\n  var content = function () {\n    var _a;\n\n    var selectedTab = tabs.filter(function (tab) {\n      return tab.id === activeTabId;\n    })[0];\n\n    var renderContent = function (tab) {\n      var _a;\n\n      var isContentActive = tab === selectedTab && !selectedTab.disabled && selectedTab.content;\n      var classes = clsx((_a = {}, _a[styles['tabs-content']] = true, _a[styles['tabs-content-active']] = isContentActive, _a));\n      var contentAttributes = {\n        className: classes,\n        role: 'tabpanel',\n        id: \"\".concat(idNamespace, \"-\").concat(tab.id, \"-panel\"),\n        key: \"\".concat(idNamespace, \"-\").concat(tab.id, \"-panel\")\n      };\n      return React.createElement(\"div\", __assign({}, contentAttributes), isContentActive && selectedTab.content);\n    };\n\n    return React.createElement(\"div\", {\n      className: clsx(variant === 'container' ? styles['tabs-container-content-wrapper'] : styles['tabs-content-wrapper'], (_a = {}, _a[styles['with-paddings']] = !disableContentPaddings, _a))\n    }, tabs.map(renderContent));\n  };\n\n  var header = React.createElement(TabHeaderBar, {\n    activeTabId: activeTabId,\n    variant: variant,\n    idNamespace: idNamespace,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    tabs: tabs,\n    onChange: function (changeDetail) {\n      setActiveTabId(changeDetail.activeTabId);\n      fireNonCancelableEvent(onChange, changeDetail);\n    }\n  });\n\n  if (variant === 'container') {\n    return React.createElement(InternalContainer, __assign({\n      header: header,\n      disableHeaderPaddings: true\n    }, baseProps, {\n      className: clsx(baseProps.className, styles.root),\n      __internalRootRef: __internalRootRef,\n      disableContentPaddings: disableContentPaddings\n    }), content());\n  }\n\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root, styles.tabs),\n    ref: __internalRootRef\n  }), header, content());\n}\napplyDisplayName(Tabs, 'Tabs');","map":{"version":3,"mappings":"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","names":["React","useState","getBaseProps","fireNonCancelableEvent","InternalContainer","clsx","styles","TabHeaderBar","useControllable","applyDisplayName","useBaseComponent","checkSafeUrl","lastGeneratedId","nextGeneratedId","concat","Math","round","random","firstEnabledTab","tabs","enabledTabs","filter","tab","disabled","length","Tabs","_a","_d","variant","onChange","controlledTabId","ariaLabel","ariaLabelledby","_e","disableContentPaddings","rest","_i","href","__internalRootRef","_b","id","_c","componentName","controlledProp","changeHandler","activeTabId","setActiveTabId","baseProps","content","selectedTab","renderContent","isContentActive","classes","contentAttributes","className","role","idNamespace","key","map","header","changeDetail","__assign","disableHeaderPaddings","root","ref"],"sourceRoot":"","sources":["../../../src/tabs/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalContainer from '../container/internal';\nimport { TabsProps } from './interfaces';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { TabHeaderBar } from './tab-header-bar';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\n\nexport { TabsProps };\n\nlet lastGeneratedId = 0;\nexport const nextGeneratedId = () => `awsui-tabs-${lastGeneratedId++}-${Math.round(Math.random() * 10000)}`;\n\nfunction firstEnabledTab(tabs: ReadonlyArray<TabsProps.Tab>) {\n  const enabledTabs = tabs.filter(tab => !tab.disabled);\n  if (enabledTabs.length > 0) {\n    return enabledTabs[0];\n  }\n  return null;\n}\n\nexport default function Tabs({\n  tabs,\n  variant = 'default',\n  onChange,\n  activeTabId: controlledTabId,\n  ariaLabel,\n  ariaLabelledby,\n  disableContentPaddings = false,\n  ...rest\n}: TabsProps) {\n  for (const tab of tabs) {\n    checkSafeUrl('Tabs', tab.href);\n  }\n  const { __internalRootRef } = useBaseComponent('Tabs');\n  const [idNamespace] = useState(() => nextGeneratedId());\n\n  const [activeTabId, setActiveTabId] = useControllable(controlledTabId, onChange, firstEnabledTab(tabs)?.id ?? '', {\n    componentName: 'Tabs',\n    controlledProp: 'activeTabId',\n    changeHandler: 'onChange',\n  });\n\n  const baseProps = getBaseProps(rest);\n\n  const content = () => {\n    const selectedTab = tabs.filter(tab => tab.id === activeTabId)[0];\n    const renderContent = (tab: TabsProps.Tab) => {\n      const isContentActive = tab === selectedTab && !selectedTab.disabled && selectedTab.content;\n\n      const classes = clsx({\n        [styles['tabs-content']]: true,\n        [styles['tabs-content-active']]: isContentActive,\n      });\n\n      const contentAttributes: JSX.IntrinsicElements['div'] = {\n        className: classes,\n        role: 'tabpanel',\n        id: `${idNamespace}-${tab.id}-panel`,\n        key: `${idNamespace}-${tab.id}-panel`,\n      };\n\n      return <div {...contentAttributes}>{isContentActive && selectedTab.content}</div>;\n    };\n\n    return (\n      <div\n        className={clsx(\n          variant === 'container' ? styles['tabs-container-content-wrapper'] : styles['tabs-content-wrapper'],\n          {\n            [styles['with-paddings']]: !disableContentPaddings,\n          }\n        )}\n      >\n        {tabs.map(renderContent)}\n      </div>\n    );\n  };\n\n  const header = (\n    <TabHeaderBar\n      activeTabId={activeTabId}\n      variant={variant}\n      idNamespace={idNamespace}\n      ariaLabel={ariaLabel}\n      ariaLabelledby={ariaLabelledby}\n      tabs={tabs}\n      onChange={changeDetail => {\n        setActiveTabId(changeDetail.activeTabId);\n        fireNonCancelableEvent(onChange, changeDetail);\n      }}\n    />\n  );\n\n  if (variant === 'container') {\n    return (\n      <InternalContainer\n        header={header}\n        disableHeaderPaddings={true}\n        {...baseProps}\n        className={clsx(baseProps.className, styles.root)}\n        __internalRootRef={__internalRootRef}\n        disableContentPaddings={disableContentPaddings}\n      >\n        {content()}\n      </InternalContainer>\n    );\n  }\n\n  return (\n    <div {...baseProps} className={clsx(baseProps.className, styles.root, styles.tabs)} ref={__internalRootRef}>\n      {header}\n      {content()}\n    </div>\n  );\n}\n\napplyDisplayName(Tabs, 'Tabs');\n"]},"metadata":{},"sourceType":"module"}