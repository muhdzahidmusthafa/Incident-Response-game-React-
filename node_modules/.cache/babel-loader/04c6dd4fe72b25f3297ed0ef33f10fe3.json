{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar PromiseCancelledSignal =\n/** @class */\nfunction () {\n  function PromiseCancelledSignal() {}\n\n  return PromiseCancelledSignal;\n}();\n\nexport { PromiseCancelledSignal };\n/**\n * Wrap and provide a handle for a promise to provide cancellation information inside\n * callbacks. Takes a similar approach to how an AbortController works in modern fetch.\n *\n * @see https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n */\n\nexport function makeCancellable(promise) {\n  var cancelled = false;\n  var wrapped = promise.then(function (value) {\n    if (cancelled) {\n      throw new PromiseCancelledSignal();\n    }\n\n    return value;\n  }, function (err) {\n    if (cancelled) {\n      throw new PromiseCancelledSignal();\n    }\n\n    throw err;\n  });\n  return {\n    promise: wrapped,\n    cancel: function () {\n      cancelled = true;\n    },\n    isCancelled: function () {\n      return cancelled;\n    }\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA;AAAA;AAAA;EAAA,mCAAsC;;EAAD;AAAC,CAAtC;;;AAEA;;;;;;;AAMA,OAAM,SAAUA,eAAV,CAA6BC,OAA7B,EAAgD;EAKpD,IAAIC,SAAS,GAAG,KAAhB;EACA,IAAMC,OAAO,GAAGF,OAAO,CAACG,IAAR,CACd,iBAAK;IACH,IAAIF,SAAJ,EAAe;MACb,MAAM,IAAIG,sBAAJ,EAAN;IACD;;IACD,OAAOC,KAAP;EACD,CANa,EAOd,eAAG;IACD,IAAIJ,SAAJ,EAAe;MACb,MAAM,IAAIG,sBAAJ,EAAN;IACD;;IACD,MAAME,GAAN;EACD,CAZa,CAAhB;EAeA,OAAO;IACLN,OAAO,EAAEE,OADJ;IAELK,MAAM,EAAE;MACNN,SAAS,GAAG,IAAZ;IACD,CAJI;IAKLO,WAAW,EAAE;MAAM;IAAS;EALvB,CAAP;AAOD","names":["makeCancellable","promise","cancelled","wrapped","then","PromiseCancelledSignal","value","err","cancel","isCancelled"],"sourceRoot":"","sources":["../../../../src/internal/utils/promises.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport class PromiseCancelledSignal {}\n\n/**\n * Wrap and provide a handle for a promise to provide cancellation information inside\n * callbacks. Takes a similar approach to how an AbortController works in modern fetch.\n *\n * @see https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n */\nexport function makeCancellable<T>(promise: Promise<T>): {\n  promise: Promise<T>;\n  cancel: () => void;\n  isCancelled: () => boolean;\n} {\n  let cancelled = false;\n  const wrapped = promise.then(\n    value => {\n      if (cancelled) {\n        throw new PromiseCancelledSignal();\n      }\n      return value;\n    },\n    err => {\n      if (cancelled) {\n        throw new PromiseCancelledSignal();\n      }\n      throw err;\n    }\n  );\n\n  return {\n    promise: wrapped,\n    cancel: () => {\n      cancelled = true;\n    },\n    isCancelled: () => cancelled,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}