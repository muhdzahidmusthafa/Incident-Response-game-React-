{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback } from 'react';\nexport var useSearchProps = function (type, disabled, readOnly, value, inputRef, onChange) {\n  var searchProps = {};\n  var handleIconClick = useCallback(function () {\n    var _a;\n\n    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    onChange('');\n  }, [inputRef, onChange]);\n\n  if (type === 'search') {\n    searchProps.__leftIcon = 'search';\n\n    if (!disabled && !readOnly && value) {\n      searchProps.__rightIcon = 'close';\n      searchProps.__onRightIconClick = handleIconClick;\n    }\n  }\n\n  return searchProps;\n};\n/**\n * Converts the boolean or string value of the `autoComplete` property to the correct `autocomplete` attribute value.\n */\n\nexport var convertAutoComplete = function (propertyValue) {\n  if (propertyValue === void 0) {\n    propertyValue = false;\n  }\n\n  if (propertyValue === true) {\n    return 'on';\n  }\n\n  return propertyValue || 'off';\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAT,QAAuC,OAAvC;AAGA,OAAO,IAAMC,cAAc,GAAG,UAC5BC,IAD4B,EAE5BC,QAF4B,EAG5BC,QAH4B,EAI5BC,KAJ4B,EAK5BC,QAL4B,EAM5BC,QAN4B,EAMK;EAEjC,IAAMC,WAAW,GAAgC,EAAjD;EACA,IAAMC,eAAe,GAAGT,WAAW,CAAC;;;IAClC,cAAQ,CAACU,OAAT,MAAgB,IAAhB,IAAgBC,aAAhB,GAAgB,MAAhB,GAAgBA,GAAEC,KAAF,EAAhB;IACAL,QAAQ,CAAC,EAAD,CAAR;EACD,CAHkC,EAGhC,CAACD,QAAD,EAAWC,QAAX,CAHgC,CAAnC;;EAIA,IAAIL,IAAI,KAAK,QAAb,EAAuB;IACrBM,WAAW,CAACK,UAAZ,GAAyB,QAAzB;;IAEA,IAAI,CAACV,QAAD,IAAa,CAACC,QAAd,IAA0BC,KAA9B,EAAqC;MACnCG,WAAW,CAACM,WAAZ,GAA0B,OAA1B;MACAN,WAAW,CAACO,kBAAZ,GAAiCN,eAAjC;IACD;EACF;;EACD,OAAOD,WAAP;AACD,CAtBM;AAwBP;;;;AAGA,OAAO,IAAMQ,mBAAmB,GAAG,UAACC,aAAD,EAAwC;EAAvC;IAAAA;EAAuC;;EACzE,IAAIA,aAAa,KAAK,IAAtB,EAA4B;IAC1B,OAAO,IAAP;EACD;;EACD,OAAOA,aAAa,IAAI,KAAxB;AACD,CALM","names":["useCallback","useSearchProps","type","disabled","readOnly","value","inputRef","onChange","searchProps","handleIconClick","current","_a","focus","__leftIcon","__rightIcon","__onRightIconClick","convertAutoComplete","propertyValue"],"sourceRoot":"","sources":["../../../src/input/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, RefObject } from 'react';\nimport { InternalInputProps } from './internal';\n\nexport const useSearchProps = (\n  type: string,\n  disabled: boolean | undefined,\n  readOnly: boolean | undefined,\n  value: string,\n  inputRef: RefObject<HTMLInputElement>,\n  onChange: (value: string) => void\n) => {\n  const searchProps: Partial<InternalInputProps> = {};\n  const handleIconClick = useCallback(() => {\n    inputRef.current?.focus();\n    onChange('');\n  }, [inputRef, onChange]);\n  if (type === 'search') {\n    searchProps.__leftIcon = 'search';\n\n    if (!disabled && !readOnly && value) {\n      searchProps.__rightIcon = 'close';\n      searchProps.__onRightIconClick = handleIconClick;\n    }\n  }\n  return searchProps;\n};\n\n/**\n * Converts the boolean or string value of the `autoComplete` property to the correct `autocomplete` attribute value.\n */\nexport const convertAutoComplete = (propertyValue: boolean | string = false): string => {\n  if (propertyValue === true) {\n    return 'on';\n  }\n  return propertyValue || 'off';\n};\n"]},"metadata":{},"sourceType":"module"}