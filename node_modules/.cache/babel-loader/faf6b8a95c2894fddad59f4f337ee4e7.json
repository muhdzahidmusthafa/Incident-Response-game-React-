{"ast":null,"code":"import { __assign, __rest, __spreadArray } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { isGroup } from '../internal/components/option/utils/filter-options';\nimport DropdownFooter from '../internal/components/dropdown-footer/index.js';\nimport { prepareOptions } from '../internal/components/option/utils/prepare-options';\nimport Dropdown from '../internal/components/dropdown';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport { useSelect } from '../select/utils/use-select';\nimport { useNativeSearch } from '../select/utils/use-native-search';\nimport { useLoadItems } from '../select/utils/use-load-items';\nimport { useAnnouncement } from '../select/utils/use-announcement';\nimport { findOptionIndex } from '../select/utils/connect-options';\nimport PlainList from '../select/parts/plain-list';\nimport VirtualList from '../select/parts/virtual-list';\nimport { checkOptionValueField } from '../select/utils/check-option-value-field.js';\nimport Filter from '../select/parts/filter';\nimport Trigger from '../select/parts/trigger';\nimport TokenGroup from '../token-group/index.js';\nimport styles from './styles.css.js';\nvar InternalMultiselect = React.forwardRef(function (_a, externalRef) {\n  var _b;\n\n  var _c = _a.options,\n      options = _c === void 0 ? [] : _c,\n      _d = _a.filteringType,\n      filteringType = _d === void 0 ? 'none' : _d,\n      filteringPlaceholder = _a.filteringPlaceholder,\n      filteringAriaLabel = _a.filteringAriaLabel,\n      ariaRequired = _a.ariaRequired,\n      placeholder = _a.placeholder,\n      disabled = _a.disabled,\n      ariaLabel = _a.ariaLabel,\n      _e = _a.statusType,\n      statusType = _e === void 0 ? 'finished' : _e,\n      empty = _a.empty,\n      loadingText = _a.loadingText,\n      finishedText = _a.finishedText,\n      errorText = _a.errorText,\n      recoveryText = _a.recoveryText,\n      noMatch = _a.noMatch,\n      selectedAriaLabel = _a.selectedAriaLabel,\n      renderHighlightedAriaLive = _a.renderHighlightedAriaLive,\n      _f = _a.selectedOptions,\n      selectedOptions = _f === void 0 ? [] : _f,\n      deselectAriaLabel = _a.deselectAriaLabel,\n      _g = _a.keepOpen,\n      keepOpen = _g === void 0 ? true : _g,\n      tokenLimit = _a.tokenLimit,\n      i18nStrings = _a.i18nStrings,\n      onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      onLoadItems = _a.onLoadItems,\n      onChange = _a.onChange,\n      virtualScroll = _a.virtualScroll,\n      _h = _a.hideTokens,\n      hideTokens = _h === void 0 ? false : _h,\n      expandToViewport = _a.expandToViewport,\n      _j = _a.__internalRootRef,\n      __internalRootRef = _j === void 0 ? null : _j,\n      restProps = __rest(_a, [\"options\", \"filteringType\", \"filteringPlaceholder\", \"filteringAriaLabel\", \"ariaRequired\", \"placeholder\", \"disabled\", \"ariaLabel\", \"statusType\", \"empty\", \"loadingText\", \"finishedText\", \"errorText\", \"recoveryText\", \"noMatch\", \"selectedAriaLabel\", \"renderHighlightedAriaLive\", \"selectedOptions\", \"deselectAriaLabel\", \"keepOpen\", \"tokenLimit\", \"i18nStrings\", \"onBlur\", \"onFocus\", \"onLoadItems\", \"onChange\", \"virtualScroll\", \"hideTokens\", \"expandToViewport\", \"__internalRootRef\"]);\n\n  checkOptionValueField('Multiselect', 'options', options);\n  var baseProps = getBaseProps(restProps);\n  var formFieldContext = useFormFieldContext(restProps);\n\n  var _k = useLoadItems({\n    onLoadItems: onLoadItems,\n    options: options,\n    statusType: statusType\n  }),\n      handleLoadMore = _k.handleLoadMore,\n      handleRecoveryClick = _k.handleRecoveryClick,\n      fireLoadItems = _k.fireLoadItems;\n\n  var useInteractiveGroups = true;\n\n  var _l = useState(''),\n      filteringValue = _l[0],\n      setFilteringValue = _l[1];\n\n  var _m = prepareOptions(options, filteringType, filteringValue),\n      filteredOptions = _m.filteredOptions,\n      parentMap = _m.parentMap;\n\n  var updateSelectedOption = useCallback(function (option) {\n    var filtered = filteredOptions.filter(function (item) {\n      return item.type !== 'parent';\n    }).map(function (item) {\n      return item.option;\n    }); // switch between selection and deselection behavior, ignores disabled options to prevent\n    // getting stuck on one behavior when an option is disabled and its state cannot be changed\n\n    var isAllChildrenSelected = function (optionsArray) {\n      return optionsArray.every(function (item) {\n        return findOptionIndex(selectedOptions, item) > -1 || item.disabled;\n      });\n    };\n\n    var intersection = function (visibleOptions, options) {\n      return visibleOptions.filter(function (item) {\n        return findOptionIndex(options, item) > -1 && !item.disabled;\n      });\n    };\n\n    var union = function (visibleOptions, options) {\n      return visibleOptions.filter(function (item) {\n        return findOptionIndex(options, item) === -1;\n      }).concat(options);\n    };\n\n    var select = function (options, selectedOptions) {\n      return union(selectedOptions, options);\n    };\n\n    var unselect = function (options, selectedOptions) {\n      return selectedOptions.filter(function (option) {\n        return findOptionIndex(options, option) === -1;\n      });\n    };\n\n    var newSelectedOptions = __spreadArray([], selectedOptions, true);\n\n    if (isGroup(option)) {\n      var visibleOptions = intersection(__spreadArray([], option.options, true), filtered);\n      newSelectedOptions = isAllChildrenSelected(visibleOptions) ? unselect(visibleOptions, newSelectedOptions) : select(visibleOptions, newSelectedOptions);\n    } else {\n      newSelectedOptions = isAllChildrenSelected([option]) ? unselect([option], newSelectedOptions) : select([option], newSelectedOptions);\n    }\n\n    fireNonCancelableEvent(onChange, {\n      selectedOptions: newSelectedOptions\n    });\n  }, [onChange, selectedOptions, filteredOptions]);\n  var rootRef = useRef(null);\n  var selfControlId = useUniqueId('trigger');\n  var controlId = (_b = formFieldContext.controlId) !== null && _b !== void 0 ? _b : selfControlId;\n  var scrollToIndex = useRef(null);\n\n  var _o = useSelect({\n    selectedOptions: selectedOptions,\n    updateSelectedOption: updateSelectedOption,\n    options: filteredOptions,\n    filteringType: filteringType,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    externalRef: externalRef,\n    keepOpen: keepOpen,\n    fireLoadItems: fireLoadItems,\n    setFilteringValue: setFilteringValue,\n    useInteractiveGroups: useInteractiveGroups\n  }),\n      isOpen = _o.isOpen,\n      highlightedOption = _o.highlightedOption,\n      highlightedIndex = _o.highlightedIndex,\n      getTriggerProps = _o.getTriggerProps,\n      getFilterProps = _o.getFilterProps,\n      getMenuProps = _o.getMenuProps,\n      getOptionProps = _o.getOptionProps,\n      isKeyboard = _o.isKeyboard,\n      highlightOption = _o.highlightOption,\n      announceSelected = _o.announceSelected;\n\n  var handleNativeSearch = useNativeSearch({\n    isEnabled: filteringType === 'none' && isOpen,\n    options: filteredOptions,\n    highlightOption: highlightOption,\n    highlightedOption: highlightedOption === null || highlightedOption === void 0 ? void 0 : highlightedOption.option,\n    isKeyboard: isKeyboard,\n    useInteractiveGroups: useInteractiveGroups\n  });\n  var isEmpty = !options || options.length === 0;\n  var isNoMatch = filteredOptions && filteredOptions.length === 0;\n  var dropdownStatus = useDropdownStatus({\n    statusType: statusType,\n    empty: empty,\n    loadingText: loadingText,\n    finishedText: finishedText,\n    errorText: errorText,\n    recoveryText: recoveryText,\n    isEmpty: isEmpty,\n    isNoMatch: isNoMatch,\n    noMatch: noMatch,\n    onRecoveryClick: handleRecoveryClick\n  });\n  var filter = React.createElement(Filter, __assign({\n    filteringType: filteringType,\n    placeholder: filteringPlaceholder,\n    ariaLabel: filteringAriaLabel,\n    ariaRequired: ariaRequired,\n    value: filteringValue\n  }, getFilterProps()));\n  var trigger = React.createElement(Trigger, __assign({\n    placeholder: placeholder,\n    disabled: disabled,\n    ariaLabel: ariaLabel,\n    triggerProps: getTriggerProps(disabled),\n    selectedOption: null,\n    isOpen: isOpen\n  }, formFieldContext, {\n    controlId: controlId\n  }));\n\n  var menuProps = __assign(__assign({}, getMenuProps()), {\n    onLoadMore: handleLoadMore,\n    ariaLabelledby: controlId\n  });\n\n  var announcement = useAnnouncement({\n    announceSelected: announceSelected,\n    highlightedOption: highlightedOption,\n    getParent: function (option) {\n      var _a;\n\n      return (_a = parentMap.get(option)) === null || _a === void 0 ? void 0 : _a.option;\n    },\n    selectedAriaLabel: selectedAriaLabel,\n    renderHighlightedAriaLive: renderHighlightedAriaLive\n  });\n  var tokens = selectedOptions.map(function (option) {\n    return {\n      label: option.label,\n      disabled: disabled || option.disabled,\n      labelTag: option.labelTag,\n      description: option.description,\n      iconAlt: option.iconAlt,\n      iconName: option.iconName,\n      iconUrl: option.iconUrl,\n      iconSvg: option.iconSvg,\n      tags: option.tags,\n      dismissLabel: deselectAriaLabel ? deselectAriaLabel(option) : undefined\n    };\n  });\n  useEffect(function () {\n    var _a;\n\n    (_a = scrollToIndex.current) === null || _a === void 0 ? void 0 : _a.call(scrollToIndex, highlightedIndex);\n  }, [highlightedIndex]);\n  var ListComponent = virtualScroll ? VirtualList : PlainList;\n\n  var handleMouseDown = function (event) {\n    var target = event.target;\n\n    if (target !== document.activeElement) {\n      // prevent currently focused element from losing it\n      event.preventDefault();\n    }\n  };\n\n  var showTokens = !hideTokens && tokens.length > 0;\n\n  var handleTokenDismiss = function (_a) {\n    var detail = _a.detail;\n    var optionToDeselect = selectedOptions[detail.itemIndex];\n    updateSelectedOption(optionToDeselect);\n    var targetRef = getTriggerProps().ref;\n\n    if (targetRef.current) {\n      targetRef.current.focus();\n    }\n  };\n\n  var tokenGroupI18nStrings = {\n    limitShowFewer: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tokenLimitShowFewer,\n    limitShowMore: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tokenLimitShowMore\n  };\n  var mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(styles.root, baseProps.className),\n    onKeyPress: handleNativeSearch\n  }), React.createElement(Dropdown, {\n    open: isOpen,\n    trigger: trigger,\n    header: filter,\n    onMouseDown: handleMouseDown,\n    footer: dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n      content: dropdownStatus.content\n    }) : null,\n    expandToViewport: expandToViewport\n  }, React.createElement(ListComponent, {\n    listBottom: !dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n      content: dropdownStatus.content\n    }) : null,\n    menuProps: menuProps,\n    getOptionProps: getOptionProps,\n    filteredOptions: filteredOptions,\n    filteringValue: filteringValue,\n    isKeyboard: isKeyboard.current,\n    ref: scrollToIndex,\n    hasDropdownStatus: dropdownStatus.content !== null,\n    checkboxes: true,\n    useInteractiveGroups: useInteractiveGroups,\n    screenReaderContent: announcement\n  })), showTokens && React.createElement(TokenGroup, {\n    limit: tokenLimit,\n    items: tokens,\n    onDismiss: handleTokenDismiss,\n    i18nStrings: tokenGroupI18nStrings\n  }));\n});\nexport default InternalMultiselect;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useRef","useState","clsx","useMergeRefs","useFormFieldContext","getBaseProps","fireNonCancelableEvent","useUniqueId","isGroup","DropdownFooter","prepareOptions","Dropdown","useDropdownStatus","useSelect","useNativeSearch","useLoadItems","useAnnouncement","findOptionIndex","PlainList","VirtualList","checkOptionValueField","Filter","Trigger","TokenGroup","styles","InternalMultiselect","forwardRef","_a","externalRef","_c","_d","filteringType","filteringPlaceholder","filteringAriaLabel","ariaRequired","placeholder","disabled","ariaLabel","_e","statusType","empty","loadingText","finishedText","errorText","recoveryText","noMatch","selectedAriaLabel","renderHighlightedAriaLive","_f","selectedOptions","deselectAriaLabel","_g","keepOpen","tokenLimit","i18nStrings","onBlur","onFocus","onLoadItems","onChange","virtualScroll","_h","hideTokens","expandToViewport","_j","__internalRootRef","restProps","options","baseProps","formFieldContext","handleLoadMore","handleRecoveryClick","fireLoadItems","useInteractiveGroups","filteringValue","setFilteringValue","filteredOptions","parentMap","updateSelectedOption","option","filtered","filter","type","map","isAllChildrenSelected","optionsArray","every","item","intersection","visibleOptions","union","concat","select","unselect","newSelectedOptions","rootRef","selfControlId","controlId","_b","scrollToIndex","isOpen","highlightedOption","highlightedIndex","getTriggerProps","getFilterProps","getMenuProps","getOptionProps","isKeyboard","highlightOption","announceSelected","handleNativeSearch","isEnabled","isEmpty","length","isNoMatch","dropdownStatus","onRecoveryClick","__assign","value","trigger","triggerProps","selectedOption","menuProps","onLoadMore","ariaLabelledby","announcement","getParent","get","tokens","label","labelTag","description","iconAlt","iconName","iconUrl","iconSvg","tags","dismissLabel","undefined","current","ListComponent","handleMouseDown","event","target","document","activeElement","preventDefault","showTokens","handleTokenDismiss","detail","optionToDeselect","itemIndex","targetRef","ref","focus","tokenGroupI18nStrings","limitShowFewer","tokenLimitShowFewer","limitShowMore","tokenLimitShowMore","mergedRef","className","root","onKeyPress","open","header","onMouseDown","footer","isSticky","content","listBottom","hasDropdownStatus","checkboxes","screenReaderContent","limit","items","onDismiss"],"sourceRoot":"","sources":["../../../src/multiselect/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component/index.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { isGroup } from '../internal/components/option/utils/filter-options';\n\nimport DropdownFooter from '../internal/components/dropdown-footer/index.js';\nimport { prepareOptions } from '../internal/components/option/utils/prepare-options';\nimport { OptionDefinition, OptionGroup } from '../internal/components/option/interfaces';\nimport Dropdown from '../internal/components/dropdown';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\n\nimport { useSelect, MenuProps } from '../select/utils/use-select';\nimport { useNativeSearch } from '../select/utils/use-native-search';\nimport { useLoadItems } from '../select/utils/use-load-items';\nimport { useAnnouncement } from '../select/utils/use-announcement';\nimport { findOptionIndex } from '../select/utils/connect-options';\nimport PlainList, { SelectListProps } from '../select/parts/plain-list';\nimport VirtualList from '../select/parts/virtual-list';\nimport { checkOptionValueField } from '../select/utils/check-option-value-field.js';\nimport Filter from '../select/parts/filter';\nimport Trigger from '../select/parts/trigger';\n\nimport TokenGroup, { TokenGroupProps } from '../token-group/index.js';\n\nimport { MultiselectProps } from './interfaces';\nimport styles from './styles.css.js';\n\ntype InternalMultiselectProps = MultiselectProps & InternalBaseComponentProps;\n\nconst InternalMultiselect = React.forwardRef(\n  (\n    {\n      options = [],\n      filteringType = 'none',\n      filteringPlaceholder,\n      filteringAriaLabel,\n      ariaRequired,\n      placeholder,\n      disabled,\n      ariaLabel,\n      statusType = 'finished',\n      empty,\n      loadingText,\n      finishedText,\n      errorText,\n      recoveryText,\n      noMatch,\n      selectedAriaLabel,\n      renderHighlightedAriaLive,\n      selectedOptions = [],\n      deselectAriaLabel,\n      keepOpen = true,\n      tokenLimit,\n      i18nStrings,\n      onBlur,\n      onFocus,\n      onLoadItems,\n      onChange,\n      virtualScroll,\n      hideTokens = false,\n      expandToViewport,\n      __internalRootRef = null,\n      ...restProps\n    }: InternalMultiselectProps,\n    externalRef: React.Ref<MultiselectProps.Ref>\n  ) => {\n    checkOptionValueField('Multiselect', 'options', options);\n\n    const baseProps = getBaseProps(restProps);\n    const formFieldContext = useFormFieldContext(restProps);\n\n    const { handleLoadMore, handleRecoveryClick, fireLoadItems } = useLoadItems({\n      onLoadItems,\n      options,\n      statusType,\n    });\n    const useInteractiveGroups = true;\n    const [filteringValue, setFilteringValue] = useState('');\n    const { filteredOptions, parentMap } = prepareOptions(options, filteringType, filteringValue);\n\n    const updateSelectedOption = useCallback(\n      (option: OptionDefinition | OptionGroup) => {\n        const filtered = filteredOptions.filter(item => item.type !== 'parent').map(item => item.option);\n\n        // switch between selection and deselection behavior, ignores disabled options to prevent\n        // getting stuck on one behavior when an option is disabled and its state cannot be changed\n        const isAllChildrenSelected = (optionsArray: OptionDefinition[]) =>\n          optionsArray.every(item => findOptionIndex(selectedOptions, item) > -1 || item.disabled);\n        const intersection = (visibleOptions: OptionDefinition[], options: OptionDefinition[]) =>\n          visibleOptions.filter(item => findOptionIndex(options, item) > -1 && !item.disabled);\n        const union = (visibleOptions: OptionDefinition[], options: OptionDefinition[]) =>\n          visibleOptions.filter(item => findOptionIndex(options, item) === -1).concat(options);\n        const select = (options: OptionDefinition[], selectedOptions: OptionDefinition[]) => {\n          return union(selectedOptions, options);\n        };\n        const unselect = (options: OptionDefinition[], selectedOptions: OptionDefinition[]) => {\n          return selectedOptions.filter(option => findOptionIndex(options, option) === -1);\n        };\n        let newSelectedOptions = [...selectedOptions];\n\n        if (isGroup(option)) {\n          const visibleOptions = intersection([...option.options], filtered);\n          newSelectedOptions = isAllChildrenSelected(visibleOptions)\n            ? unselect(visibleOptions, newSelectedOptions)\n            : select(visibleOptions, newSelectedOptions);\n        } else {\n          newSelectedOptions = isAllChildrenSelected([option])\n            ? unselect([option], newSelectedOptions)\n            : select([option], newSelectedOptions);\n        }\n\n        fireNonCancelableEvent(onChange, {\n          selectedOptions: newSelectedOptions,\n        });\n      },\n      [onChange, selectedOptions, filteredOptions]\n    );\n\n    const rootRef = useRef<HTMLDivElement>(null);\n\n    const selfControlId = useUniqueId('trigger');\n    const controlId = formFieldContext.controlId ?? selfControlId;\n\n    const scrollToIndex = useRef<SelectListProps.SelectListRef>(null);\n    const {\n      isOpen,\n      highlightedOption,\n      highlightedIndex,\n      getTriggerProps,\n      getFilterProps,\n      getMenuProps,\n      getOptionProps,\n      isKeyboard,\n      highlightOption,\n      announceSelected,\n    } = useSelect({\n      selectedOptions,\n      updateSelectedOption,\n      options: filteredOptions,\n      filteringType,\n      onFocus,\n      onBlur,\n      externalRef,\n      keepOpen,\n      fireLoadItems,\n      setFilteringValue,\n      useInteractiveGroups,\n    });\n\n    const handleNativeSearch = useNativeSearch({\n      isEnabled: filteringType === 'none' && isOpen,\n      options: filteredOptions,\n      highlightOption: highlightOption,\n      highlightedOption: highlightedOption?.option,\n      isKeyboard,\n      useInteractiveGroups,\n    });\n\n    const isEmpty = !options || options.length === 0;\n    const isNoMatch = filteredOptions && filteredOptions.length === 0;\n    const dropdownStatus = useDropdownStatus({\n      statusType,\n      empty,\n      loadingText,\n      finishedText,\n      errorText,\n      recoveryText,\n      isEmpty,\n      isNoMatch,\n      noMatch,\n      onRecoveryClick: handleRecoveryClick,\n    });\n\n    const filter = (\n      <Filter\n        filteringType={filteringType}\n        placeholder={filteringPlaceholder}\n        ariaLabel={filteringAriaLabel}\n        ariaRequired={ariaRequired}\n        value={filteringValue}\n        {...getFilterProps()}\n      />\n    );\n\n    const trigger = (\n      <Trigger\n        placeholder={placeholder}\n        disabled={disabled}\n        ariaLabel={ariaLabel}\n        triggerProps={getTriggerProps(disabled)}\n        selectedOption={null}\n        isOpen={isOpen}\n        {...formFieldContext}\n        controlId={controlId}\n      />\n    );\n\n    const menuProps: MenuProps = {\n      ...getMenuProps(),\n      onLoadMore: handleLoadMore,\n      ariaLabelledby: controlId,\n    };\n\n    const announcement = useAnnouncement({\n      announceSelected,\n      highlightedOption,\n      getParent: option => parentMap.get(option)?.option as undefined | OptionGroup,\n      selectedAriaLabel,\n      renderHighlightedAriaLive,\n    });\n\n    const tokens: TokenGroupProps['items'] = selectedOptions.map(option => ({\n      label: option.label,\n      disabled: disabled || option.disabled,\n      labelTag: option.labelTag,\n      description: option.description,\n      iconAlt: option.iconAlt,\n      iconName: option.iconName,\n      iconUrl: option.iconUrl,\n      iconSvg: option.iconSvg,\n      tags: option.tags,\n      dismissLabel: deselectAriaLabel ? deselectAriaLabel(option) : undefined,\n    }));\n\n    useEffect(() => {\n      scrollToIndex.current?.(highlightedIndex);\n    }, [highlightedIndex]);\n\n    const ListComponent = virtualScroll ? VirtualList : PlainList;\n\n    const handleMouseDown = (event: React.MouseEvent) => {\n      const target = event.target as HTMLElement;\n\n      if (target !== document.activeElement) {\n        // prevent currently focused element from losing it\n        event.preventDefault();\n      }\n    };\n\n    const showTokens = !hideTokens && tokens.length > 0;\n    const handleTokenDismiss: TokenGroupProps['onDismiss'] = ({ detail }) => {\n      const optionToDeselect = selectedOptions[detail.itemIndex];\n      updateSelectedOption(optionToDeselect);\n      const targetRef = getTriggerProps().ref;\n      if (targetRef.current) {\n        targetRef.current.focus();\n      }\n    };\n\n    const tokenGroupI18nStrings: TokenGroupProps.I18nStrings = {\n      limitShowFewer: i18nStrings?.tokenLimitShowFewer,\n      limitShowMore: i18nStrings?.tokenLimitShowMore,\n    };\n\n    const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n\n    return (\n      <div\n        {...baseProps}\n        ref={mergedRef}\n        className={clsx(styles.root, baseProps.className)}\n        onKeyPress={handleNativeSearch}\n      >\n        <Dropdown\n          open={isOpen}\n          trigger={trigger}\n          header={filter}\n          onMouseDown={handleMouseDown}\n          footer={dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} /> : null}\n          expandToViewport={expandToViewport}\n        >\n          <ListComponent\n            listBottom={!dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} /> : null}\n            menuProps={menuProps}\n            getOptionProps={getOptionProps}\n            filteredOptions={filteredOptions}\n            filteringValue={filteringValue}\n            isKeyboard={isKeyboard.current}\n            ref={scrollToIndex}\n            hasDropdownStatus={dropdownStatus.content !== null}\n            checkboxes={true}\n            useInteractiveGroups={useInteractiveGroups}\n            screenReaderContent={announcement}\n          />\n        </Dropdown>\n        {showTokens && (\n          <TokenGroup\n            limit={tokenLimit}\n            items={tokens}\n            onDismiss={handleTokenDismiss}\n            i18nStrings={tokenGroupI18nStrings}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nexport default InternalMultiselect;\n"]},"metadata":{},"sourceType":"module"}