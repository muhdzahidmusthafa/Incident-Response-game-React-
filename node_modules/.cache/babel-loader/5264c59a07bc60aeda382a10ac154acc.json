{"ast":null,"code":"export function setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus) {\n  ace.config.loadModule('ace/ext/language_tools', function () {\n    editor.setOptions({\n      displayIndentGuides: false,\n      enableSnippets: true,\n      enableBasicAutocompletion: true\n    });\n  });\n  editor.setAutoScrollEditorIntoView(true); // To display cursor position in status bar\n\n  editor.session.selection.on('changeCursor', function () {\n    setCursorPosition(editor.getCursorPosition());\n  });\n  editor.session.on('changeAnnotation', function () {\n    var editorAnnotations = editor.session.getAnnotations();\n    var newAnnotations = editorAnnotations.filter(function (a) {\n      return a.type !== 'info';\n    });\n\n    if (editorAnnotations.length !== newAnnotations.length) {\n      editor.session.setAnnotations(newAnnotations);\n    }\n\n    setAnnotations(newAnnotations);\n  });\n  editor.commands.addCommand({\n    name: 'exitCodeEditor',\n    bindKey: 'Esc',\n    exec: function () {\n      editor.container.focus();\n    }\n  });\n  editor.on('focus', function () {\n    editor.textInput.getElement().setAttribute('tabindex', 0);\n  });\n  editor.on('blur', function () {\n    editor.textInput.getElement().setAttribute('tabindex', -1);\n  }); // prevent users to step into editor directly by keyboard\n\n  editor.textInput.getElement().setAttribute('tabindex', -1);\n  editor.commands.removeCommand('showSettingsMenu', false); // Prevent default behavior on error/warning icon click\n\n  editor.on('guttermousedown', function (e) {\n    e.stop();\n  });\n\n  var moveCursorToAnnotation = function (a) {\n    if (typeof a.row === 'number') {\n      editor.gotoLine(a.row + 1, a.column || 0, false);\n    }\n  }; // open error/warning pane when user clicks on gutter icon\n\n\n  editor.on('gutterclick', function (e) {\n    var row = e.getDocumentPosition().row;\n    var currentAnnotations = editor.session.getAnnotations().filter(function (a) {\n      return a.row === row && a.type !== 'info';\n    });\n    var errors = currentAnnotations.filter(function (a) {\n      return a.type === 'error';\n    });\n\n    if (errors.length > 0) {\n      setHighlightedAnnotation(errors[0]);\n      setPaneStatus('error');\n      moveCursorToAnnotation(errors[0]);\n    } else if (currentAnnotations.length > 0) {\n      setHighlightedAnnotation(currentAnnotations[0]);\n      setPaneStatus('warning');\n      moveCursorToAnnotation(currentAnnotations[0]);\n    } else {\n      setHighlightedAnnotation(undefined);\n      setPaneStatus('hidden');\n      editor.gotoLine(row + 1, 0, false);\n    }\n  }); // HACK: Wrapped lines are highlighted individually. This is seriously the recommended fix.\n  // See: https://github.com/ajaxorg/ace/issues/3067\n\n  editor.setHighlightActiveLine(false);\n\n  editor.$updateHighlightActiveLine = function () {\n    var session = this.getSession();\n    var highlight;\n\n    if (this.$highlightActiveLine) {\n      if (this.$selectionStyle !== 'line' || !this.selection.isMultiLine()) {\n        highlight = this.getCursorPosition();\n      }\n\n      if (this.renderer.$maxLines && this.session.getLength() === 1 && !(this.renderer.$minLines > 1)) {\n        highlight = false;\n      }\n    }\n\n    if (session.$highlightLineMarker && !highlight) {\n      session.removeMarker(session.$highlightLineMarker.id);\n      session.$highlightLineMarker = null;\n    } else if (!session.$highlightLineMarker && highlight) {\n      var range = new ace.Range(highlight.row, 0, highlight.row, Infinity);\n      range.id = session.addMarker(range, 'ace_active-line', 'fullLine');\n      session.$highlightLineMarker = range;\n    } else if (highlight) {\n      session.$highlightLineMarker.start.row = highlight.row;\n      session.$highlightLineMarker.end.row = highlight.row;\n      session.$highlightLineMarker.start.column = 0;\n\n      session._signal('changeBackMarker');\n    }\n  };\n\n  editor.setHighlightActiveLine(true); // HACK: Annotations aren't cleared when editor is empty.\n\n  editor.on('change', function () {\n    if (editor.getValue().length === 0) {\n      editor.session.clearAnnotations();\n    }\n  }); // HACK: \"disable\" error tooltips by hiding them as soon as they appear.\n  // See https://github.com/ajaxorg/ace/issues/4004\n\n  editor.on('showGutterTooltip', function (tooltip) {\n    tooltip.hide();\n  });\n}","map":{"version":3,"mappings":"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","names":["setupEditor","ace","editor","setAnnotations","setCursorPosition","setHighlightedAnnotation","setPaneStatus","config","loadModule","setOptions","displayIndentGuides","enableSnippets","enableBasicAutocompletion","setAutoScrollEditorIntoView","session","selection","on","getCursorPosition","editorAnnotations","getAnnotations","newAnnotations","filter","type","length","commands","addCommand","name","bindKey","exec","container","focus","textInput","getElement","setAttribute","removeCommand","e","stop","moveCursorToAnnotation","a","row","gotoLine","column","getDocumentPosition","currentAnnotations","errors","undefined","setHighlightActiveLine","$updateHighlightActiveLine","getSession","highlight","$highlightActiveLine","$selectionStyle","isMultiLine","renderer","$maxLines","getLength","$minLines","$highlightLineMarker","removeMarker","id","range","Range","Infinity","addMarker","start","end","_signal","getValue","clearAnnotations","tooltip","hide"],"sourceRoot":"","sources":["../../../src/code-editor/setup-editor.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { Ace } from 'ace-builds';\nimport { PaneStatus } from './util';\n\nexport function setupEditor(\n  ace: any,\n  editor: Ace.Editor,\n  setAnnotations: React.Dispatch<React.SetStateAction<Ace.Annotation[]>>,\n  setCursorPosition: React.Dispatch<React.SetStateAction<Ace.Point>>,\n  setHighlightedAnnotation: React.Dispatch<React.SetStateAction<Ace.Annotation | undefined>>,\n  setPaneStatus: React.Dispatch<React.SetStateAction<PaneStatus>>\n) {\n  ace.config.loadModule('ace/ext/language_tools', function () {\n    editor.setOptions({\n      displayIndentGuides: false,\n      enableSnippets: true,\n      enableBasicAutocompletion: true,\n    });\n  });\n\n  editor.setAutoScrollEditorIntoView(true);\n\n  // To display cursor position in status bar\n  editor.session.selection.on('changeCursor', () => {\n    setCursorPosition(editor.getCursorPosition());\n  });\n\n  editor.session.on('changeAnnotation' as any, () => {\n    const editorAnnotations = editor.session.getAnnotations();\n    const newAnnotations = editorAnnotations.filter(a => a.type !== 'info');\n    if (editorAnnotations.length !== newAnnotations.length) {\n      editor.session.setAnnotations(newAnnotations);\n    }\n    setAnnotations(newAnnotations);\n  });\n\n  editor.commands.addCommand({\n    name: 'exitCodeEditor',\n    bindKey: 'Esc',\n    exec: () => {\n      editor.container.focus();\n    },\n  });\n\n  editor.on('focus', () => {\n    (editor as any).textInput.getElement().setAttribute('tabindex', 0);\n  });\n\n  editor.on('blur', () => {\n    (editor as any).textInput.getElement().setAttribute('tabindex', -1);\n  });\n\n  // prevent users to step into editor directly by keyboard\n  (editor as any).textInput.getElement().setAttribute('tabindex', -1);\n\n  editor.commands.removeCommand('showSettingsMenu', false);\n\n  // Prevent default behavior on error/warning icon click\n  editor.on('guttermousedown' as any, (e: any) => {\n    e.stop();\n  });\n\n  const moveCursorToAnnotation = (a: Ace.Annotation) => {\n    if (typeof a.row === 'number') {\n      editor.gotoLine(a.row + 1, a.column || 0, false);\n    }\n  };\n\n  // open error/warning pane when user clicks on gutter icon\n  editor.on('gutterclick' as any, (e: any) => {\n    const { row }: Ace.Point = e.getDocumentPosition();\n    const currentAnnotations = editor.session.getAnnotations().filter(a => a.row === row && a.type !== 'info');\n    const errors = currentAnnotations.filter(a => a.type === 'error');\n    if (errors.length > 0) {\n      setHighlightedAnnotation(errors[0]);\n      setPaneStatus('error');\n      moveCursorToAnnotation(errors[0]);\n    } else if (currentAnnotations.length > 0) {\n      setHighlightedAnnotation(currentAnnotations[0]);\n      setPaneStatus('warning');\n      moveCursorToAnnotation(currentAnnotations[0]);\n    } else {\n      setHighlightedAnnotation(undefined);\n      setPaneStatus('hidden');\n      editor.gotoLine(row + 1, 0, false);\n    }\n  });\n\n  // HACK: Wrapped lines are highlighted individually. This is seriously the recommended fix.\n  // See: https://github.com/ajaxorg/ace/issues/3067\n  editor.setHighlightActiveLine(false);\n  (editor as any).$updateHighlightActiveLine = function () {\n    const session = this.getSession();\n\n    let highlight;\n    if (this.$highlightActiveLine) {\n      if (this.$selectionStyle !== 'line' || !this.selection.isMultiLine()) {\n        highlight = this.getCursorPosition();\n      }\n      if (this.renderer.$maxLines && this.session.getLength() === 1 && !(this.renderer.$minLines > 1)) {\n        highlight = false;\n      }\n    }\n\n    if (session.$highlightLineMarker && !highlight) {\n      session.removeMarker(session.$highlightLineMarker.id);\n      session.$highlightLineMarker = null;\n    } else if (!session.$highlightLineMarker && highlight) {\n      const range = new ace.Range(highlight.row, 0, highlight.row, Infinity);\n      (range as any).id = session.addMarker(range, 'ace_active-line', 'fullLine');\n      session.$highlightLineMarker = range;\n    } else if (highlight) {\n      session.$highlightLineMarker.start.row = highlight.row;\n      session.$highlightLineMarker.end.row = highlight.row;\n      session.$highlightLineMarker.start.column = 0;\n      session._signal('changeBackMarker');\n    }\n  };\n\n  editor.setHighlightActiveLine(true);\n\n  // HACK: Annotations aren't cleared when editor is empty.\n  editor.on('change', () => {\n    if (editor.getValue().length === 0) {\n      editor.session.clearAnnotations();\n    }\n  });\n\n  // HACK: \"disable\" error tooltips by hiding them as soon as they appear.\n  // See https://github.com/ajaxorg/ace/issues/4004\n  editor.on('showGutterTooltip' as any, (tooltip: any) => {\n    tooltip.hide();\n  });\n}\n"]},"metadata":{},"sourceType":"module"}