{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport { Flash } from './flash';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport VisualContext from '../internal/components/visual-context';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useReducedMotion, useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { TransitionGroup } from 'react-transition-group';\nimport { Transition } from '../internal/components/transition';\nimport { TIMEOUT_FOR_ENTERING_ANIMATION } from './constant';\nexport default function Flashbar(_a) {\n  var items = _a.items,\n      restProps = __rest(_a, [\"items\"]);\n\n  var __internalRootRef = useBaseComponent('Flashbar').__internalRootRef;\n\n  var _b = useContainerBreakpoints(['xs']),\n      breakpoint = _b[0],\n      ref = _b[1];\n\n  var isRefresh = useVisualRefresh(__internalRootRef);\n  var baseProps = getBaseProps(restProps);\n  var mergedRef = useMergeRefs(ref, __internalRootRef); // All the flash items should have ids so we can identify which DOM element is being removed from the DOM to animate it.\n\n  var motionDisabled = useReducedMotion(ref) || !isRefresh || items && !items.every(function (item) {\n    return 'id' in item;\n  }); // Motion will be disabled if any of the provided flash messages does not contain an `id`\n\n  var renderFlashItem = function (item, index) {\n    var _a;\n\n    return React.createElement(Flash, __assign({\n      key: (_a = item.id) !== null && _a !== void 0 ? _a : index,\n      // eslint-disable-next-line react/forbid-component-props\n      className: clsx(isRefresh ? styles['flash-refresh'] : '')\n    }, item));\n  };\n\n  var renderFlashItemsWithTransitions = function (items) {\n    return React.createElement(React.Fragment, null, React.createElement(TransitionGroup, {\n      component: null\n    }, items && items.map(function (item, index) {\n      var _a;\n\n      return React.createElement(Transition, {\n        transitionChangeDelay: {\n          entering: TIMEOUT_FOR_ENTERING_ANIMATION\n        },\n        key: (_a = item.id) !== null && _a !== void 0 ? _a : index,\n        \"in\": true\n      }, function (state, transitionRootElement) {\n        var _a;\n\n        return React.createElement(Flash, __assign({\n          ref: transitionRootElement,\n          key: (_a = item.id) !== null && _a !== void 0 ? _a : index,\n          transitionState: state,\n          // eslint-disable-next-line react/forbid-component-props\n          className: clsx(isRefresh ? styles['flash-refresh'] : '')\n        }, item));\n      });\n    })));\n  };\n\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.flashbar, styles[\"breakpoint-\".concat(breakpoint)]),\n    ref: mergedRef\n  }), React.createElement(VisualContext, {\n    contextName: \"flashbar\"\n  }, items && React.createElement(React.Fragment, null, motionDisabled ? items.map(function (item, index) {\n    return renderFlashItem(item, index);\n  }) : renderFlashItemsWithTransitions(items))));\n}\napplyDisplayName(Flashbar, 'Flashbar');","map":{"version":3,"mappings":"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","names":["clsx","React","useMergeRefs","getBaseProps","styles","Flash","useContainerBreakpoints","applyDisplayName","VisualContext","useBaseComponent","useReducedMotion","useVisualRefresh","TransitionGroup","Transition","TIMEOUT_FOR_ENTERING_ANIMATION","Flashbar","_a","restProps","__internalRootRef","breakpoint","ref","isRefresh","baseProps","mergedRef","motionDisabled","items","every","item","renderFlashItem","index","__assign","key","id","className","renderFlashItemsWithTransitions","component","map","transitionChangeDelay","entering","state","transitionRootElement","transitionState","flashbar","contextName"],"sourceRoot":"","sources":["../../../src/flashbar/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport { Flash } from './flash';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport VisualContext from '../internal/components/visual-context';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useReducedMotion, useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { FlashbarProps } from './interfaces';\nimport { TransitionGroup } from 'react-transition-group';\nimport { Transition } from '../internal/components/transition';\nimport { TIMEOUT_FOR_ENTERING_ANIMATION } from './constant';\n\nexport { FlashbarProps };\n\nexport default function Flashbar({ items, ...restProps }: FlashbarProps) {\n  const { __internalRootRef } = useBaseComponent('Flashbar');\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const isRefresh = useVisualRefresh(__internalRootRef);\n  const baseProps = getBaseProps(restProps);\n\n  const mergedRef = useMergeRefs(ref, __internalRootRef);\n\n  // All the flash items should have ids so we can identify which DOM element is being removed from the DOM to animate it.\n  const motionDisabled = useReducedMotion(ref as any) || !isRefresh || (items && !items.every(item => 'id' in item));\n  // Motion will be disabled if any of the provided flash messages does not contain an `id`\n\n  const renderFlashItem = (item: FlashbarProps.MessageDefinition, index: number) => (\n    <Flash\n      key={item.id ?? index}\n      // eslint-disable-next-line react/forbid-component-props\n      className={clsx(isRefresh ? styles['flash-refresh'] : '')}\n      {...item}\n    />\n  );\n  const renderFlashItemsWithTransitions = (items: readonly FlashbarProps.MessageDefinition[]) => {\n    return (\n      <>\n        <TransitionGroup component={null}>\n          {items &&\n            items.map((item, index) => (\n              <Transition\n                transitionChangeDelay={{ entering: TIMEOUT_FOR_ENTERING_ANIMATION }}\n                key={item.id ?? index}\n                in={true}\n              >\n                {(state: string, transitionRootElement: React.Ref<HTMLDivElement> | undefined) => (\n                  <Flash\n                    ref={transitionRootElement}\n                    key={item.id ?? index}\n                    transitionState={state}\n                    // eslint-disable-next-line react/forbid-component-props\n                    className={clsx(isRefresh ? styles['flash-refresh'] : '')}\n                    {...item}\n                  />\n                )}\n              </Transition>\n            ))}\n        </TransitionGroup>\n      </>\n    );\n  };\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.flashbar, styles[`breakpoint-${breakpoint}`])}\n      ref={mergedRef}\n    >\n      <VisualContext contextName=\"flashbar\">\n        {items && (\n          <>\n            {motionDisabled\n              ? items.map((item, index) => renderFlashItem(item, index))\n              : renderFlashItemsWithTransitions(items)}\n          </>\n        )}\n      </VisualContext>\n    </div>\n  );\n}\n\napplyDisplayName(Flashbar, 'Flashbar');\n"]},"metadata":{},"sourceType":"module"}