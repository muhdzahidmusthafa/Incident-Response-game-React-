{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport InternalIcon from '../../icon/internal';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../internal/events';\nimport { getEventDetail } from '../internal';\nexport function BreadcrumbItem(_a) {\n  var _b;\n\n  var item = _a.item,\n      onClick = _a.onClick,\n      onFollow = _a.onFollow,\n      _c = _a.isLast,\n      isLast = _c === void 0 ? false : _c,\n      _d = _a.isCompressed,\n      isCompressed = _d === void 0 ? false : _d;\n  var focusVisible = useFocusVisible();\n\n  var preventDefault = function (event) {\n    return event.preventDefault();\n  };\n\n  var onClickHandler = function (event) {\n    if (isPlainLeftClick(event)) {\n      fireCancelableEvent(onFollow, getEventDetail(item), event);\n    }\n\n    fireCancelableEvent(onClick, getEventDetail(item), event);\n  };\n\n  return React.createElement(\"div\", {\n    className: clsx(styles.breadcrumb, isLast && styles.last)\n  }, React.createElement(\"a\", __assign({}, focusVisible, {\n    href: item.href || '#',\n    className: clsx(styles.anchor, (_b = {}, _b[styles.compressed] = isCompressed, _b)),\n    \"aria-current\": isLast ? 'page' : undefined,\n    \"aria-disabled\": isLast && 'true',\n    onClick: isLast ? preventDefault : onClickHandler\n  }), React.createElement(\"span\", {\n    className: styles.text\n  }, item.text)), !isLast ? React.createElement(\"span\", {\n    className: styles.icon\n  }, React.createElement(InternalIcon, {\n    name: \"angle-right\"\n  })) : null);\n}","map":{"version":3,"mappings":"kCAAA;AACA;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,uBAAtD;AACA,SAASC,cAAT,QAA+B,aAA/B;AAEA,OAAM,SAAUC,cAAV,CAA8DC,EAA9D,EAMmB;;;MALvBC,IAAI;MACJC,OAAO;MACPC,QAAQ;MACRC;MAAAC,MAAM,mBAAG,KAAH,GAAQD;MACdE;MAAAC,YAAY,mBAAG,KAAH,GAAQD;EAEpB,IAAME,YAAY,GAAGb,eAAe,EAApC;;EACA,IAAMc,cAAc,GAAG,UAACC,KAAD,EAAwB;IAAK,YAAK,CAACD,cAAN;EAAsB,CAA1E;;EACA,IAAME,cAAc,GAAG,UAACD,KAAD,EAAwB;IAC7C,IAAIb,gBAAgB,CAACa,KAAD,CAApB,EAA6B;MAC3Bd,mBAAmB,CAACO,QAAD,EAAWL,cAAc,CAACG,IAAD,CAAzB,EAAiCS,KAAjC,CAAnB;IACD;;IACDd,mBAAmB,CAACM,OAAD,EAAUJ,cAAc,CAACG,IAAD,CAAxB,EAAgCS,KAAhC,CAAnB;EACD,CALD;;EAMA,OACEnB;IAAKqB,SAAS,EAAElB,IAAI,CAACD,MAAM,CAACoB,UAAR,EAAoBR,MAAM,IAAIZ,MAAM,CAACqB,IAArC;EAApB,GACEvB,sCACMiB,YADN,EACkB;IAChBO,IAAI,EAAEd,IAAI,CAACc,IAAL,IAAa,GADH;IAEhBH,SAAS,EAAElB,IAAI,CAACD,MAAM,CAACuB,MAAR,GAAcC,SAAIA,GAACxB,MAAM,CAACyB,UAAR,IAAqBX,YAAzB,EAAqCU,EAAnD,EAFC;IAEqD,gBACvDZ,MAAM,GAAG,MAAH,GAAYc,SAHhB;IAGyB,iBAC1Bd,MAAM,IAAI,MAJT;IAKhBH,OAAO,EAAEG,MAAM,GAAGI,cAAH,GAAoBE;EALnB,CADlB,GAQEpB;IAAMqB,SAAS,EAAEnB,MAAM,CAAC2B;EAAxB,GAA+BnB,IAAI,CAACmB,IAApC,CARF,CADF,EAWG,CAACf,MAAD,GACCd;IAAMqB,SAAS,EAAEnB,MAAM,CAAC4B;EAAxB,GACE9B,oBAACC,YAAD,EAAa;IAAC8B,IAAI,EAAC;EAAN,CAAb,CADF,CADD,GAIG,IAfN,CADF;AAmBD","names":["React","InternalIcon","styles","clsx","useFocusVisible","fireCancelableEvent","isPlainLeftClick","getEventDetail","BreadcrumbItem","_a","item","onClick","onFollow","_c","isLast","_d","isCompressed","focusVisible","preventDefault","event","onClickHandler","className","breadcrumb","last","href","anchor","_b","compressed","undefined","text","icon","name"],"sourceRoot":"","sources":["../../../../src/breadcrumb-group/item/item.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { BreadcrumbGroupProps, BreadcrumbItemProps } from '../interfaces';\nimport InternalIcon from '../../icon/internal';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../internal/events';\nimport { getEventDetail } from '../internal';\n\nexport function BreadcrumbItem<T extends BreadcrumbGroupProps.Item>({\n  item,\n  onClick,\n  onFollow,\n  isLast = false,\n  isCompressed = false,\n}: BreadcrumbItemProps<T>) {\n  const focusVisible = useFocusVisible();\n  const preventDefault = (event: React.MouseEvent) => event.preventDefault();\n  const onClickHandler = (event: React.MouseEvent) => {\n    if (isPlainLeftClick(event)) {\n      fireCancelableEvent(onFollow, getEventDetail(item), event);\n    }\n    fireCancelableEvent(onClick, getEventDetail(item), event);\n  };\n  return (\n    <div className={clsx(styles.breadcrumb, isLast && styles.last)}>\n      <a\n        {...focusVisible}\n        href={item.href || '#'}\n        className={clsx(styles.anchor, { [styles.compressed]: isCompressed })}\n        aria-current={isLast ? 'page' : undefined} // Active breadcrumb item is implemented according to WAI-ARIA 1.1\n        aria-disabled={isLast && 'true'}\n        onClick={isLast ? preventDefault : onClickHandler}\n      >\n        <span className={styles.text}>{item.text}</span>\n      </a>\n      {!isLast ? (\n        <span className={styles.icon}>\n          <InternalIcon name=\"angle-right\" />\n        </span>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}