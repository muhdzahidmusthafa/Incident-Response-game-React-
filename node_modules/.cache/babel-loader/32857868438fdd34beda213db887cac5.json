{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport default function RadioButton(_a) {\n  var _b, _c;\n\n  var name = _a.name,\n      label = _a.label,\n      value = _a.value,\n      checked = _a.checked,\n      withoutLabel = _a.withoutLabel,\n      description = _a.description,\n      disabled = _a.disabled,\n      controlId = _a.controlId,\n      onChange = _a.onChange;\n  var radioRef = useRef(null);\n  var isVisualRefresh = useVisualRefresh(radioRef);\n  return React.createElement(AbstractSwitch, {\n    className: clsx(styles.radio, description && styles['radio--has-description']),\n    controlClassName: styles['radio-control'],\n    label: label,\n    description: description,\n    disabled: disabled,\n    controlId: controlId,\n    nativeControl: function (nativeControlProps) {\n      return React.createElement(\"input\", __assign({}, nativeControlProps, {\n        className: styles.input,\n        type: \"radio\",\n        name: name,\n        value: value,\n        checked: checked,\n        onChange: onChange && function () {\n          return fireNonCancelableEvent(onChange, {\n            value: value\n          });\n        }\n      }));\n    },\n    styledControl: React.createElement(\"svg\", {\n      viewBox: \"0 0 100 100\",\n      focusable: \"false\",\n      \"aria-hidden\": \"true\",\n      ref: radioRef\n    }, React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-border'], (_b = {}, _b[styles['styled-circle-disabled']] = disabled, _b)),\n      strokeWidth: isVisualRefresh ? 12 : 8,\n      cx: 50,\n      cy: 50,\n      r: isVisualRefresh ? 44 : 46\n    }), React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-fill'], (_c = {}, _c[styles['styled-circle-disabled']] = disabled, _c[styles['styled-circle-checked']] = checked, _c)),\n      strokeWidth: 30,\n      cx: 50,\n      cy: 50,\n      r: 35\n    })),\n    withoutLabel: withoutLabel\n  });\n}","map":{"version":3,"mappings":"kCAAA;AACA;;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,sBAAT,QAAkE,oBAAlE;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AASA,eAAc,SAAUC,WAAV,CAAsBC,EAAtB,EAUK;;;MATjBC,IAAI;MACJC,KAAK;MACLC,KAAK;MACLC,OAAO;MACPC,YAAY;MACZC,WAAW;MACXC,QAAQ;MACRC,SAAS;MACTC,QAAQ;EAER,IAAMC,QAAQ,GAAGhB,MAAM,CAAC,IAAD,CAAvB;EACA,IAAMiB,eAAe,GAAGd,gBAAgB,CAACa,QAAD,CAAxC;EACA,OACEjB,oBAACE,cAAD,EAAe;IACbiB,SAAS,EAAEpB,IAAI,CAACM,MAAM,CAACe,KAAR,EAAeP,WAAW,IAAIR,MAAM,CAAC,wBAAD,CAApC,CADF;IAEbgB,gBAAgB,EAAEhB,MAAM,CAAC,eAAD,CAFX;IAGbI,KAAK,EAAEA,KAHM;IAIbI,WAAW,EAAEA,WAJA;IAKbC,QAAQ,EAAEA,QALG;IAMbC,SAAS,EAAEA,SANE;IAObO,aAAa,EAAE,8BAAkB;MAAI,OACnCtB,0CACMuB,kBADN,EACwB;QACtBJ,SAAS,EAAEd,MAAM,CAACmB,KADI;QAEtBC,IAAI,EAAC,OAFiB;QAGtBjB,IAAI,EAAEA,IAHgB;QAItBE,KAAK,EAAEA,KAJe;QAKtBC,OAAO,EAAEA,OALa;QAMtBK,QAAQ,EAAEA,QAAQ,IAAK;UAAM,6BAAsB,CAACA,QAAD,EAAW;YAAEN,KAAK;UAAP,CAAX,CAAtB;QAA2C;MANlD,CADxB,EADmC;IAUpC,CAjBY;IAkBbgB,aAAa,EACX1B;MAAK2B,OAAO,EAAC,aAAb;MAA2BC,SAAS,EAAC,OAArC;MAA4C,eAAa,MAAzD;MAAgEC,GAAG,EAAEZ;IAArE,GACEjB;MACEmB,SAAS,EAAEpB,IAAI,CAACM,MAAM,CAAC,sBAAD,CAAP,GAA+ByB,SAAIA,GAACzB,MAAM,CAAC,wBAAD,CAAP,IAAoCS,QAAxC,EAAgDgB,EAA/E,EADjB;MAEEC,WAAW,EAAEb,eAAe,GAAG,EAAH,GAAQ,CAFtC;MAGEc,EAAE,EAAE,EAHN;MAIEC,EAAE,EAAE,EAJN;MAKEC,CAAC,EAAEhB,eAAe,GAAG,EAAH,GAAQ;IAL5B,EADF,EAQElB;MACEmB,SAAS,EAAEpB,IAAI,CAACM,MAAM,CAAC,oBAAD,CAAP,GAA6B8B,SAC1CA,GAAC9B,MAAM,CAAC,wBAAD,CAAP,IAAoCS,QADM,EAE1CqB,GAAC9B,MAAM,CAAC,uBAAD,CAAP,IAAmCM,OAFO,IAA7B,EADjB;MAKEoB,WAAW,EAAE,EALf;MAMEC,EAAE,EAAE,EANN;MAOEC,EAAE,EAAE,EAPN;MAQEC,CAAC,EAAE;IARL,EARF,CAnBW;IAuCbtB,YAAY,EAAEA;EAvCD,CAAf,CADF;AA2CD","names":["clsx","React","useRef","AbstractSwitch","fireNonCancelableEvent","useVisualRefresh","styles","RadioButton","_a","name","label","value","checked","withoutLabel","description","disabled","controlId","onChange","radioRef","isVisualRefresh","className","radio","controlClassName","nativeControl","nativeControlProps","input","type","styledControl","viewBox","focusable","ref","_b","strokeWidth","cx","cy","r","_c"],"sourceRoot":"","sources":["../../../src/radio-group/radio-button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { RadioGroupProps } from './interfaces';\nimport styles from './styles.css.js';\n\ninterface RadioButtonProps extends RadioGroupProps.RadioButtonDefinition {\n  name: string;\n  checked: boolean;\n  withoutLabel?: boolean;\n  onChange?: NonCancelableEventHandler<RadioGroupProps.ChangeDetail>;\n}\n\nexport default function RadioButton({\n  name,\n  label,\n  value,\n  checked,\n  withoutLabel,\n  description,\n  disabled,\n  controlId,\n  onChange,\n}: RadioButtonProps) {\n  const radioRef = useRef(null);\n  const isVisualRefresh = useVisualRefresh(radioRef);\n  return (\n    <AbstractSwitch\n      className={clsx(styles.radio, description && styles['radio--has-description'])}\n      controlClassName={styles['radio-control']}\n      label={label}\n      description={description}\n      disabled={disabled}\n      controlId={controlId}\n      nativeControl={nativeControlProps => (\n        <input\n          {...nativeControlProps}\n          className={styles.input}\n          type=\"radio\"\n          name={name}\n          value={value}\n          checked={checked}\n          onChange={onChange && (() => fireNonCancelableEvent(onChange, { value }))}\n        />\n      )}\n      styledControl={\n        <svg viewBox=\"0 0 100 100\" focusable=\"false\" aria-hidden=\"true\" ref={radioRef}>\n          <circle\n            className={clsx(styles['styled-circle-border'], { [styles['styled-circle-disabled']]: disabled })}\n            strokeWidth={isVisualRefresh ? 12 : 8}\n            cx={50}\n            cy={50}\n            r={isVisualRefresh ? 44 : 46}\n          />\n          <circle\n            className={clsx(styles['styled-circle-fill'], {\n              [styles['styled-circle-disabled']]: disabled,\n              [styles['styled-circle-checked']]: checked,\n            })}\n            strokeWidth={30}\n            cx={50}\n            cy={50}\n            r={35}\n          />\n        </svg>\n      }\n      withoutLabel={withoutLabel}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}