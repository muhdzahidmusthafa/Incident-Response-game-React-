{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalForm from '../form/internal';\nimport InternalHeader from '../header/internal';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport WizardActions from './wizard-actions';\nimport WizardFormHeader from './wizard-form-header';\nimport styles from './styles.css.js';\nexport default function WizardForm(_a) {\n  var steps = _a.steps,\n      activeStepIndex = _a.activeStepIndex,\n      isVisualRefresh = _a.isVisualRefresh,\n      showCollapsedSteps = _a.showCollapsedSteps,\n      i18nStrings = _a.i18nStrings,\n      isPrimaryLoading = _a.isPrimaryLoading,\n      allowSkipTo = _a.allowSkipTo,\n      secondaryActions = _a.secondaryActions,\n      onCancelClick = _a.onCancelClick,\n      onPreviousClick = _a.onPreviousClick,\n      onPrimaryClick = _a.onPrimaryClick,\n      onSkipToClick = _a.onSkipToClick;\n\n  var _b = steps[activeStepIndex] || {},\n      title = _b.title,\n      info = _b.info,\n      description = _b.description,\n      content = _b.content,\n      errorText = _b.errorText,\n      isOptional = _b.isOptional;\n\n  var isLastStep = activeStepIndex >= steps.length - 1;\n  var skipToTargetIndex = findSkipToTargetIndex(steps, activeStepIndex);\n  var isMobile = useMobile();\n  var showSkipTo = allowSkipTo && skipToTargetIndex !== -1;\n  var skipToButtonText = skipToTargetIndex !== -1 && i18nStrings.skipToButtonLabel ? i18nStrings.skipToButtonLabel(steps[skipToTargetIndex], skipToTargetIndex + 1) : undefined;\n  return React.createElement(React.Fragment, null, React.createElement(WizardFormHeader, {\n    isMobile: isMobile || showCollapsedSteps,\n    isVisualRefresh: isVisualRefresh\n  }, React.createElement(\"div\", {\n    className: clsx(styles['collapsed-steps'], !showCollapsedSteps && styles['collapsed-steps-hidden'], isVisualRefresh && isMobile && styles['collapsed-steps-extra-padding'])\n  }, i18nStrings.collapsedStepsLabel(activeStepIndex + 1, steps.length)), React.createElement(InternalHeader, {\n    className: styles['form-header-component'],\n    variant: \"h1\",\n    description: description,\n    info: info\n  }, title, isOptional && React.createElement(\"i\", null, \" - \".concat(i18nStrings.optional)))), React.createElement(InternalForm, {\n    className: clsx(styles['form-component']),\n    actions: React.createElement(WizardActions, {\n      cancelButtonText: i18nStrings.cancelButton,\n      primaryButtonText: isLastStep ? i18nStrings.submitButton : i18nStrings.nextButton,\n      previousButtonText: i18nStrings.previousButton,\n      onCancelClick: onCancelClick,\n      onPreviousClick: onPreviousClick,\n      onPrimaryClick: onPrimaryClick,\n      onSkipToClick: function () {\n        return onSkipToClick(skipToTargetIndex);\n      },\n      showPrevious: activeStepIndex !== 0,\n      isPrimaryLoading: isPrimaryLoading,\n      showSkipTo: showSkipTo,\n      skipToButtonText: skipToButtonText\n    }),\n    secondaryActions: secondaryActions,\n    errorText: errorText\n  }, content));\n}\n\nfunction findSkipToTargetIndex(steps, activeStepIndex) {\n  var nextRequiredStepIndex = activeStepIndex;\n\n  do {\n    nextRequiredStepIndex++;\n  } while (nextRequiredStepIndex < steps.length - 1 && steps[nextRequiredStepIndex].isOptional);\n\n  return nextRequiredStepIndex > activeStepIndex + 1 ? nextRequiredStepIndex : -1;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAiBA,eAAc,SAAUC,UAAV,CAAqBC,EAArB,EAaI;MAZhBC,KAAK;MACLC,eAAe;MACfC,eAAe;MACfC,kBAAkB;MAClBC,WAAW;MACXC,gBAAgB;MAChBC,WAAW;MACXC,gBAAgB;MAChBC,aAAa;MACbC,eAAe;MACfC,cAAc;MACdC,aAAa;;EAEP,SAA+DX,KAAK,CAACC,eAAD,CAAL,IAA0B,EAAzF;EAAA,IAAEW,KAAK,WAAP;EAAA,IAASC,IAAI,UAAb;EAAA,IAAeC,WAAW,iBAA1B;EAAA,IAA4BC,OAAO,aAAnC;EAAA,IAAqCC,SAAS,eAA9C;EAAA,IAAgDC,UAAU,gBAA1D;;EACN,IAAMC,UAAU,GAAGjB,eAAe,IAAID,KAAK,CAACmB,MAAN,GAAe,CAArD;EACA,IAAMC,iBAAiB,GAAGC,qBAAqB,CAACrB,KAAD,EAAQC,eAAR,CAA/C;EACA,IAAMqB,QAAQ,GAAG5B,SAAS,EAA1B;EAEA,IAAM6B,UAAU,GAAGjB,WAAW,IAAIc,iBAAiB,KAAK,CAAC,CAAzD;EACA,IAAMI,gBAAgB,GACpBJ,iBAAiB,KAAK,CAAC,CAAvB,IAA4BhB,WAAW,CAACqB,iBAAxC,GACIrB,WAAW,CAACqB,iBAAZ,CAA8BzB,KAAK,CAACoB,iBAAD,CAAnC,EAAwDA,iBAAiB,GAAG,CAA5E,CADJ,GAEIM,SAHN;EAKA,OACEpC,0CACEA,oBAACM,gBAAD,EAAiB;IAAC0B,QAAQ,EAAEA,QAAQ,IAAInB,kBAAvB;IAA2CD,eAAe,EAAEA;EAA5D,CAAjB,EACEZ;IACEqC,SAAS,EAAEpC,IAAI,CACbM,MAAM,CAAC,iBAAD,CADO,EAEb,CAACM,kBAAD,IAAuBN,MAAM,CAAC,wBAAD,CAFhB,EAGbK,eAAe,IAAIoB,QAAnB,IAA+BzB,MAAM,CAAC,+BAAD,CAHxB;EADjB,GAOGO,WAAW,CAACwB,mBAAZ,CAAgC3B,eAAe,GAAG,CAAlD,EAAqDD,KAAK,CAACmB,MAA3D,CAPH,CADF,EAUE7B,oBAACG,cAAD,EAAe;IAACkC,SAAS,EAAE9B,MAAM,CAAC,uBAAD,CAAlB;IAA6CgC,OAAO,EAAC,IAArD;IAA0Df,WAAW,EAAEA,WAAvE;IAAoFD,IAAI,EAAEA;EAA1F,CAAf,EACGD,KADH,EAEGK,UAAU,IAAI3B,+BAAI,aAAMc,WAAW,CAAC0B,QAAlB,CAAJ,CAFjB,CAVF,CADF,EAgBExC,oBAACE,YAAD,EAAa;IACXmC,SAAS,EAAEpC,IAAI,CAACM,MAAM,CAAC,gBAAD,CAAP,CADJ;IAEXkC,OAAO,EACLzC,oBAACK,aAAD,EAAc;MACZqC,gBAAgB,EAAE5B,WAAW,CAAC6B,YADlB;MAEZC,iBAAiB,EAAEhB,UAAU,GAAGd,WAAW,CAAC+B,YAAf,GAA8B/B,WAAW,CAACgC,UAF3D;MAGZC,kBAAkB,EAAEjC,WAAW,CAACkC,cAHpB;MAIZ9B,aAAa,EAAEA,aAJH;MAKZC,eAAe,EAAEA,eALL;MAMZC,cAAc,EAAEA,cANJ;MAOZC,aAAa,EAAE;QAAM,oBAAa,CAACS,iBAAD,CAAb;MAAgC,CAPzC;MAQZmB,YAAY,EAAEtC,eAAe,KAAK,CARtB;MASZI,gBAAgB,EAAEA,gBATN;MAUZkB,UAAU,EAAEA,UAVA;MAWZC,gBAAgB,EAAEA;IAXN,CAAd,CAHS;IAiBXjB,gBAAgB,EAAEA,gBAjBP;IAkBXS,SAAS,EAAEA;EAlBA,CAAb,EAoBGD,OApBH,CAhBF,CADF;AAyCD;;AAED,SAASM,qBAAT,CAA+BrB,KAA/B,EAAuEC,eAAvE,EAA8F;EAC5F,IAAIuC,qBAAqB,GAAGvC,eAA5B;;EACA,GAAG;IACDuC,qBAAqB;EACtB,CAFD,QAESA,qBAAqB,GAAGxC,KAAK,CAACmB,MAAN,GAAe,CAAvC,IAA4CnB,KAAK,CAACwC,qBAAD,CAAL,CAA6BvB,UAFlF;;EAIA,OAAOuB,qBAAqB,GAAGvC,eAAe,GAAG,CAA1C,GAA8CuC,qBAA9C,GAAsE,CAAC,CAA9E;AACD","names":["React","clsx","InternalForm","InternalHeader","useMobile","WizardActions","WizardFormHeader","styles","WizardForm","_a","steps","activeStepIndex","isVisualRefresh","showCollapsedSteps","i18nStrings","isPrimaryLoading","allowSkipTo","secondaryActions","onCancelClick","onPreviousClick","onPrimaryClick","onSkipToClick","title","info","description","content","errorText","isOptional","isLastStep","length","skipToTargetIndex","findSkipToTargetIndex","isMobile","showSkipTo","skipToButtonText","skipToButtonLabel","undefined","className","collapsedStepsLabel","variant","optional","actions","cancelButtonText","cancelButton","primaryButtonText","submitButton","nextButton","previousButtonText","previousButton","showPrevious","nextRequiredStepIndex"],"sourceRoot":"","sources":["../../../src/wizard/wizard-form.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalForm from '../form/internal';\nimport InternalHeader from '../header/internal';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport WizardActions from './wizard-actions';\nimport { WizardProps } from './interfaces';\nimport WizardFormHeader from './wizard-form-header';\nimport styles from './styles.css.js';\n\ninterface WizardFormProps {\n  steps: ReadonlyArray<WizardProps.Step>;\n  activeStepIndex: number;\n  isVisualRefresh: boolean;\n  showCollapsedSteps: boolean;\n  i18nStrings: WizardProps.I18nStrings;\n  isPrimaryLoading: boolean;\n  allowSkipTo: boolean;\n  secondaryActions?: React.ReactNode;\n  onCancelClick: () => void;\n  onPreviousClick: () => void;\n  onPrimaryClick: () => void;\n  onSkipToClick: (stepIndex: number) => void;\n}\n\nexport default function WizardForm({\n  steps,\n  activeStepIndex,\n  isVisualRefresh,\n  showCollapsedSteps,\n  i18nStrings,\n  isPrimaryLoading,\n  allowSkipTo,\n  secondaryActions,\n  onCancelClick,\n  onPreviousClick,\n  onPrimaryClick,\n  onSkipToClick,\n}: WizardFormProps) {\n  const { title, info, description, content, errorText, isOptional } = steps[activeStepIndex] || {};\n  const isLastStep = activeStepIndex >= steps.length - 1;\n  const skipToTargetIndex = findSkipToTargetIndex(steps, activeStepIndex);\n  const isMobile = useMobile();\n\n  const showSkipTo = allowSkipTo && skipToTargetIndex !== -1;\n  const skipToButtonText =\n    skipToTargetIndex !== -1 && i18nStrings.skipToButtonLabel\n      ? i18nStrings.skipToButtonLabel(steps[skipToTargetIndex], skipToTargetIndex + 1)\n      : undefined;\n\n  return (\n    <>\n      <WizardFormHeader isMobile={isMobile || showCollapsedSteps} isVisualRefresh={isVisualRefresh}>\n        <div\n          className={clsx(\n            styles['collapsed-steps'],\n            !showCollapsedSteps && styles['collapsed-steps-hidden'],\n            isVisualRefresh && isMobile && styles['collapsed-steps-extra-padding']\n          )}\n        >\n          {i18nStrings.collapsedStepsLabel(activeStepIndex + 1, steps.length)}\n        </div>\n        <InternalHeader className={styles['form-header-component']} variant=\"h1\" description={description} info={info}>\n          {title}\n          {isOptional && <i>{` - ${i18nStrings.optional}`}</i>}\n        </InternalHeader>\n      </WizardFormHeader>\n      <InternalForm\n        className={clsx(styles['form-component'])}\n        actions={\n          <WizardActions\n            cancelButtonText={i18nStrings.cancelButton}\n            primaryButtonText={isLastStep ? i18nStrings.submitButton : i18nStrings.nextButton}\n            previousButtonText={i18nStrings.previousButton}\n            onCancelClick={onCancelClick}\n            onPreviousClick={onPreviousClick}\n            onPrimaryClick={onPrimaryClick}\n            onSkipToClick={() => onSkipToClick(skipToTargetIndex)}\n            showPrevious={activeStepIndex !== 0}\n            isPrimaryLoading={isPrimaryLoading}\n            showSkipTo={showSkipTo}\n            skipToButtonText={skipToButtonText}\n          />\n        }\n        secondaryActions={secondaryActions}\n        errorText={errorText}\n      >\n        {content}\n      </InternalForm>\n    </>\n  );\n}\n\nfunction findSkipToTargetIndex(steps: ReadonlyArray<WizardProps.Step>, activeStepIndex: number): number {\n  let nextRequiredStepIndex = activeStepIndex;\n  do {\n    nextRequiredStepIndex++;\n  } while (nextRequiredStepIndex < steps.length - 1 && steps[nextRequiredStepIndex].isOptional);\n\n  return nextRequiredStepIndex > activeStepIndex + 1 ? nextRequiredStepIndex : -1;\n}\n"]},"metadata":{},"sourceType":"module"}