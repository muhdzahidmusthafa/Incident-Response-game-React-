{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\n/**\n * The CSS class 'awsui-context-content-header' needs to be added to the root element so\n * that the design tokens used are overridden with the appropriate values.\n */\n\nexport default function Notifications() {\n  var _a;\n\n  var _b;\n\n  var _c = useContext(AppLayoutContext),\n      ariaLabels = _c.ariaLabels,\n      hasNotificationsContent = _c.hasNotificationsContent,\n      notifications = _c.notifications,\n      notificationsElement = _c.notificationsElement,\n      stickyNotifications = _c.stickyNotifications;\n\n  if (!notifications) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    \"aria-label\": (_b = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.notifications) !== null && _b !== void 0 ? _b : undefined,\n    className: clsx(styles.notifications, (_a = {}, _a[styles['has-notifications-content']] = hasNotificationsContent, _a[styles['sticky-notifications']] = stickyNotifications, _a), testutilStyles.notifications, 'awsui-context-content-header'),\n    role: \"region\",\n    ref: notificationsElement\n  }, notifications);\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA;;;;;AAIA,eAAc,SAAUC,aAAV,GAAuB;;;;;EAC7B,SACJL,UAAU,CAACE,gBAAD,CADN;EAAA,IAAEI,UAAU,gBAAZ;EAAA,IAAcC,uBAAuB,6BAArC;EAAA,IAAuCC,aAAa,mBAApD;EAAA,IAAsDC,oBAAoB,0BAA1E;EAAA,IAA4EC,mBAAmB,yBAA/F;;EAGN,IAAI,CAACF,aAAL,EAAoB;IAClB,OAAO,IAAP;EACD;;EAED,OACET;IAAA,cACc,gBAAU,SAAV,cAAU,WAAV,GAAU,MAAV,aAAU,CAAES,aAAZ,MAAyB,IAAzB,IAAyBG,aAAzB,GAAyBA,EAAzB,GAA6BC,SAD3C;IAEEC,SAAS,EAAEZ,IAAI,CACbE,MAAM,CAACK,aADM,GACOM,SAElBA,GAACX,MAAM,CAAC,2BAAD,CAAP,IAAuCI,uBAFrB,EAGlBO,GAACX,MAAM,CAAC,sBAAD,CAAP,IAAkCO,mBAHhB,IADP,GAMbN,cAAc,CAACI,aANF,EAOb,8BAPa,CAFjB;IAWEO,IAAI,EAAC,QAXP;IAYEC,GAAG,EAAEP;EAZP,GAcGD,aAdH,CADF;AAkBD","names":["React","useContext","clsx","AppLayoutContext","styles","testutilStyles","Notifications","ariaLabels","hasNotificationsContent","notifications","notificationsElement","stickyNotifications","_b","undefined","className","_a","role","ref"],"sourceRoot":"","sources":["../../../../src/app-layout/visual-refresh/notifications.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\n\n/**\n * The CSS class 'awsui-context-content-header' needs to be added to the root element so\n * that the design tokens used are overridden with the appropriate values.\n */\nexport default function Notifications() {\n  const { ariaLabels, hasNotificationsContent, notifications, notificationsElement, stickyNotifications } =\n    useContext(AppLayoutContext);\n\n  if (!notifications) {\n    return null;\n  }\n\n  return (\n    <div\n      aria-label={ariaLabels?.notifications ?? undefined}\n      className={clsx(\n        styles.notifications,\n        {\n          [styles['has-notifications-content']]: hasNotificationsContent,\n          [styles['sticky-notifications']]: stickyNotifications,\n        },\n        testutilStyles.notifications,\n        'awsui-context-content-header'\n      )}\n      role=\"region\"\n      ref={notificationsElement}\n    >\n      {notifications}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}