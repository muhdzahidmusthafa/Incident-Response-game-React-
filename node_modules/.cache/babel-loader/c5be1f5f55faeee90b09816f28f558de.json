{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { isLinkItem } from '../utils/utils';\nimport styles from './styles.css.js';\nimport Tooltip from '../tooltip';\nimport { getItemTarget } from '../utils/utils';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport InternalIcon from '../../icon/internal';\nimport { useDropdownContext } from '../../internal/components/dropdown/context';\nimport { getMenuItemProps } from '../utils/menu-item';\n\nvar ItemElement = function (_a) {\n  var _b;\n\n  var item = _a.item,\n      disabled = _a.disabled,\n      onItemActivate = _a.onItemActivate,\n      highlighted = _a.highlighted,\n      highlightItem = _a.highlightItem,\n      _c = _a.first,\n      first = _c === void 0 ? false : _c,\n      last = _a.last,\n      hasCategoryHeader = _a.hasCategoryHeader,\n      _d = _a.variant,\n      variant = _d === void 0 ? 'normal' : _d;\n  var isLink = isLinkItem(item);\n\n  var onClick = function (event) {\n    // Stop propagation to parent node and handle event exclusively in here. This ensures\n    // that no group will interfere with the default behavior of links\n    event.stopPropagation();\n\n    if (!isLink) {\n      event.preventDefault();\n    }\n\n    if (!disabled) {\n      onItemActivate(item, event);\n    }\n  };\n\n  var onHover = function (event) {\n    event.preventDefault();\n    highlightItem(item);\n  };\n\n  return React.createElement(\"li\", {\n    className: clsx(styles['item-element'], styles[\"variant-\".concat(variant)], (_b = {}, _b[styles.highlighted] = highlighted, _b[styles.disabled] = disabled, _b[styles.first] = first, _b[styles.last] = last, _b[styles['has-category-header']] = hasCategoryHeader, _b)),\n    role: \"presentation\",\n    \"data-testid\": item.id,\n    \"data-description\": item.description,\n    onClick: onClick,\n    onMouseEnter: onHover,\n    onTouchStart: onHover\n  }, React.createElement(MenuItem, {\n    item: item,\n    disabled: disabled,\n    highlighted: highlighted\n  }));\n};\n\nfunction MenuItem(_a) {\n  var item = _a.item,\n      disabled = _a.disabled,\n      highlighted = _a.highlighted;\n  var menuItemRef = useRef(null);\n  useEffect(function () {\n    if (highlighted && menuItemRef.current) {\n      menuItemRef.current.focus();\n    }\n  }, [highlighted]);\n  var isDisabledWithReason = disabled && item.disabledReason;\n\n  var _b = useHiddenDescription(item.disabledReason),\n      targetProps = _b.targetProps,\n      descriptionEl = _b.descriptionEl;\n\n  var menuItemProps = __assign(__assign({\n    className: styles['menu-item'],\n    ref: menuItemRef,\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1\n  }, getMenuItemProps({\n    disabled: disabled\n  })), isDisabledWithReason ? targetProps : {});\n\n  var menuItem = isLinkItem(item) ? React.createElement(\"a\", __assign({}, menuItemProps, {\n    href: !disabled ? item.href : undefined,\n    target: getItemTarget(item),\n    rel: item.external ? 'noopener noreferrer' : undefined\n  }), React.createElement(MenuItemContent, {\n    item: item,\n    disabled: disabled\n  })) : React.createElement(\"span\", __assign({}, menuItemProps), React.createElement(MenuItemContent, {\n    item: item,\n    disabled: disabled\n  }));\n  var position = useDropdownContext().position;\n  var tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';\n  return isDisabledWithReason ? React.createElement(Tooltip, {\n    content: item.disabledReason,\n    position: tooltipPosition\n  }, menuItem, descriptionEl) : menuItem;\n}\n\nvar MenuItemContent = function (_a) {\n  var item = _a.item,\n      disabled = _a.disabled;\n  var hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);\n  var hasExternal = isLinkItem(item) && item.external;\n  return React.createElement(React.Fragment, null, hasIcon && React.createElement(MenuItemIcon, {\n    name: item.iconName,\n    url: item.iconUrl,\n    svg: item.iconSvg,\n    alt: item.iconAlt\n  }), ' ', item.text, \" \", hasExternal && React.createElement(ExternalIcon, {\n    disabled: disabled,\n    ariaLabel: item.externalIconAriaLabel\n  }));\n};\n\nvar MenuItemIcon = function (props) {\n  return React.createElement(\"span\", {\n    className: styles.icon\n  }, React.createElement(InternalIcon, __assign({}, props)));\n};\n\nvar ExternalIcon = function (_a) {\n  var disabled = _a.disabled,\n      ariaLabel = _a.ariaLabel;\n  var icon = React.createElement(InternalIcon, {\n    variant: disabled ? 'disabled' : 'normal',\n    name: \"external\"\n  });\n  return React.createElement(\"span\", {\n    className: styles['external-icon'],\n    role: ariaLabel ? 'img' : undefined,\n    \"aria-label\": ariaLabel\n  }, icon);\n};\n\nexport default ItemElement;","map":{"version":3,"mappings":"kCAAA;AACA;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAGA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AACA,OAAOC,YAAP,MAAgD,qBAAhD;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,IAAMC,WAAW,GAAG,UAACC,EAAD,EAUR;;;MATVC,IAAI;MACJC,QAAQ;MACRC,cAAc;MACdC,WAAW;MACXC,aAAa;MACbC;MAAAC,KAAK,mBAAG,KAAH,GAAQD;MACbE,IAAI;MACJC,iBAAiB;MACjBC;MAAAC,OAAO,mBAAG,QAAH,GAAWD;EAElB,IAAME,MAAM,GAAGrB,UAAU,CAACU,IAAD,CAAzB;;EACA,IAAMY,OAAO,GAAG,UAACC,KAAD,EAAwB;IACtC;IACA;IACAA,KAAK,CAACC,eAAN;;IACA,IAAI,CAACH,MAAL,EAAa;MACXE,KAAK,CAACE,cAAN;IACD;;IACD,IAAI,CAACd,QAAL,EAAe;MACbC,cAAc,CAACF,IAAD,EAAOa,KAAP,CAAd;IACD;EACF,CAVD;;EAYA,IAAMG,OAAO,GAAG,UAACH,KAAD,EAA4B;IAC1CA,KAAK,CAACE,cAAN;IACAX,aAAa,CAACJ,IAAD,CAAb;EACD,CAHD;;EAKA,OACEd;IACE+B,SAAS,EAAE5B,IAAI,CAACE,MAAM,CAAC,cAAD,CAAP,EAAyBA,MAAM,CAAC,kBAAWmB,OAAX,CAAD,CAA/B,GAAqDQ,SAClEA,GAAC3B,MAAM,CAACY,WAAR,IAAsBA,WAD4C,EAElEe,GAAC3B,MAAM,CAACU,QAAR,IAAmBA,QAF+C,EAGlEiB,GAAC3B,MAAM,CAACe,KAAR,IAAgBA,KAHkD,EAIlEY,GAAC3B,MAAM,CAACgB,IAAR,IAAeA,IAJmD,EAKlEW,GAAC3B,MAAM,CAAC,qBAAD,CAAP,IAAiCiB,iBALiC,IAArD,EADjB;IAQEW,IAAI,EAAC,cARP;IAQqB,eACNnB,IAAI,CAACoB,EATpB;IASsB,oBACFpB,IAAI,CAACqB,WAVzB;IAWET,OAAO,EAAEA,OAXX;IAYEU,YAAY,EAAEN,OAZhB;IAaEO,YAAY,EAAEP;EAbhB,GAeE9B,oBAACsC,QAAD,EAAS;IAACxB,IAAI,EAAEA,IAAP;IAAaC,QAAQ,EAAEA,QAAvB;IAAiCE,WAAW,EAAEA;EAA9C,CAAT,CAfF,CADF;AAmBD,CAhDD;;AAwDA,SAASqB,QAAT,CAAkBzB,EAAlB,EAAgE;MAA5CC,IAAI;MAAEC,QAAQ;MAAEE,WAAW;EAC7C,IAAMsB,WAAW,GAAGrC,MAAM,CAAsC,IAAtC,CAA1B;EAEAD,SAAS,CAAC;IACR,IAAIgB,WAAW,IAAIsB,WAAW,CAACC,OAA/B,EAAwC;MACtCD,WAAW,CAACC,OAAZ,CAAoBC,KAApB;IACD;EACF,CAJQ,EAIN,CAACxB,WAAD,CAJM,CAAT;EAMA,IAAMyB,oBAAoB,GAAG3B,QAAQ,IAAID,IAAI,CAAC6B,cAA9C;;EACM,SAAiCnC,oBAAoB,CAACM,IAAI,CAAC6B,cAAN,CAArD;EAAA,IAAEC,WAAW,iBAAb;EAAA,IAAeC,aAAa,mBAA5B;;EACN,IAAMC,aAAa;IACjBf,SAAS,EAAE1B,MAAM,CAAC,WAAD,CADA;IAEjB0C,GAAG,EAAER,WAFY;IAGjB;IACA;IACA;IACAS,QAAQ,EAAE/B,WAAW,GAAG,CAAH,GAAO,CAAC;EANZ,GAOdN,gBAAgB,CAAC;IAAEI,QAAQ;EAAV,CAAD,CAPF,GAQb2B,oBAAoB,GAAGE,WAAH,GAAiB,EARxB,CAAnB;;EAUA,IAAMK,QAAQ,GAAG7C,UAAU,CAACU,IAAD,CAAV,GACfd,sCACO8C,aADP,EAC2D;IACzDI,IAAI,EAAE,CAACnC,QAAD,GAAYD,IAAI,CAACoC,IAAjB,GAAwBC,SAD2B;IAEzDC,MAAM,EAAE7C,aAAa,CAACO,IAAD,CAFoC;IAGzDuC,GAAG,EAAEvC,IAAI,CAACwC,QAAL,GAAgB,qBAAhB,GAAwCH;EAHY,CAD3D,GAMEnD,oBAACuD,eAAD,EAAgB;IAACzC,IAAI,EAAEA,IAAP;IAAaC,QAAQ,EAAEA;EAAvB,CAAhB,CANF,CADe,GAUff,yCAAU8C,aAAV,GACE9C,oBAACuD,eAAD,EAAgB;IAACzC,IAAI,EAAEA,IAAP;IAAaC,QAAQ,EAAEA;EAAvB,CAAhB,CADF,CAVF;EAeQ,YAAQ,GAAKL,kBAAkB,GAAE8C,QAAjC;EACR,IAAMC,eAAe,GAAGD,QAAQ,KAAK,aAAb,IAA8BA,QAAQ,KAAK,UAA3C,GAAwD,MAAxD,GAAiE,OAAzF;EACA,OAAOd,oBAAoB,GACzB1C,oBAACM,OAAD,EAAQ;IAACoD,OAAO,EAAE5C,IAAI,CAAC6B,cAAf;IAA+Ba,QAAQ,EAAEC;EAAzC,CAAR,EACGR,QADH,EAEGJ,aAFH,CADyB,GAMzBI,QANF;AAQD;;AAED,IAAMM,eAAe,GAAG,UAAC1C,EAAD,EAA0E;MAAvEC,IAAI;MAAEC,QAAQ;EACvC,IAAM4C,OAAO,GAAG,CAAC,EAAE7C,IAAI,CAAC8C,QAAL,IAAiB9C,IAAI,CAAC+C,OAAtB,IAAiC/C,IAAI,CAACgD,OAAxC,CAAjB;EACA,IAAMC,WAAW,GAAG3D,UAAU,CAACU,IAAD,CAAV,IAAoBA,IAAI,CAACwC,QAA7C;EACA,OACEtD,0CACG2D,OAAO,IAAI3D,oBAACgE,YAAD,EAAa;IAACC,IAAI,EAAEnD,IAAI,CAAC8C,QAAZ;IAAsBM,GAAG,EAAEpD,IAAI,CAAC+C,OAAhC;IAAyCM,GAAG,EAAErD,IAAI,CAACgD,OAAnD;IAA4DM,GAAG,EAAEtD,IAAI,CAACuD;EAAtE,CAAb,CADd,EAC8G,GAD9G,EAEGvD,IAAI,CAACwD,IAFR,OAEeP,WAAW,IAAI/D,oBAACuE,YAAD,EAAa;IAACxD,QAAQ,EAAEA,QAAX;IAAqByD,SAAS,EAAE1D,IAAI,CAAC2D;EAArC,CAAb,CAF9B,CADF;AAMD,CATD;;AAWA,IAAMT,YAAY,GAAG,UAACU,KAAD,EAAyB;EAAK,OACjD1E;IAAM+B,SAAS,EAAE1B,MAAM,CAACsE;EAAxB,GACE3E,oBAACS,YAAD,EAAamE,aAAKF,KAAL,CAAb,CADF,CADiD;AAIlD,CAJD;;AAMA,IAAMH,YAAY,GAAG,UAAC1D,EAAD,EAAmE;MAAhEE,QAAQ;MAAEyD,SAAS;EACzC,IAAMG,IAAI,GAAG3E,oBAACS,YAAD,EAAa;IAACe,OAAO,EAAET,QAAQ,GAAG,UAAH,GAAgB,QAAlC;IAA4CkD,IAAI,EAAC;EAAjD,CAAb,CAAb;EACA,OACEjE;IAAM+B,SAAS,EAAE1B,MAAM,CAAC,eAAD,CAAvB;IAA0C4B,IAAI,EAAEuC,SAAS,GAAG,KAAH,GAAWrB,SAApE;IAA6E,cAAcqB;EAA3F,GACGG,IADH,CADF;AAKD,CAPD;;AASA,eAAe/D,WAAf","names":["React","useEffect","useRef","clsx","isLinkItem","styles","Tooltip","getItemTarget","useHiddenDescription","InternalIcon","useDropdownContext","getMenuItemProps","ItemElement","_a","item","disabled","onItemActivate","highlighted","highlightItem","_c","first","last","hasCategoryHeader","_d","variant","isLink","onClick","event","stopPropagation","preventDefault","onHover","className","_b","role","id","description","onMouseEnter","onTouchStart","MenuItem","menuItemRef","current","focus","isDisabledWithReason","disabledReason","targetProps","descriptionEl","menuItemProps","ref","tabIndex","menuItem","href","undefined","target","rel","external","MenuItemContent","position","tooltipPosition","content","hasIcon","iconName","iconUrl","iconSvg","hasExternal","MenuItemIcon","name","url","svg","alt","iconAlt","text","ExternalIcon","ariaLabel","externalIconAriaLabel","props","icon","__assign"],"sourceRoot":"","sources":["../../../../src/button-dropdown/item-element/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { ItemProps } from '../interfaces';\nimport { isLinkItem } from '../utils/utils';\nimport styles from './styles.css.js';\nimport Tooltip from '../tooltip';\n\nimport { ButtonDropdownProps } from '../interfaces';\nimport { getItemTarget } from '../utils/utils';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport InternalIcon, { InternalIconProps } from '../../icon/internal';\nimport { useDropdownContext } from '../../internal/components/dropdown/context';\nimport { getMenuItemProps } from '../utils/menu-item';\n\nconst ItemElement = ({\n  item,\n  disabled,\n  onItemActivate,\n  highlighted,\n  highlightItem,\n  first = false,\n  last,\n  hasCategoryHeader,\n  variant = 'normal',\n}: ItemProps) => {\n  const isLink = isLinkItem(item);\n  const onClick = (event: React.MouseEvent) => {\n    // Stop propagation to parent node and handle event exclusively in here. This ensures\n    // that no group will interfere with the default behavior of links\n    event.stopPropagation();\n    if (!isLink) {\n      event.preventDefault();\n    }\n    if (!disabled) {\n      onItemActivate(item, event);\n    }\n  };\n\n  const onHover = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    highlightItem(item);\n  };\n\n  return (\n    <li\n      className={clsx(styles['item-element'], styles[`variant-${variant}`], {\n        [styles.highlighted]: highlighted,\n        [styles.disabled]: disabled,\n        [styles.first]: first,\n        [styles.last]: last,\n        [styles['has-category-header']]: hasCategoryHeader,\n      })}\n      role=\"presentation\"\n      data-testid={item.id}\n      data-description={item.description}\n      onClick={onClick}\n      onMouseEnter={onHover}\n      onTouchStart={onHover}\n    >\n      <MenuItem item={item} disabled={disabled} highlighted={highlighted} />\n    </li>\n  );\n};\n\ninterface MenuItemProps {\n  item: ButtonDropdownProps.Item;\n  disabled: boolean;\n  highlighted: boolean;\n}\n\nfunction MenuItem({ item, disabled, highlighted }: MenuItemProps) {\n  const menuItemRef = useRef<HTMLSpanElement | HTMLAnchorElement>(null);\n\n  useEffect(() => {\n    if (highlighted && menuItemRef.current) {\n      menuItemRef.current.focus();\n    }\n  }, [highlighted]);\n\n  const isDisabledWithReason = disabled && item.disabledReason;\n  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);\n  const menuItemProps: React.HTMLProps<HTMLSpanElement | HTMLAnchorElement> = {\n    className: styles['menu-item'],\n    ref: menuItemRef,\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1,\n    ...getMenuItemProps({ disabled }),\n    ...(isDisabledWithReason ? targetProps : {}),\n  };\n  const menuItem = isLinkItem(item) ? (\n    <a\n      {...(menuItemProps as React.HTMLProps<HTMLAnchorElement>)}\n      href={!disabled ? item.href : undefined}\n      target={getItemTarget(item)}\n      rel={item.external ? 'noopener noreferrer' : undefined}\n    >\n      <MenuItemContent item={item} disabled={disabled} />\n    </a>\n  ) : (\n    <span {...menuItemProps}>\n      <MenuItemContent item={item} disabled={disabled} />\n    </span>\n  );\n\n  const { position } = useDropdownContext();\n  const tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';\n  return isDisabledWithReason ? (\n    <Tooltip content={item.disabledReason} position={tooltipPosition}>\n      {menuItem}\n      {descriptionEl}\n    </Tooltip>\n  ) : (\n    menuItem\n  );\n}\n\nconst MenuItemContent = ({ item, disabled }: { item: ButtonDropdownProps.Item; disabled: boolean }) => {\n  const hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);\n  const hasExternal = isLinkItem(item) && item.external;\n  return (\n    <>\n      {hasIcon && <MenuItemIcon name={item.iconName} url={item.iconUrl} svg={item.iconSvg} alt={item.iconAlt} />}{' '}\n      {item.text} {hasExternal && <ExternalIcon disabled={disabled} ariaLabel={item.externalIconAriaLabel} />}\n    </>\n  );\n};\n\nconst MenuItemIcon = (props: InternalIconProps) => (\n  <span className={styles.icon}>\n    <InternalIcon {...props} />\n  </span>\n);\n\nconst ExternalIcon = ({ disabled, ariaLabel }: { disabled: boolean; ariaLabel?: string }) => {\n  const icon = <InternalIcon variant={disabled ? 'disabled' : 'normal'} name=\"external\" />;\n  return (\n    <span className={styles['external-icon']} role={ariaLabel ? 'img' : undefined} aria-label={ariaLabel}>\n      {icon}\n    </span>\n  );\n};\n\nexport default ItemElement;\n"]},"metadata":{},"sourceType":"module"}