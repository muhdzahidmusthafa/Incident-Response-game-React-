{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { useSelector } from '../model/async-store';\nexport default function useHighlightDetails(_a) {\n  var model = _a.model,\n      xTickFormatter = _a.xTickFormatter,\n      yTickFormatter = _a.yTickFormatter,\n      detailTotalFormatter = _a.detailTotalFormatter,\n      detailTotalLabel = _a.detailTotalLabel;\n  var hX = useSelector(model.interactions, function (state) {\n    return state.highlightedX;\n  });\n  var hPoint = useSelector(model.interactions, function (state) {\n    return state.highlightedPoint;\n  });\n  var isPopoverPinned = useSelector(model.interactions, function (state) {\n    return state.isPopoverPinned;\n  });\n\n  if (!hX) {\n    return null;\n  }\n\n  var firstPoint = hX[0];\n  var highlightIndex = firstPoint.index.x;\n\n  var seriesPoints = __spreadArray([], model.computed.plot.xs[highlightIndex], true);\n\n  var detailsTotal = seriesPoints.reduce(function (total, point) {\n    return total + point.value;\n  }, 0);\n  var formattedX = xTickFormatter ? xTickFormatter(firstPoint.x) : firstPoint.x.toString();\n  var seriesTitle = hPoint ? getInternalSeries(hPoint).title : '';\n  var formattedY = hPoint ? getInternalSeries(hPoint).formatValue(hPoint.value, hPoint.x) : '';\n  var seriesDetails = seriesPoints.map(function (point) {\n    var _a = getInternalSeries(point),\n        title = _a.title,\n        formatValue = _a.formatValue,\n        color = _a.color,\n        markerType = _a.markerType;\n\n    var isDimmed = Boolean(hPoint) && point !== hPoint;\n    return {\n      key: title,\n      value: formatValue(point.value, point.x),\n      color: color,\n      markerType: markerType,\n      isDimmed: isDimmed\n    };\n  });\n  var totalDetails = [{\n    key: detailTotalLabel || '',\n    value: detailTotalFormatter ? detailTotalFormatter(detailsTotal) : yTickFormatter ? yTickFormatter(detailsTotal) : detailsTotal\n  }];\n  var pointDetails = hPoint ? seriesDetails[hPoint.index.s] : null;\n  var activeLabel = \"\".concat(seriesTitle, \" \").concat(formattedX, \" \").concat(formattedY, \", \").concat(totalDetails[0].key, \" \").concat(totalDetails[0].value);\n  return {\n    isPopoverPinned: isPopoverPinned,\n    highlightIndex: highlightIndex,\n    formattedX: formattedX,\n    seriesTitle: seriesTitle,\n    formattedY: formattedY,\n    activeLabel: activeLabel,\n    seriesDetails: seriesDetails,\n    totalDetails: totalDetails,\n    pointDetails: pointDetails\n  };\n\n  function getInternalSeries(point) {\n    return model.getInternalSeries(model.series[point.index.s]);\n  }\n}","map":{"version":3,"mappings":"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","names":["useSelector","useHighlightDetails","_a","model","xTickFormatter","yTickFormatter","detailTotalFormatter","detailTotalLabel","hX","interactions","highlightedX","hPoint","highlightedPoint","isPopoverPinned","highlightIndex","firstPoint","index","x","seriesPoints","computed","plot","xs","detailsTotal","reduce","total","point","value","formattedX","toString","seriesTitle","getInternalSeries","title","formattedY","formatValue","seriesDetails","map","color","markerType","isDimmed","Boolean","key","totalDetails","pointDetails","s","activeLabel","concat","series"],"sourceRoot":"","sources":["../../../../src/area-chart/elements/use-highlight-details.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CartesianChartProps } from '../../internal/components/cartesian-chart/interfaces';\nimport { ChartSeriesDetailItem } from '../../internal/components/chart-series-details';\nimport { AreaChartProps } from '../interfaces';\nimport { ChartModel } from '../model';\nimport { useSelector } from '../model/async-store';\n\nexport interface HighlightDetails {\n  isPopoverPinned: boolean;\n  highlightIndex: number;\n  formattedX: string;\n  seriesTitle: string;\n  formattedY: number | string;\n  seriesDetails: readonly ChartSeriesDetailItem[];\n  totalDetails: readonly ChartSeriesDetailItem[];\n  pointDetails: null | ChartSeriesDetailItem;\n  activeLabel: string;\n}\n\nexport default function useHighlightDetails<T extends AreaChartProps.DataTypes>({\n  model,\n  xTickFormatter,\n  yTickFormatter,\n  detailTotalFormatter,\n  detailTotalLabel,\n}: {\n  model: ChartModel<T>;\n  xTickFormatter?: CartesianChartProps.TickFormatter<T>;\n  yTickFormatter?: CartesianChartProps.TickFormatter<number>;\n  detailTotalFormatter?: CartesianChartProps.TickFormatter<number>;\n  detailTotalLabel?: string;\n}): null | HighlightDetails {\n  const hX = useSelector(model.interactions, state => state.highlightedX);\n  const hPoint = useSelector(model.interactions, state => state.highlightedPoint);\n  const isPopoverPinned = useSelector(model.interactions, state => state.isPopoverPinned);\n\n  if (!hX) {\n    return null;\n  }\n\n  const [firstPoint] = hX;\n  const highlightIndex = firstPoint.index.x;\n  const seriesPoints = [...model.computed.plot.xs[highlightIndex]];\n  const detailsTotal = seriesPoints.reduce((total, point) => total + point.value, 0);\n  const formattedX = xTickFormatter ? xTickFormatter(firstPoint.x) : firstPoint.x.toString();\n  const seriesTitle = hPoint ? getInternalSeries(hPoint).title : '';\n  const formattedY = hPoint ? getInternalSeries(hPoint).formatValue(hPoint.value, hPoint.x) : '';\n  const seriesDetails = seriesPoints.map(point => {\n    const { title, formatValue, color, markerType } = getInternalSeries(point);\n    const isDimmed = Boolean(hPoint) && point !== hPoint;\n    return { key: title, value: formatValue(point.value, point.x), color, markerType, isDimmed };\n  });\n  const totalDetails = [\n    {\n      key: detailTotalLabel || '',\n      value: detailTotalFormatter\n        ? detailTotalFormatter(detailsTotal)\n        : yTickFormatter\n        ? yTickFormatter(detailsTotal)\n        : detailsTotal,\n    },\n  ];\n  const pointDetails = hPoint ? seriesDetails[hPoint.index.s] : null;\n  const activeLabel = `${seriesTitle} ${formattedX} ${formattedY}, ${totalDetails[0].key} ${totalDetails[0].value}`;\n\n  return {\n    isPopoverPinned,\n    highlightIndex,\n    formattedX,\n    seriesTitle,\n    formattedY,\n    activeLabel,\n    seriesDetails,\n    totalDetails,\n    pointDetails,\n  };\n\n  function getInternalSeries(point: ChartModel.PlotPoint<T>) {\n    return model.getInternalSeries(model.series[point.index.s]);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}