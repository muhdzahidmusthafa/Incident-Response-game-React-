{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React from 'react';\nimport { Drawer } from './drawer';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nexport function NavigationPanel(_a) {\n  var _b;\n\n  var ariaLabels = _a.ariaLabels,\n      footerHeight = _a.footerHeight,\n      headerHeight = _a.headerHeight,\n      isHidden = _a.isHidden,\n      isMobile = _a.isMobile,\n      navigation = _a.navigation,\n      navigationDrawerWidth = _a.navigationDrawerWidth,\n      navigationWidth = _a.navigationWidth,\n      navigationOpen = _a.navigationOpen,\n      onClick = _a.onClick,\n      onNavigationToggle = _a.onNavigationToggle,\n      panelHeightStyle = _a.panelHeightStyle,\n      toggleRefs = _a.toggleRefs;\n  return React.createElement(\"div\", {\n    style: {\n      width: navigationDrawerWidth\n    }\n  }, React.createElement(\"div\", {\n    className: clsx(styles['panel-wrapper-outer'], (_b = {}, _b[styles.mobile] = isMobile, _b[styles.open] = navigationOpen, _b)),\n    style: __assign({}, isMobile ? {\n      top: headerHeight,\n      bottom: footerHeight\n    } : panelHeightStyle)\n  }, React.createElement(Drawer, {\n    type: \"navigation\",\n    isMobile: isMobile,\n    width: navigationWidth,\n    isOpen: navigationOpen,\n    isHidden: isHidden,\n    onToggle: onNavigationToggle,\n    toggleRefs: toggleRefs,\n    onClick: onClick,\n    contentClassName: clsx(styles.navigation, testutilStyles.navigation),\n    closeClassName: clsx(styles['navigation-close'], testutilStyles['navigation-close']),\n    toggleClassName: clsx(styles['navigation-toggle'], testutilStyles['navigation-toggle']),\n    topOffset: headerHeight,\n    bottomOffset: footerHeight,\n    ariaLabels: ariaLabels\n  }, navigation)));\n}","map":{"version":3,"mappings":"kCAAA;AACA;;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAA6BC,MAA7B,QAA2C,UAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AA0BA,OAAM,SAAUC,eAAV,CAA0BC,EAA1B,EAciB;;;MAbrBC,UAAU;MACVC,YAAY;MACZC,YAAY;MACZC,QAAQ;MACRC,QAAQ;MACRC,UAAU;MACVC,qBAAqB;MACrBC,eAAe;MACfC,cAAc;MACdC,OAAO;MACPC,kBAAkB;MAClBC,gBAAgB;MAChBC,UAAU;EAEV,OACElB;IACEmB,KAAK,EAAE;MACLC,KAAK,EAAER;IADF;EADT,GAKEZ;IACEqB,SAAS,EAAEtB,IAAI,CAACG,MAAM,CAAC,qBAAD,CAAP,GAA8BoB,SAC3CA,GAACpB,MAAM,CAACqB,MAAR,IAAiBb,QAD0B,EAE3CY,GAACpB,MAAM,CAACsB,IAAR,IAAeV,cAF4B,IAA9B,EADjB;IAKEK,KAAK,eACCT,QAAQ,GAAG;MAAEe,GAAG,EAAEjB,YAAP;MAAqBkB,MAAM,EAAEnB;IAA7B,CAAH,GAAiDU,gBAD1D;EALP,GASEjB,oBAACC,MAAD,EAAO;IACL0B,IAAI,EAAC,YADA;IAELjB,QAAQ,EAAEA,QAFL;IAGLU,KAAK,EAAEP,eAHF;IAILe,MAAM,EAAEd,cAJH;IAKLL,QAAQ,EAAEA,QALL;IAMLoB,QAAQ,EAAEb,kBANL;IAOLE,UAAU,EAAEA,UAPP;IAQLH,OAAO,EAAEA,OARJ;IASLe,gBAAgB,EAAE/B,IAAI,CAACG,MAAM,CAACS,UAAR,EAAoBR,cAAc,CAACQ,UAAnC,CATjB;IAULoB,cAAc,EAAEhC,IAAI,CAACG,MAAM,CAAC,kBAAD,CAAP,EAA6BC,cAAc,CAAC,kBAAD,CAA3C,CAVf;IAWL6B,eAAe,EAAEjC,IAAI,CAACG,MAAM,CAAC,mBAAD,CAAP,EAA8BC,cAAc,CAAC,mBAAD,CAA5C,CAXhB;IAYL8B,SAAS,EAAEzB,YAZN;IAaL0B,YAAY,EAAE3B,YAbT;IAcLD,UAAU,EAAEA;EAdP,CAAP,EAgBGK,UAhBH,CATF,CALF,CADF;AAoCD","names":["clsx","React","Drawer","styles","testutilStyles","NavigationPanel","_a","ariaLabels","footerHeight","headerHeight","isHidden","isMobile","navigation","navigationDrawerWidth","navigationWidth","navigationOpen","onClick","onNavigationToggle","panelHeightStyle","toggleRefs","style","width","className","_b","mobile","open","top","bottom","type","isOpen","onToggle","contentClassName","closeClassName","toggleClassName","topOffset","bottomOffset"],"sourceRoot":"","sources":["../../../src/app-layout/navigation-panel.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { AppLayoutProps } from './interfaces';\nimport { DesktopDrawerProps, Drawer } from './drawer';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nimport useContentHeight from './utils/use-content-height';\n\ninterface NavigationPanelProps {\n  navigationOpen: boolean;\n  isHidden: DesktopDrawerProps['isHidden'];\n\n  navigationDrawerWidth: number;\n  navigationWidth: number;\n  headerHeight: DesktopDrawerProps['topOffset'];\n  footerHeight: DesktopDrawerProps['bottomOffset'];\n  panelHeightStyle: ReturnType<typeof useContentHeight>['panelHeightStyle'];\n\n  navigation: React.ReactNode;\n\n  ariaLabels: AppLayoutProps['ariaLabels'];\n\n  isMobile: boolean;\n  isMotionEnabled: boolean;\n\n  onNavigationToggle: DesktopDrawerProps['onToggle'];\n  onClick: DesktopDrawerProps['onClick'];\n\n  toggleRefs: DesktopDrawerProps['toggleRefs'];\n}\n\nexport function NavigationPanel({\n  ariaLabels,\n  footerHeight,\n  headerHeight,\n  isHidden,\n  isMobile,\n  navigation,\n  navigationDrawerWidth,\n  navigationWidth,\n  navigationOpen,\n  onClick,\n  onNavigationToggle,\n  panelHeightStyle,\n  toggleRefs,\n}: NavigationPanelProps) {\n  return (\n    <div\n      style={{\n        width: navigationDrawerWidth,\n      }}\n    >\n      <div\n        className={clsx(styles['panel-wrapper-outer'], {\n          [styles.mobile]: isMobile,\n          [styles.open]: navigationOpen,\n        })}\n        style={{\n          ...(isMobile ? { top: headerHeight, bottom: footerHeight } : panelHeightStyle),\n        }}\n      >\n        <Drawer\n          type=\"navigation\"\n          isMobile={isMobile}\n          width={navigationWidth}\n          isOpen={navigationOpen}\n          isHidden={isHidden}\n          onToggle={onNavigationToggle}\n          toggleRefs={toggleRefs}\n          onClick={onClick}\n          contentClassName={clsx(styles.navigation, testutilStyles.navigation)}\n          closeClassName={clsx(styles['navigation-close'], testutilStyles['navigation-close'])}\n          toggleClassName={clsx(styles['navigation-toggle'], testutilStyles['navigation-toggle'])}\n          topOffset={headerHeight}\n          bottomOffset={footerHeight}\n          ariaLabels={ariaLabels}\n        >\n          {navigation}\n        </Drawer>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}