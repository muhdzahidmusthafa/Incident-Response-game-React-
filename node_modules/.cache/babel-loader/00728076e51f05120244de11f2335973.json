{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport React, { useContext, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport default function InternalHeader(_a) {\n  var variant = _a.variant,\n      headingTagOverride = _a.headingTagOverride,\n      children = _a.children,\n      actions = _a.actions,\n      counter = _a.counter,\n      description = _a.description,\n      info = _a.info,\n      _b = _a.__internalRootRef,\n      __internalRootRef = _b === void 0 ? null : _b,\n      __disableActionsWrapping = _a.__disableActionsWrapping,\n      restProps = __rest(_a, [\"variant\", \"headingTagOverride\", \"children\", \"actions\", \"counter\", \"description\", \"info\", \"__internalRootRef\", \"__disableActionsWrapping\"]);\n\n  var HeadingTag = headingTagOverride !== null && headingTagOverride !== void 0 ? headingTagOverride : variant === 'awsui-h1-sticky' ? 'h1' : variant;\n  var isStuck = useContext(StickyHeaderContext).isStuck;\n  var baseProps = getBaseProps(restProps);\n  var ref = useRef(null);\n  var isRefresh = useVisualRefresh(ref);\n  var dynamicVariant = isStuck ? 'h2' : 'h1';\n  var variantOverride = variant === 'awsui-h1-sticky' ? isRefresh ? dynamicVariant : 'h2' : variant;\n  var mergedRef = useMergeRefs(ref, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className, styles[\"root-variant-\".concat(variantOverride)], isRefresh && styles[\"root-variant-\".concat(variantOverride, \"-refresh\")], !actions && [styles[\"root-no-actions\"]], description && [styles[\"root-has-description\"]], __disableActionsWrapping && [styles['root-no-wrap']]),\n    ref: mergedRef\n  }), React.createElement(\"div\", {\n    className: clsx(styles.main, styles[\"main-variant-\".concat(variantOverride)], isRefresh && styles[\"main-variant-\".concat(variantOverride, \"-refresh\")])\n  }, React.createElement(\"div\", {\n    className: clsx(styles.title, styles[\"title-variant-\".concat(variantOverride)], isRefresh && styles[\"title-variant-\".concat(variantOverride, \"-refresh\")])\n  }, React.createElement(HeadingTag, {\n    className: clsx(styles.heading, styles[\"heading-variant-\".concat(variantOverride)])\n  }, React.createElement(\"span\", {\n    className: styles['heading-text']\n  }, children), counter !== undefined && React.createElement(\"span\", {\n    className: styles.counter\n  }, \" \", counter)), info && React.createElement(\"span\", {\n    className: styles.info\n  }, info)), description && React.createElement(\"p\", {\n    className: clsx(styles.description, styles[\"description-variant-\".concat(variantOverride)], isRefresh && styles[\"description-variant-\".concat(variantOverride, \"-refresh\")])\n  }, description)), actions && React.createElement(\"div\", {\n    className: clsx(styles.actions, styles[\"actions-variant-\".concat(variantOverride)], isRefresh && styles[\"actions-variant-\".concat(variantOverride, \"-refresh\")])\n  }, actions));\n}","map":{"version":3,"mappings":"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","names":["clsx","useMergeRefs","React","useContext","useRef","getBaseProps","StickyHeaderContext","useVisualRefresh","styles","InternalHeader","_a","headingTagOverride","children","actions","counter","description","info","_b","__internalRootRef","__disableActionsWrapping","restProps","HeadingTag","variant","isStuck","baseProps","ref","isRefresh","dynamicVariant","variantOverride","mergedRef","className","root","main","title","heading","undefined"],"sourceRoot":"","sources":["../../../src/header/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport React, { useContext, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { HeaderProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { SomeRequired } from '../internal/types';\n\ninterface InternalHeaderProps extends SomeRequired<HeaderProps, 'variant'>, InternalBaseComponentProps {\n  __disableActionsWrapping?: boolean;\n}\n\nexport default function InternalHeader({\n  variant,\n  headingTagOverride,\n  children,\n  actions,\n  counter,\n  description,\n  info,\n  __internalRootRef = null,\n  __disableActionsWrapping,\n  ...restProps\n}: InternalHeaderProps) {\n  const HeadingTag = headingTagOverride ?? (variant === 'awsui-h1-sticky' ? 'h1' : variant);\n  const { isStuck } = useContext(StickyHeaderContext);\n  const baseProps = getBaseProps(restProps);\n  const ref = useRef(null);\n  const isRefresh = useVisualRefresh(ref);\n  const dynamicVariant = isStuck ? 'h2' : 'h1';\n  const variantOverride = variant === 'awsui-h1-sticky' ? (isRefresh ? dynamicVariant : 'h2') : variant;\n  const mergedRef = useMergeRefs(ref, __internalRootRef);\n  return (\n    <div\n      {...baseProps}\n      className={clsx(\n        styles.root,\n        baseProps.className,\n        styles[`root-variant-${variantOverride}`],\n        isRefresh && styles[`root-variant-${variantOverride}-refresh`],\n        !actions && [styles[`root-no-actions`]],\n        description && [styles[`root-has-description`]],\n        __disableActionsWrapping && [styles['root-no-wrap']]\n      )}\n      ref={mergedRef}\n    >\n      <div\n        className={clsx(\n          styles.main,\n          styles[`main-variant-${variantOverride}`],\n          isRefresh && styles[`main-variant-${variantOverride}-refresh`]\n        )}\n      >\n        <div\n          className={clsx(\n            styles.title,\n            styles[`title-variant-${variantOverride}`],\n            isRefresh && styles[`title-variant-${variantOverride}-refresh`]\n          )}\n        >\n          <HeadingTag className={clsx(styles.heading, styles[`heading-variant-${variantOverride}`])}>\n            <span className={styles['heading-text']}>{children}</span>\n            {counter !== undefined && <span className={styles.counter}> {counter}</span>}\n          </HeadingTag>\n          {info && <span className={styles.info}>{info}</span>}\n        </div>\n        {description && (\n          <p\n            className={clsx(\n              styles.description,\n              styles[`description-variant-${variantOverride}`],\n              isRefresh && styles[`description-variant-${variantOverride}-refresh`]\n            )}\n          >\n            {description}\n          </p>\n        )}\n      </div>\n      {actions && (\n        <div\n          className={clsx(\n            styles.actions,\n            styles[`actions-variant-${variantOverride}`],\n            isRefresh && styles[`actions-variant-${variantOverride}-refresh`]\n          )}\n        >\n          {actions}\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}