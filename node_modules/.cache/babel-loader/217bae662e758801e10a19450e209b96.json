{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback } from 'react';\nimport { KeyCode } from '../../../keycode';\nvar HOME = 36;\nvar END = 35;\nexport var useMenuKeyboard = function (_a) {\n  var moveHighlight = _a.moveHighlight,\n      selectOption = _a.selectOption,\n      goHome = _a.goHome,\n      goEnd = _a.goEnd,\n      closeDropdown = _a.closeDropdown,\n      isKeyboard = _a.isKeyboard,\n      isSelectingUsingSpace = _a.isSelectingUsingSpace,\n      _b = _a.preventNativeSpace,\n      preventNativeSpace = _b === void 0 ? false : _b;\n  return useCallback(function (e) {\n    isKeyboard.current = true;\n\n    switch (e.detail.keyCode) {\n      case KeyCode.up:\n        e.preventDefault();\n        moveHighlight(-1);\n        break;\n\n      case KeyCode.down:\n        e.preventDefault();\n        moveHighlight(1);\n        break;\n\n      case HOME:\n        goHome();\n        break;\n\n      case END:\n        goEnd();\n        break;\n\n      case KeyCode.escape:\n        closeDropdown();\n        break;\n\n      case KeyCode.enter:\n        e.preventDefault();\n        selectOption();\n        break;\n\n      case KeyCode.space:\n        if (preventNativeSpace) {\n          e.preventDefault();\n          selectOption();\n          isSelectingUsingSpace.current = true;\n        }\n\n    }\n  }, [moveHighlight, selectOption, goHome, goEnd, closeDropdown, isKeyboard, isSelectingUsingSpace, preventNativeSpace]);\n};\nexport var useTriggerKeyboard = function (_a) {\n  var openDropdown = _a.openDropdown,\n      goHome = _a.goHome,\n      isKeyboard = _a.isKeyboard;\n  return useCallback(function (e) {\n    isKeyboard.current = true;\n\n    switch (e.detail.keyCode) {\n      case KeyCode.up:\n      case KeyCode.down:\n        e.preventDefault();\n        goHome();\n        openDropdown();\n        break;\n\n      case KeyCode.space:\n        e.preventDefault();\n        openDropdown();\n        break;\n    }\n  }, [openDropdown, goHome, isKeyboard]);\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAT,QAA8C,OAA9C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAGA,IAAMC,IAAI,GAAG,EAAb;AACA,IAAMC,GAAG,GAAG,EAAZ;AAeA,OAAO,IAAMC,eAAe,GAAoB,UAACC,EAAD,EAS/C;MARCC,aAAa;MACbC,YAAY;MACZC,MAAM;MACNC,KAAK;MACLC,aAAa;MACbC,UAAU;MACVC,qBAAqB;MACrBC;MAAAC,kBAAkB,mBAAG,KAAH,GAAQD;EAE1B,OAAOb,WAAW,CAChB,UAACe,CAAD,EAA8B;IAC5BJ,UAAU,CAACK,OAAX,GAAqB,IAArB;;IACA,QAAQD,CAAC,CAACE,MAAF,CAASC,OAAjB;MACE,KAAKjB,OAAO,CAACkB,EAAb;QACEJ,CAAC,CAACK,cAAF;QACAd,aAAa,CAAC,CAAC,CAAF,CAAb;QACA;;MACF,KAAKL,OAAO,CAACoB,IAAb;QACEN,CAAC,CAACK,cAAF;QACAd,aAAa,CAAC,CAAD,CAAb;QACA;;MACF,KAAKJ,IAAL;QACEM,MAAM;QACN;;MACF,KAAKL,GAAL;QACEM,KAAK;QACL;;MACF,KAAKR,OAAO,CAACqB,MAAb;QACEZ,aAAa;QACb;;MACF,KAAKT,OAAO,CAACsB,KAAb;QACER,CAAC,CAACK,cAAF;QACAb,YAAY;QACZ;;MACF,KAAKN,OAAO,CAACuB,KAAb;QACE,IAAIV,kBAAJ,EAAwB;UACtBC,CAAC,CAACK,cAAF;UACAb,YAAY;UACZK,qBAAqB,CAACI,OAAtB,GAAgC,IAAhC;QACD;;IA3BL;EA6BD,CAhCe,EAiChB,CAACV,aAAD,EAAgBC,YAAhB,EAA8BC,MAA9B,EAAsCC,KAAtC,EAA6CC,aAA7C,EAA4DC,UAA5D,EAAwEC,qBAAxE,EAA+FE,kBAA/F,CAjCgB,CAAlB;AAmCD,CA7CM;AAuDP,OAAO,IAAMW,kBAAkB,GAAuB,UAACpB,EAAD,EAAqC;MAAlCqB,YAAY;MAAElB,MAAM;MAAEG,UAAU;EACvF,OAAOX,WAAW,CAChB,UAACe,CAAD,EAA8B;IAC5BJ,UAAU,CAACK,OAAX,GAAqB,IAArB;;IACA,QAAQD,CAAC,CAACE,MAAF,CAASC,OAAjB;MACE,KAAKjB,OAAO,CAACkB,EAAb;MACA,KAAKlB,OAAO,CAACoB,IAAb;QACEN,CAAC,CAACK,cAAF;QACAZ,MAAM;QACNkB,YAAY;QACZ;;MACF,KAAKzB,OAAO,CAACuB,KAAb;QACET,CAAC,CAACK,cAAF;QACAM,YAAY;QACZ;IAVJ;EAYD,CAfe,EAgBhB,CAACA,YAAD,EAAelB,MAAf,EAAuBG,UAAvB,CAhBgB,CAAlB;AAkBD,CAnBM","names":["useCallback","KeyCode","HOME","END","useMenuKeyboard","_a","moveHighlight","selectOption","goHome","goEnd","closeDropdown","isKeyboard","isSelectingUsingSpace","_b","preventNativeSpace","e","current","detail","keyCode","up","preventDefault","down","escape","enter","space","useTriggerKeyboard","openDropdown"],"sourceRoot":"","sources":["../../../../../../src/internal/components/options-list/utils/use-keyboard.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, MutableRefObject } from 'react';\nimport { KeyCode } from '../../../keycode';\nimport { BaseKeyDetail, CancelableEventHandler } from '../../../events';\n\nconst HOME = 36;\nconst END = 35;\n\ninterface UseMenuKeyboard {\n  (inputProps: {\n    moveHighlight: (direction: -1 | 1, startIndex?: number) => void;\n    selectOption: () => void;\n    goHome: () => void;\n    goEnd: () => void;\n    closeDropdown: () => void;\n    isKeyboard: MutableRefObject<boolean>;\n    isSelectingUsingSpace: MutableRefObject<boolean>;\n    preventNativeSpace?: boolean;\n  }): CancelableEventHandler<BaseKeyDetail>;\n}\n\nexport const useMenuKeyboard: UseMenuKeyboard = ({\n  moveHighlight,\n  selectOption,\n  goHome,\n  goEnd,\n  closeDropdown,\n  isKeyboard,\n  isSelectingUsingSpace,\n  preventNativeSpace = false,\n}) => {\n  return useCallback(\n    (e: CustomEvent<BaseKeyDetail>) => {\n      isKeyboard.current = true;\n      switch (e.detail.keyCode) {\n        case KeyCode.up:\n          e.preventDefault();\n          moveHighlight(-1);\n          break;\n        case KeyCode.down:\n          e.preventDefault();\n          moveHighlight(1);\n          break;\n        case HOME:\n          goHome();\n          break;\n        case END:\n          goEnd();\n          break;\n        case KeyCode.escape:\n          closeDropdown();\n          break;\n        case KeyCode.enter:\n          e.preventDefault();\n          selectOption();\n          break;\n        case KeyCode.space:\n          if (preventNativeSpace) {\n            e.preventDefault();\n            selectOption();\n            isSelectingUsingSpace.current = true;\n          }\n      }\n    },\n    [moveHighlight, selectOption, goHome, goEnd, closeDropdown, isKeyboard, isSelectingUsingSpace, preventNativeSpace]\n  );\n};\n\ninterface UseTriggerKeyboard {\n  (inputProps: {\n    openDropdown: () => void;\n    goHome: () => void;\n    isKeyboard: MutableRefObject<boolean>;\n  }): CancelableEventHandler<BaseKeyDetail>;\n}\n\nexport const useTriggerKeyboard: UseTriggerKeyboard = ({ openDropdown, goHome, isKeyboard }) => {\n  return useCallback(\n    (e: CustomEvent<BaseKeyDetail>) => {\n      isKeyboard.current = true;\n      switch (e.detail.keyCode) {\n        case KeyCode.up:\n        case KeyCode.down:\n          e.preventDefault();\n          goHome();\n          openDropdown();\n          break;\n        case KeyCode.space:\n          e.preventDefault();\n          openDropdown();\n          break;\n      }\n    },\n    [openDropdown, goHome, isKeyboard]\n  );\n};\n"]},"metadata":{},"sourceType":"module"}