{"ast":null,"code":"import { AceModes } from './ace-modes';\nimport { findUpUntil } from '../internal/utils/dom';\nexport var DEFAULT_LIGHT_THEME = 'dawn';\nexport var DEFAULT_DARK_THEME = 'tomorrow_night_bright';\nexport function getDefaultConfig() {\n  return {\n    behavioursEnabled: true\n  };\n}\nexport function getDefaultTheme(element) {\n  var isDarkMode = !!findUpUntil(element, function (node) {\n    return node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode');\n  });\n  return isDarkMode ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;\n}\nexport function getAceTheme(theme) {\n  return \"ace/theme/\".concat(theme);\n}\nexport function getLanguageLabel(language) {\n  var _a;\n\n  return ((_a = AceModes.filter(function (mode) {\n    return mode.value === language;\n  })[0]) === null || _a === void 0 ? void 0 : _a.label) || '';\n}","map":{"version":3,"mappings":"AAIA,SAASA,QAAT,QAAyB,aAAzB;AAGA,SAASC,WAAT,QAA4B,uBAA5B;AAIA,OAAO,IAAMC,mBAAmB,GAAwC,MAAjE;AACP,OAAO,IAAMC,kBAAkB,GAAuC,uBAA/D;AAEP,OAAM,SAAUC,gBAAV,GAA0B;EAC9B,OAAO;IACLC,iBAAiB,EAAE;EADd,CAAP;AAGD;AAED,OAAM,SAAUC,eAAV,CAA0BC,OAA1B,EAA8C;EAClD,IAAMC,UAAU,GAAG,CAAC,CAACP,WAAW,CAC9BM,OAD8B,EAE9B,gBAAI;IAAI,WAAI,CAACE,SAAL,CAAeC,QAAf,CAAwB,yBAAxB,KAAsDC,IAAI,CAACF,SAAL,CAAeC,QAAf,CAAwB,iBAAxB,CAAtD;EAAgG,CAF1E,CAAhC;EAIA,OAAOF,UAAU,GAAGL,kBAAH,GAAwBD,mBAAzC;AACD;AAED,OAAM,SAAUU,WAAV,CAAsBC,KAAtB,EAAkD;EACtD,OAAO,oBAAaA,KAAb,CAAP;AACD;AAED,OAAM,SAAUC,gBAAV,CAA2BC,QAA3B,EAA6D;;;EACjE,OAAO,eAAQ,CAACC,MAAT,CAAgB,UAACC,IAAD,EAAwB;IAAK,WAAI,CAACC,KAAL,KAAeH,QAAf;EAAuB,CAApE,EAAsE,CAAtE,OAAwE,IAAxE,IAAwEI,aAAxE,GAAwE,MAAxE,GAAwEA,GAAEC,KAA1E,KAAmF,EAA1F;AACD","names":["AceModes","findUpUntil","DEFAULT_LIGHT_THEME","DEFAULT_DARK_THEME","getDefaultConfig","behavioursEnabled","getDefaultTheme","element","isDarkMode","classList","contains","node","getAceTheme","theme","getLanguageLabel","language","filter","mode","value","_a","label"],"sourceRoot":"","sources":["../../../src/code-editor/util.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Ace } from 'ace-builds';\n\nimport { AceModes } from './ace-modes';\nimport { LightThemes, DarkThemes } from './ace-themes';\nimport { CodeEditorProps } from './interfaces';\nimport { findUpUntil } from '../internal/utils/dom';\n\nexport type PaneStatus = 'error' | 'warning' | 'hidden';\n\nexport const DEFAULT_LIGHT_THEME: typeof LightThemes[number]['value'] = 'dawn';\nexport const DEFAULT_DARK_THEME: typeof DarkThemes[number]['value'] = 'tomorrow_night_bright';\n\nexport function getDefaultConfig(): Partial<Ace.EditorOptions> {\n  return {\n    behavioursEnabled: true,\n  };\n}\n\nexport function getDefaultTheme(element: HTMLElement): CodeEditorProps.Theme {\n  const isDarkMode = !!findUpUntil(\n    element,\n    node => node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode')\n  );\n  return isDarkMode ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;\n}\n\nexport function getAceTheme(theme: CodeEditorProps.Theme) {\n  return `ace/theme/${theme}`;\n}\n\nexport function getLanguageLabel(language: CodeEditorProps.Language): string {\n  return AceModes.filter((mode: { value: string }) => mode.value === language)[0]?.label || '';\n}\n"]},"metadata":{},"sourceType":"module"}