{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Joins strings with a whitespace, discarding empty strings. Useful to combine multiple aria-labels.\nexport var joinStrings = function () {\n  var strings = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    strings[_i] = arguments[_i];\n  }\n\n  var result = strings.filter(function (val) {\n    return val;\n  }).join(' ');\n  return result || undefined;\n};","map":{"version":3,"mappings":"AAAA;AACA;AAEA;AACA,OAAO,IAAMA,WAAW,GAAG;EAAC;;OAAA,yCAAqC;IAArCC;;;EAC1B,IAAMC,MAAM,GAAGD,OAAO,CAACE,MAAR,CAAe,eAAG;IAAI;EAAG,CAAzB,EAA2BC,IAA3B,CAAgC,GAAhC,CAAf;EACA,OAAOF,MAAM,IAAIG,SAAjB;AACD,CAHM","names":["joinStrings","strings","result","filter","join","undefined"],"sourceRoot":"","sources":["../../../../src/internal/utils/strings.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n// Joins strings with a whitespace, discarding empty strings. Useful to combine multiple aria-labels.\nexport const joinStrings = (...strings: Array<string | undefined>) => {\n  const result = strings.filter(val => val).join(' ');\n  return result || undefined;\n};\n"]},"metadata":{},"sourceType":"module"}