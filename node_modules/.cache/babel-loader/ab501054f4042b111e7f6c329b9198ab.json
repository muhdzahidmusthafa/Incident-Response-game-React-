{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport InternalIcon from '../../icon/internal';\nimport InternalLink from '../../link/internal';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\nexport function ObjectsTable(_a) {\n  var forwardFocusRef = _a.forwardFocusRef,\n      pathSegments = _a.pathSegments,\n      i18nStrings = _a.i18nStrings,\n      isVisualRefresh = _a.isVisualRefresh,\n      isItemDisabled = _a.isItemDisabled,\n      selectableItemsTypes = _a.selectableItemsTypes,\n      fetchData = _a.fetchData,\n      visibleColumns = _a.visibleColumns,\n      onDrilldown = _a.onDrilldown,\n      onSelect = _a.onSelect;\n  return React.createElement(BasicS3Table, {\n    // remount fresh component every we change the path to reset the inner state (e.g. selection/filtering)\n    key: pathSegments.join('/'),\n    forwardFocusRef: forwardFocusRef,\n    trackBy: \"Key\",\n    fetchData: function () {\n      var bucketName = pathSegments[0],\n          rest = pathSegments.slice(1);\n      return fetchData(bucketName, joinObjectPath(rest));\n    },\n    i18nStrings: __assign(__assign({}, getSharedI18Strings(i18nStrings)), {\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects,\n      filteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering(i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects),\n      filteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsSearchPlaceholder,\n      loadingText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsLoading,\n      emptyText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsNoItems,\n      selectionLabels: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection\n    }),\n    isVisualRefresh: isVisualRefresh,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled || function () {\n      return !includes(selectableItemsTypes, 'objects');\n    },\n    columnDefinitions: [{\n      id: 'Key',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey),\n      sortingField: 'Key',\n      cell: function (item) {\n        var isClickable = item.IsFolder || includes(selectableItemsTypes, 'versions');\n        return React.createElement(React.Fragment, null, React.createElement(InternalIcon, {\n          name: item.IsFolder ? 'folder' : 'file'\n        }), ' ', isClickable ? React.createElement(InternalLink, {\n          onFollow: function () {\n            return item.Key && onDrilldown(item);\n          },\n          variant: \"link\"\n        }, item.Key) : item.Key);\n      },\n      minWidth: '250px'\n    }, {\n      id: 'LastModified',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified),\n      sortingComparator: function (a, b) {\n        return compareDates(a.LastModified, b.LastModified);\n      },\n      cell: function (item) {\n        return formatDefault(item.LastModified);\n      }\n    }, {\n      id: 'Size',\n      header: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize,\n      ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize),\n      sortingField: 'Size',\n      cell: function (item) {\n        return formatSize(item.Size);\n      }\n    }],\n    onSelect: function (item) {\n      var _a;\n\n      return onSelect((_a = item === null || item === void 0 ? void 0 : item.Key) !== null && _a !== void 0 ? _a : '');\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["React","compareDates","getColumnAriaLabel","includes","InternalIcon","InternalLink","formatSize","formatDefault","BasicS3Table","getSharedI18Strings","joinObjectPath","ObjectsTable","_a","forwardFocusRef","pathSegments","i18nStrings","isVisualRefresh","isItemDisabled","selectableItemsTypes","fetchData","visibleColumns","onDrilldown","onSelect","key","join","trackBy","rest","bucketName","header","selectionObjects","filteringAriaLabel","labelFiltering","filteringPlaceholder","selectionObjectsSearchPlaceholder","loadingText","selectionObjectsLoading","emptyText","selectionObjectsNoItems","selectionLabels","labelsObjectsSelection","columnDefinitions","id","columnObjectKey","ariaLabel","sortingField","cell","isClickable","item","IsFolder","name","onFollow","Key","variant","minWidth","columnObjectLastModified","sortingComparator","a","b","LastModified","columnObjectSize","Size"],"sourceRoot":"","sources":["../../../../src/s3-resource-selector/s3-modal/objects-table.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport InternalIcon from '../../icon/internal';\nimport InternalLink from '../../link/internal';\nimport { TableProps } from '../../table/interfaces';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\n\ninterface ObjectsTableProps {\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  pathSegments: ReadonlyArray<string>;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<S3ResourceSelectorProps.Object> | undefined;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchData: S3ResourceSelectorProps['fetchObjects'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  isVisualRefresh?: boolean;\n  onDrilldown: (path: S3ResourceSelectorProps.Object) => void;\n  onSelect: (uri: string) => void;\n}\n\nexport function ObjectsTable({\n  forwardFocusRef,\n  pathSegments,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  selectableItemsTypes,\n  fetchData,\n  visibleColumns,\n  onDrilldown,\n  onSelect,\n}: ObjectsTableProps) {\n  return (\n    <BasicS3Table<S3ResourceSelectorProps.Object>\n      // remount fresh component every we change the path to reset the inner state (e.g. selection/filtering)\n      key={pathSegments.join('/')}\n      forwardFocusRef={forwardFocusRef}\n      trackBy=\"Key\"\n      fetchData={() => {\n        const [bucketName, ...rest] = pathSegments;\n        return fetchData(bucketName, joinObjectPath(rest));\n      }}\n      i18nStrings={{\n        ...getSharedI18Strings(i18nStrings),\n        header: i18nStrings?.selectionObjects,\n        filteringAriaLabel: i18nStrings?.labelFiltering(i18nStrings?.selectionObjects),\n        filteringPlaceholder: i18nStrings?.selectionObjectsSearchPlaceholder,\n        loadingText: i18nStrings?.selectionObjectsLoading,\n        emptyText: i18nStrings?.selectionObjectsNoItems,\n        selectionLabels: i18nStrings?.labelsObjectsSelection,\n      }}\n      isVisualRefresh={isVisualRefresh}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled || (() => !includes(selectableItemsTypes, 'objects'))}\n      columnDefinitions={[\n        {\n          id: 'Key',\n          header: i18nStrings?.columnObjectKey,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnObjectKey),\n          sortingField: 'Key',\n          cell: item => {\n            const isClickable = item.IsFolder || includes(selectableItemsTypes, 'versions');\n            return (\n              <>\n                <InternalIcon name={item.IsFolder ? 'folder' : 'file'} />{' '}\n                {isClickable ? (\n                  <InternalLink onFollow={() => item.Key && onDrilldown(item)} variant=\"link\">\n                    {item.Key}\n                  </InternalLink>\n                ) : (\n                  item.Key\n                )}\n              </>\n            );\n          },\n          minWidth: '250px',\n        },\n        {\n          id: 'LastModified',\n          header: i18nStrings?.columnObjectLastModified,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnObjectLastModified),\n          sortingComparator: (a, b) => compareDates(a.LastModified, b.LastModified),\n          cell: item => formatDefault(item.LastModified),\n        },\n        {\n          id: 'Size',\n          header: i18nStrings?.columnObjectSize,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnObjectSize),\n          sortingField: 'Size',\n          cell: item => formatSize(item.Size),\n        },\n      ]}\n      onSelect={item => onSelect(item?.Key ?? '')}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}