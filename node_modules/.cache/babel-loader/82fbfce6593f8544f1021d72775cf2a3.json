{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback } from 'react';\nimport InternalIcon from '../icon/internal';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\n\nvar SelectToggle = function (_a) {\n  var controlId = _a.controlId,\n      allHidden = _a.allHidden,\n      expanded = _a.expanded,\n      numberOfHiddenOptions = _a.numberOfHiddenOptions,\n      onClick = _a.onClick,\n      _b = _a.i18nStrings,\n      i18nStrings = _b === void 0 ? {} : _b;\n  var focusVisible = useFocusVisible();\n  var numberOfHiddenOptionLabel = allHidden ? numberOfHiddenOptions : \"+\".concat(numberOfHiddenOptions);\n  var description = expanded ? i18nStrings.limitShowFewer : \"\".concat(i18nStrings.limitShowMore || '', \" (\").concat(numberOfHiddenOptionLabel, \")\");\n  var handleClick = useCallback(function () {\n    fireNonCancelableEvent(onClick, null);\n  }, [onClick]);\n  return React.createElement(\"button\", __assign({\n    type: \"button\",\n    className: styles.toggle,\n    onClick: handleClick,\n    \"aria-controls\": controlId,\n    \"aria-expanded\": expanded\n  }, focusVisible), React.createElement(InternalIcon, {\n    name: expanded ? 'treeview-collapse' : 'treeview-expand'\n  }), React.createElement(\"span\", {\n    className: styles.description\n  }, description));\n};\n\nexport default SelectToggle;","map":{"version":3,"mappings":"kCAAA;AACA;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAAoCC,sBAApC,QAAkE,oBAAlE;AAGA,OAAOC,MAAP,MAAmB,iBAAnB;;AAUA,IAAMC,YAAY,GAAG,UAACC,EAAD,EAOD;MANlBC,SAAS;MACTC,SAAS;MACTC,QAAQ;MACRC,qBAAqB;MACrBC,OAAO;MACPC;MAAAC,WAAW,mBAAG,EAAH,GAAKD;EAEhB,IAAME,YAAY,GAAGZ,eAAe,EAApC;EACA,IAAMa,yBAAyB,GAAGP,SAAS,GAAGE,qBAAH,GAA2B,WAAIA,qBAAJ,CAAtE;EACA,IAAMM,WAAW,GAAGP,QAAQ,GACxBI,WAAW,CAACI,cADY,GAExB,UAAGJ,WAAW,CAACK,aAAZ,IAA6B,EAAhC,EAAkC,IAAlC,EAAkCC,MAAlC,CAAuCJ,yBAAvC,EAAgE,GAAhE,CAFJ;EAIA,IAAMK,WAAW,GAAGpB,WAAW,CAAC;IAC9BG,sBAAsB,CAACQ,OAAD,EAAU,IAAV,CAAtB;EACD,CAF8B,EAE5B,CAACA,OAAD,CAF4B,CAA/B;EAIA,OACEZ;IACEsB,IAAI,EAAC,QADP;IAEEC,SAAS,EAAElB,MAAM,CAACmB,MAFpB;IAGEZ,OAAO,EAAES,WAHX;IAGsB,iBACLb,SAJjB;IAI0B,iBACTE;EALjB,GAMMK,YANN,GAQEf,oBAACE,YAAD,EAAa;IAACuB,IAAI,EAAEf,QAAQ,GAAG,mBAAH,GAAyB;EAAxC,CAAb,CARF,EASEV;IAAMuB,SAAS,EAAElB,MAAM,CAACY;EAAxB,GAAsCA,WAAtC,CATF,CADF;AAaD,CA/BD;;AAiCA,eAAeX,YAAf","names":["React","useCallback","InternalIcon","useFocusVisible","fireNonCancelableEvent","styles","SelectToggle","_a","controlId","allHidden","expanded","numberOfHiddenOptions","onClick","_b","i18nStrings","focusVisible","numberOfHiddenOptionLabel","description","limitShowFewer","limitShowMore","concat","handleClick","type","className","toggle","name"],"sourceRoot":"","sources":["../../../src/token-group/toggle.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport InternalIcon from '../icon/internal';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { NonCancelableEventHandler, fireNonCancelableEvent } from '../internal/events';\n\nimport { TokenGroupProps } from './interfaces';\nimport styles from './styles.css.js';\nexport interface SelectToggleProps {\n  controlId: string;\n  allHidden: boolean;\n  expanded: boolean;\n  numberOfHiddenOptions: number;\n  onClick?: NonCancelableEventHandler<null>;\n  i18nStrings?: Pick<TokenGroupProps.I18nStrings, 'limitShowFewer' | 'limitShowMore'>;\n}\n\nconst SelectToggle = ({\n  controlId,\n  allHidden,\n  expanded,\n  numberOfHiddenOptions,\n  onClick,\n  i18nStrings = {},\n}: SelectToggleProps) => {\n  const focusVisible = useFocusVisible();\n  const numberOfHiddenOptionLabel = allHidden ? numberOfHiddenOptions : `+${numberOfHiddenOptions}`;\n  const description = expanded\n    ? i18nStrings.limitShowFewer\n    : `${i18nStrings.limitShowMore || ''} (${numberOfHiddenOptionLabel})`;\n\n  const handleClick = useCallback(() => {\n    fireNonCancelableEvent(onClick, null);\n  }, [onClick]);\n\n  return (\n    <button\n      type=\"button\"\n      className={styles.toggle}\n      onClick={handleClick}\n      aria-controls={controlId}\n      aria-expanded={expanded}\n      {...focusVisible}\n    >\n      <InternalIcon name={expanded ? 'treeview-collapse' : 'treeview-expand'} />\n      <span className={styles.description}>{description}</span>\n    </button>\n  );\n};\n\nexport default SelectToggle;\n"]},"metadata":{},"sourceType":"module"}