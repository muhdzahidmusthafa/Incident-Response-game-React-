{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport InternalMixedLineBarChart from '../mixed-line-bar-chart/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nfunction LineChart(_a) {\n  var _b = _a.series,\n      series = _b === void 0 ? [] : _b,\n      _c = _a.height,\n      height = _c === void 0 ? 500 : _c,\n      _d = _a.xScaleType,\n      xScaleType = _d === void 0 ? 'linear' : _d,\n      _e = _a.yScaleType,\n      yScaleType = _e === void 0 ? 'linear' : _e,\n      _f = _a.detailPopoverSize,\n      detailPopoverSize = _f === void 0 ? 'medium' : _f,\n      _g = _a.statusType,\n      statusType = _g === void 0 ? 'finished' : _g,\n      _h = _a.emphasizeBaselineAxis,\n      emphasizeBaselineAxis = _h === void 0 ? true : _h,\n      props = __rest(_a, [\"series\", \"height\", \"xScaleType\", \"yScaleType\", \"detailPopoverSize\", \"statusType\", \"emphasizeBaselineAxis\"]);\n\n  var baseComponentProps = useBaseComponent('LineChart');\n  var baseProps = getBaseProps(props);\n  var className = clsx(baseProps.className, styles.root);\n  return React.createElement(InternalMixedLineBarChart, __assign({}, props, baseComponentProps, {\n    className: className,\n    height: height,\n    xScaleType: xScaleType,\n    yScaleType: yScaleType,\n    stackedBars: false,\n    horizontalBars: false,\n    series: series,\n    detailPopoverSize: detailPopoverSize,\n    statusType: statusType,\n    emphasizeBaselineAxis: emphasizeBaselineAxis\n  }));\n}\n\napplyDisplayName(LineChart, 'LineChart');\nexport default LineChart;","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,yBAAP,MAAsC,kCAAtC;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;;AAIA,SAASC,SAAT,CAAqDC,EAArD,EASoB;EARlB;EAAA,UAAM,mBAAG,EAAH,GAAKC,EAAX;EAAA,IACAC,cADA;EAAA,IACAC,MAAM,mBAAG,GAAH,GAAMD,EADZ;EAAA,IAEAE,kBAFA;EAAA,IAEAC,UAAU,mBAAG,QAAH,GAAWD,EAFrB;EAAA,IAGAE,kBAHA;EAAA,IAGAC,UAAU,mBAAG,QAAH,GAAWD,EAHrB;EAAA,IAIAE,yBAJA;EAAA,IAIAC,iBAAiB,mBAAG,QAAH,GAAWD,EAJ5B;EAAA,IAKAE,kBALA;EAAA,IAKAC,UAAU,mBAAG,UAAH,GAAaD,EALvB;EAAA,IAMAE,6BANA;EAAA,IAMAC,qBAAqB,mBAAG,IAAH,GAAOD,EAN5B;EAAA,IAOGE,KAAK,cAR2C,4GAQ3C,CAPR;;EASA,IAAMC,kBAAkB,GAAGjB,gBAAgB,CAAC,WAAD,CAA3C;EACA,IAAMkB,SAAS,GAAGrB,YAAY,CAACmB,KAAD,CAA9B;EACA,IAAMG,SAAS,GAAGxB,IAAI,CAACuB,SAAS,CAACC,SAAX,EAAsBrB,MAAM,CAACsB,IAA7B,CAAtB;EAEA,OACE1B,oBAACK,yBAAD,EAA0BsB,aACpBL,KADoB,EAEpBC,kBAFoB,EAEF;IACtBE,SAAS,EAAEA,SADW;IAEtBd,MAAM,EAAEA,MAFc;IAGtBE,UAAU,EAAEA,UAHU;IAItBE,UAAU,EAAEA,UAJU;IAKtBa,WAAW,EAAE,KALS;IAMtBC,cAAc,EAAE,KANM;IAOtBC,MAAM,EAAEA,MAPc;IAQtBb,iBAAiB,EAAEA,iBARG;IAStBE,UAAU,EAAEA,UATU;IAUtBE,qBAAqB,EAAEA;EAVD,CAFE,CAA1B,CADF;AAgBD;;AAEDnB,gBAAgB,CAACK,SAAD,EAAY,WAAZ,CAAhB;AAEA,eAAeA,SAAf","names":["React","clsx","applyDisplayName","getBaseProps","styles","InternalMixedLineBarChart","useBaseComponent","LineChart","_a","_b","_c","height","_d","xScaleType","_e","yScaleType","_f","detailPopoverSize","_g","statusType","_h","emphasizeBaselineAxis","props","baseComponentProps","baseProps","className","root","__assign","stackedBars","horizontalBars","series"],"sourceRoot":"","sources":["../../../src/line-chart/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { LineChartProps } from './interfaces';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport InternalMixedLineBarChart from '../mixed-line-bar-chart/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { LineChartProps };\n\nfunction LineChart<T extends number | string | Date>({\n  series = [],\n  height = 500,\n  xScaleType = 'linear',\n  yScaleType = 'linear',\n  detailPopoverSize = 'medium',\n  statusType = 'finished',\n  emphasizeBaselineAxis = true,\n  ...props\n}: LineChartProps<T>) {\n  const baseComponentProps = useBaseComponent('LineChart');\n  const baseProps = getBaseProps(props);\n  const className = clsx(baseProps.className, styles.root);\n\n  return (\n    <InternalMixedLineBarChart\n      {...props}\n      {...baseComponentProps}\n      className={className}\n      height={height}\n      xScaleType={xScaleType}\n      yScaleType={yScaleType}\n      stackedBars={false}\n      horizontalBars={false}\n      series={series}\n      detailPopoverSize={detailPopoverSize}\n      statusType={statusType}\n      emphasizeBaselineAxis={emphasizeBaselineAxis}\n    />\n  );\n}\n\napplyDisplayName(LineChart, 'LineChart');\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}