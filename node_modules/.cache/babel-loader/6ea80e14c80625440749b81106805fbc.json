{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useRef } from 'react';\n/**\n * A callback that stays stable between renders even as the dependencies change.\n * Not a recommended React pattern, so it should be used sparingly and only if\n * the callback is an event handler (i.e. not used during rendering) and causing\n * clear performance issues.\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n */\n\nexport function useStableEventHandler(fn) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = fn;\n  });\n  return useCallback(function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.apply(undefined, args);\n  }, []);\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;AAEA;;;;;;;;;AAQA,OAAM,SAAUC,qBAAV,CAAmEC,EAAnE,EAAwE;EAC5E,IAAMC,GAAG,GAAGH,MAAM,EAAlB;EAEAD,SAAS,CAAC;IACRI,GAAG,CAACC,OAAJ,GAAcF,EAAd;EACD,CAFQ,CAAT;EAIA,OAAOJ,WAAW,CAAC;;;IAAC;;SAAA,yCAAc;MAAdO;;;IAAmB,gBAAG,CAACD,OAAJ,MAAW,IAAX,IAAWE,aAAX,GAAW,MAAX,GAAWA,GAAEC,KAAF,CAAQC,SAAR,EAAmBH,IAAnB,CAAX;EAAmC,CAAxD,EAA0D,EAA1D,CAAlB;AACD","names":["useCallback","useEffect","useRef","useStableEventHandler","fn","ref","current","args","_a","apply","undefined"],"sourceRoot":"","sources":["../../../../../src/internal/hooks/use-stable-event-handler/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useRef } from 'react';\n\n/**\n * A callback that stays stable between renders even as the dependencies change.\n * Not a recommended React pattern, so it should be used sparingly and only if\n * the callback is an event handler (i.e. not used during rendering) and causing\n * clear performance issues.\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n */\nexport function useStableEventHandler<T extends (...args: any[]) => any>(fn: T): T {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = fn;\n  });\n\n  return useCallback((...args: any[]) => ref.current?.apply(undefined, args), []) as T;\n}\n"]},"metadata":{},"sourceType":"module"}