{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '../logging';\nvar allowedJavascriptUrls = ['javascript:void(0)', 'javascript:void(0);', 'javascript:;'];\nexport function checkSafeUrl(component, url) {\n  if (!url) {\n    return;\n  }\n\n  if (allowedJavascriptUrls.indexOf(url.toLowerCase()) !== -1) {\n    return;\n  }\n\n  var parsedUrl;\n\n  try {\n    parsedUrl = new URL(url);\n  } catch (e) {\n    // If the URL cannot be parsed by the browser, it likely does not pose a security risk.\n    return;\n  }\n\n  if (parsedUrl.protocol === 'javascript:') {\n    warnOnce(component, \"A javascript: URL was blocked as a security precaution. The URL was \\\"\".concat(url, \"\\\".\")); // This mirrors the error message that React will use:\n    // https://github.com/facebook/react/blob/a724a3b578dce77d427bef313102a4d0e978d9b4/packages/react-dom/src/shared/sanitizeURL.js#L30\n\n    throw new Error(\"A javascript: URL was blocked as a security precaution.\");\n  }\n\n  return;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,QAAT,QAAyB,YAAzB;AAEA,IAAMC,qBAAqB,GAAG,CAAC,oBAAD,EAAuB,qBAAvB,EAA8C,cAA9C,CAA9B;AAEA,OAAM,SAAUC,YAAV,CAAuBC,SAAvB,EAA0CC,GAA1C,EAAwE;EAC5E,IAAI,CAACA,GAAL,EAAU;IACR;EACD;;EACD,IAAIH,qBAAqB,CAACI,OAAtB,CAA8BD,GAAG,CAACE,WAAJ,EAA9B,MAAqD,CAAC,CAA1D,EAA6D;IAC3D;EACD;;EAED,IAAIC,SAAJ;;EACA,IAAI;IACFA,SAAS,GAAG,IAAIC,GAAJ,CAAQJ,GAAR,CAAZ;EACD,CAFD,CAEE,OAAOK,CAAP,EAAU;IACV;IACA;EACD;;EAED,IAAIF,SAAS,CAACG,QAAV,KAAuB,aAA3B,EAA0C;IACxCV,QAAQ,CAACG,SAAD,EAAY,gFAAwEC,GAAxE,EAA2E,KAA3E,CAAZ,CAAR,CADwC,CAExC;IACA;;IACA,MAAM,IAAIO,KAAJ,CAAU,yDAAV,CAAN;EACD;;EAED;AACD","names":["warnOnce","allowedJavascriptUrls","checkSafeUrl","component","url","indexOf","toLowerCase","parsedUrl","URL","e","protocol","Error"],"sourceRoot":"","sources":["../../../../src/internal/utils/check-safe-url.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '../logging';\n\nconst allowedJavascriptUrls = ['javascript:void(0)', 'javascript:void(0);', 'javascript:;'];\n\nexport function checkSafeUrl(component: string, url: string | undefined | null): void {\n  if (!url) {\n    return;\n  }\n  if (allowedJavascriptUrls.indexOf(url.toLowerCase()) !== -1) {\n    return;\n  }\n\n  let parsedUrl: URL;\n  try {\n    parsedUrl = new URL(url);\n  } catch (e) {\n    // If the URL cannot be parsed by the browser, it likely does not pose a security risk.\n    return;\n  }\n\n  if (parsedUrl.protocol === 'javascript:') {\n    warnOnce(component, `A javascript: URL was blocked as a security precaution. The URL was \"${url}\".`);\n    // This mirrors the error message that React will use:\n    // https://github.com/facebook/react/blob/a724a3b578dce77d427bef313102a4d0e978d9b4/packages/react-dom/src/shared/sanitizeURL.js#L30\n    throw new Error(`A javascript: URL was blocked as a security precaution.`);\n  }\n\n  return;\n}\n"]},"metadata":{},"sourceType":"module"}