{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport useFocusVisible from '../../hooks/focus-visible';\nimport { useUniqueId } from '../../hooks/use-unique-id';\n\nfunction joinString(values) {\n  return values.filter(function (value) {\n    return !!value;\n  }).join(' ');\n}\n\nexport default function AbstractSwitch(_a) {\n  var _b, _c;\n\n  var controlId = _a.controlId,\n      controlClassName = _a.controlClassName,\n      disabled = _a.disabled,\n      nativeControl = _a.nativeControl,\n      styledControl = _a.styledControl,\n      label = _a.label,\n      description = _a.description,\n      descriptionBottomPadding = _a.descriptionBottomPadding,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby,\n      ariaDescribedby = _a.ariaDescribedby,\n      withoutLabel = _a.withoutLabel,\n      __internalRootRef = _a.__internalRootRef,\n      rest = __rest(_a, [\"controlId\", \"controlClassName\", \"disabled\", \"nativeControl\", \"styledControl\", \"label\", \"description\", \"descriptionBottomPadding\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescribedby\", \"withoutLabel\", \"__internalRootRef\"]);\n\n  var uniqueId = useUniqueId();\n  var id = controlId || uniqueId;\n  var focusVisible = useFocusVisible();\n  var wrapperId = \"\".concat(id, \"-wrapper\");\n  var labelId = \"\".concat(id, \"-label\");\n  var descriptionId = \"\".concat(id, \"-description\");\n  var WrapperElement = withoutLabel ? 'div' : 'label';\n  var wrapperAttributes = {};\n\n  if (!withoutLabel) {\n    wrapperAttributes.id = wrapperId;\n    wrapperAttributes.htmlFor = id;\n  }\n\n  var ariaLabelledByIds = [];\n\n  if (label) {\n    ariaLabelledByIds.push(labelId);\n  }\n\n  if (ariaLabelledby) {\n    ariaLabelledByIds.push(ariaLabelledby);\n  }\n\n  var ariaDescriptons = [];\n\n  if (ariaDescribedby) {\n    ariaDescriptons.push(ariaDescribedby);\n  }\n\n  if (description) {\n    ariaDescriptons.push(descriptionId);\n  }\n\n  return React.createElement(\"div\", __assign({}, rest, {\n    className: clsx(styles.wrapper, rest.className),\n    ref: __internalRootRef\n  }), React.createElement(WrapperElement, __assign({}, wrapperAttributes, {\n    className: styles['label-wrapper'],\n    \"aria-disabled\": disabled ? 'true' : undefined\n  }), React.createElement(\"div\", {\n    className: clsx(styles.control, controlClassName)\n  }, styledControl, nativeControl(__assign(__assign({}, focusVisible), {\n    id: id,\n    disabled: disabled,\n    'aria-describedby': ariaDescriptons.length ? joinString(ariaDescriptons) : undefined,\n    'aria-labelledby': ariaLabelledByIds.length ? joinString(ariaLabelledByIds) : undefined,\n    'aria-label': ariaLabel\n  })), React.createElement(\"div\", {\n    className: styles.outline\n  })), React.createElement(\"div\", {\n    className: clsx(styles.content, !label && !description && styles['empty-content'])\n  }, label && React.createElement(\"div\", {\n    id: labelId,\n    className: clsx(styles.label, (_b = {}, _b[styles['label-disabled']] = disabled, _b))\n  }, label), description && React.createElement(\"div\", {\n    id: descriptionId,\n    className: clsx(styles.description, (_c = {}, _c[styles['description-disabled']] = disabled, _c[styles['description-bottom-padding']] = descriptionBottomPadding, _c))\n  }, description))));\n}","map":{"version":3,"mappings":"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","names":["React","clsx","styles","useFocusVisible","useUniqueId","joinString","values","filter","value","join","AbstractSwitch","_a","controlClassName","disabled","nativeControl","styledControl","label","description","descriptionBottomPadding","ariaLabel","ariaLabelledby","ariaDescribedby","withoutLabel","__internalRootRef","rest","uniqueId","id","controlId","focusVisible","wrapperId","labelId","descriptionId","WrapperElement","wrapperAttributes","htmlFor","ariaLabelledByIds","push","ariaDescriptons","className","wrapper","ref","__assign","undefined","control","length","outline","content","_b","_c"],"sourceRoot":"","sources":["../../../../../src/internal/components/abstract-switch/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport useFocusVisible from '../../hooks/focus-visible';\nimport { useUniqueId } from '../../hooks/use-unique-id';\nimport { InternalBaseComponentProps } from '../../hooks/use-base-component/index.js';\n\nexport interface AbstractSwitchProps extends React.HTMLAttributes<HTMLElement>, InternalBaseComponentProps {\n  controlId?: string;\n  controlClassName: string;\n  disabled?: boolean;\n  nativeControl: (props: React.InputHTMLAttributes<HTMLInputElement>) => React.ReactElement;\n  styledControl: React.ReactElement;\n  label?: React.ReactNode;\n  description?: React.ReactNode;\n  descriptionBottomPadding?: boolean;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  withoutLabel?: boolean;\n}\n\nfunction joinString(values: (string | undefined)[]) {\n  return values.filter((value): value is string => !!value).join(' ');\n}\n\nexport default function AbstractSwitch({\n  controlId,\n  controlClassName,\n  disabled,\n  nativeControl,\n  styledControl,\n  label,\n  description,\n  descriptionBottomPadding,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescribedby,\n  withoutLabel,\n  __internalRootRef,\n  ...rest\n}: AbstractSwitchProps) {\n  const uniqueId = useUniqueId();\n  const id = controlId || uniqueId;\n\n  const focusVisible = useFocusVisible();\n  const wrapperId = `${id}-wrapper`;\n  const labelId = `${id}-label`;\n  const descriptionId = `${id}-description`;\n\n  const WrapperElement = withoutLabel ? 'div' : 'label';\n  const wrapperAttributes: Record<string, string | undefined> = {};\n  if (!withoutLabel) {\n    wrapperAttributes.id = wrapperId;\n    wrapperAttributes.htmlFor = id;\n  }\n\n  const ariaLabelledByIds = [];\n  if (label) {\n    ariaLabelledByIds.push(labelId);\n  }\n  if (ariaLabelledby) {\n    ariaLabelledByIds.push(ariaLabelledby);\n  }\n\n  const ariaDescriptons = [];\n  if (ariaDescribedby) {\n    ariaDescriptons.push(ariaDescribedby);\n  }\n  if (description) {\n    ariaDescriptons.push(descriptionId);\n  }\n\n  return (\n    <div {...rest} className={clsx(styles.wrapper, rest.className)} ref={__internalRootRef}>\n      <WrapperElement\n        {...wrapperAttributes}\n        className={styles['label-wrapper']}\n        aria-disabled={disabled ? 'true' : undefined}\n      >\n        <div className={clsx(styles.control, controlClassName)}>\n          {styledControl}\n          {nativeControl({\n            ...focusVisible,\n            id,\n            disabled,\n            'aria-describedby': ariaDescriptons.length ? joinString(ariaDescriptons) : undefined,\n            'aria-labelledby': ariaLabelledByIds.length ? joinString(ariaLabelledByIds) : undefined,\n            'aria-label': ariaLabel,\n          })}\n          {/*An empty div to display the outline, because the native control is invisible*/}\n          <div className={styles.outline} />\n        </div>\n        <div className={clsx(styles.content, !label && !description && styles['empty-content'])}>\n          {label && (\n            <div id={labelId} className={clsx(styles.label, { [styles['label-disabled']]: disabled })}>\n              {label}\n            </div>\n          )}\n          {description && (\n            <div\n              id={descriptionId}\n              className={clsx(styles.description, {\n                [styles['description-disabled']]: disabled,\n                [styles['description-bottom-padding']]: descriptionBottomPadding,\n              })}\n            >\n              {description}\n            </div>\n          )}\n        </div>\n      </WrapperElement>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}