{"ast":null,"code":"import { useOpenState } from '../../internal/components/options-list/utils/use-open-state';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../internal/events';\nimport { KeyCode } from '../../internal/keycode';\nimport { getItemTarget, isItemGroup, isLinkItem } from './utils';\nimport useHighlightedMenu from './use-highlighted-menu';\nexport function useButtonDropdown(_a) {\n  var items = _a.items,\n      onItemClick = _a.onItemClick,\n      onItemFollow = _a.onItemFollow,\n      hasExpandableGroups = _a.hasExpandableGroups,\n      _b = _a.isInRestrictedView,\n      isInRestrictedView = _b === void 0 ? false : _b,\n      usingMouse = _a.usingMouse;\n\n  var _c = useHighlightedMenu({\n    items: items,\n    hasExpandableGroups: hasExpandableGroups,\n    isInRestrictedView: isInRestrictedView\n  }),\n      targetItem = _c.targetItem,\n      isHighlighted = _c.isHighlighted,\n      isExpanded = _c.isExpanded,\n      highlightItem = _c.highlightItem,\n      moveHighlight = _c.moveHighlight,\n      expandGroup = _c.expandGroup,\n      collapseGroup = _c.collapseGroup,\n      reset = _c.reset;\n\n  var _d = useOpenState({\n    onClose: reset\n  }),\n      isOpen = _d.isOpen,\n      closeDropdown = _d.closeDropdown,\n      toggleDropdown = _d.toggleDropdown;\n\n  var onGroupToggle = function (item) {\n    return !isExpanded(item) ? expandGroup(item) : collapseGroup();\n  };\n\n  var onItemActivate = function (item, event) {\n    var details = {\n      id: item.id || 'undefined',\n      href: item.href,\n      external: item.external,\n      target: getItemTarget(item)\n    };\n\n    if (onItemFollow && item.href && isPlainLeftClick(event)) {\n      fireCancelableEvent(onItemFollow, details, event);\n    }\n\n    if (onItemClick) {\n      fireCancelableEvent(onItemClick, details, event);\n    }\n\n    closeDropdown();\n  };\n\n  var doVerticalNavigation = function (direction) {\n    if (isOpen) {\n      moveHighlight(direction);\n    }\n  };\n\n  var openAndSelectFirst = function (event) {\n    toggleDropdown();\n    moveHighlight(1);\n    event.preventDefault();\n  };\n\n  var actOnParentDropdown = function (event) {\n    // if there is no highlighted item we act on the trigger by opening or closing dropdown\n    if (!targetItem) {\n      if (isOpen && !isInRestrictedView) {\n        toggleDropdown();\n      } else {\n        openAndSelectFirst(event);\n      }\n    } else {\n      if (isItemGroup(targetItem)) {\n        onGroupToggle(targetItem, event);\n      } else {\n        onItemActivate(targetItem, event);\n      }\n    }\n  };\n\n  var activate = function (event, isEnter) {\n    usingMouse.current = false; // if item is a link we rely on default behavior of an anchor, no need to prevent\n\n    if (targetItem && isLinkItem(targetItem) && isEnter) {\n      return;\n    }\n\n    event.preventDefault();\n    actOnParentDropdown(event);\n  };\n\n  var onKeyDown = function (event) {\n    switch (event.keyCode) {\n      case KeyCode.down:\n        {\n          doVerticalNavigation(1);\n          event.preventDefault();\n          break;\n        }\n\n      case KeyCode.up:\n        {\n          doVerticalNavigation(-1);\n          event.preventDefault();\n          break;\n        }\n\n      case KeyCode.space:\n        {\n          // Prevent scrolling the list of items and highlighting the trigger\n          usingMouse.current = false;\n          event.preventDefault();\n          break;\n        }\n\n      case KeyCode.enter:\n        {\n          if (!(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {\n            activate(event, true);\n          }\n\n          break;\n        }\n\n      case KeyCode.left:\n      case KeyCode.right:\n        {\n          if (targetItem && !targetItem.disabled && isItemGroup(targetItem) && !isExpanded(targetItem)) {\n            expandGroup();\n          } else if (hasExpandableGroups) {\n            collapseGroup();\n          }\n\n          event.preventDefault();\n          break;\n        }\n\n      case KeyCode.escape:\n        {\n          closeDropdown();\n          event.preventDefault();\n          break;\n        }\n\n      case KeyCode.tab:\n        {\n          closeDropdown();\n          break;\n        }\n    }\n  };\n\n  var onKeyUp = function (event) {\n    // We need to handle activating items with Space separately because there is a bug\n    // in Firefox where changing the focus during a Space keydown event it will trigger\n    // unexpected click events on the new element: https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    if (event.keyCode === KeyCode.space && !(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {\n      activate(event);\n    }\n  };\n\n  return {\n    isOpen: isOpen,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isExpanded: isExpanded,\n    highlightItem: highlightItem,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    toggleDropdown: toggleDropdown\n  };\n}","map":{"version":3,"mappings":"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","names":["useOpenState","fireCancelableEvent","isPlainLeftClick","KeyCode","getItemTarget","isItemGroup","isLinkItem","useHighlightedMenu","useButtonDropdown","_a","items","onItemClick","onItemFollow","hasExpandableGroups","_b","isInRestrictedView","usingMouse","targetItem","isHighlighted","isExpanded","highlightItem","moveHighlight","expandGroup","collapseGroup","reset","onClose","isOpen","closeDropdown","toggleDropdown","onGroupToggle","item","onItemActivate","event","details","id","href","external","target","doVerticalNavigation","direction","openAndSelectFirst","preventDefault","actOnParentDropdown","activate","isEnter","current","onKeyDown","keyCode","down","up","space","enter","disabled","left","right","escape","tab","onKeyUp"],"sourceRoot":"","sources":["../../../../src/button-dropdown/utils/use-button-dropdown.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { useOpenState } from '../../internal/components/options-list/utils/use-open-state';\nimport { ButtonDropdownProps, ButtonDropdownSettings, GroupToggle, HighlightProps, ItemActivate } from '../interfaces';\nimport { fireCancelableEvent, CancelableEventHandler, isPlainLeftClick } from '../../internal/events';\nimport { KeyCode } from '../../internal/keycode';\nimport { getItemTarget, isItemGroup, isLinkItem } from './utils';\nimport useHighlightedMenu from './use-highlighted-menu';\n\ninterface UseButtonDropdownOptions extends ButtonDropdownSettings {\n  items: ButtonDropdownProps.Items;\n  onItemClick?: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;\n  onItemFollow?: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;\n  usingMouse: React.MutableRefObject<boolean>;\n}\n\ninterface UseButtonDropdownApi extends HighlightProps {\n  isOpen: boolean;\n  onKeyDown: (event: React.KeyboardEvent) => void;\n  onKeyUp: (event: React.KeyboardEvent) => void;\n  onItemActivate: ItemActivate;\n  onGroupToggle: GroupToggle;\n  toggleDropdown: () => void;\n}\n\nexport function useButtonDropdown({\n  items,\n  onItemClick,\n  onItemFollow,\n  hasExpandableGroups,\n  isInRestrictedView = false,\n  usingMouse,\n}: UseButtonDropdownOptions): UseButtonDropdownApi {\n  const { targetItem, isHighlighted, isExpanded, highlightItem, moveHighlight, expandGroup, collapseGroup, reset } =\n    useHighlightedMenu({\n      items,\n      hasExpandableGroups,\n      isInRestrictedView,\n    });\n\n  const { isOpen, closeDropdown, toggleDropdown } = useOpenState({ onClose: reset });\n\n  const onGroupToggle: GroupToggle = item => (!isExpanded(item) ? expandGroup(item) : collapseGroup());\n\n  const onItemActivate: ItemActivate = (item, event) => {\n    const details = {\n      id: item.id || 'undefined',\n      href: item.href,\n      external: item.external,\n      target: getItemTarget(item),\n    };\n    if (onItemFollow && item.href && isPlainLeftClick(event)) {\n      fireCancelableEvent(onItemFollow, details, event);\n    }\n    if (onItemClick) {\n      fireCancelableEvent(onItemClick, details, event);\n    }\n    closeDropdown();\n  };\n\n  const doVerticalNavigation = (direction: -1 | 1) => {\n    if (isOpen) {\n      moveHighlight(direction);\n    }\n  };\n\n  const openAndSelectFirst = (event: React.KeyboardEvent) => {\n    toggleDropdown();\n    moveHighlight(1);\n    event.preventDefault();\n  };\n\n  const actOnParentDropdown = (event: React.KeyboardEvent) => {\n    // if there is no highlighted item we act on the trigger by opening or closing dropdown\n    if (!targetItem) {\n      if (isOpen && !isInRestrictedView) {\n        toggleDropdown();\n      } else {\n        openAndSelectFirst(event);\n      }\n    } else {\n      if (isItemGroup(targetItem)) {\n        onGroupToggle(targetItem, event);\n      } else {\n        onItemActivate(targetItem, event);\n      }\n    }\n  };\n\n  const activate = (event: React.KeyboardEvent, isEnter?: boolean) => {\n    usingMouse.current = false;\n\n    // if item is a link we rely on default behavior of an anchor, no need to prevent\n    if (targetItem && isLinkItem(targetItem) && isEnter) {\n      return;\n    }\n\n    event.preventDefault();\n    actOnParentDropdown(event);\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case KeyCode.down: {\n        doVerticalNavigation(1);\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.up: {\n        doVerticalNavigation(-1);\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.space: {\n        // Prevent scrolling the list of items and highlighting the trigger\n        usingMouse.current = false;\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.enter: {\n        if (!targetItem?.disabled) {\n          activate(event, true);\n        }\n        break;\n      }\n      case KeyCode.left:\n      case KeyCode.right: {\n        if (targetItem && !targetItem.disabled && isItemGroup(targetItem) && !isExpanded(targetItem)) {\n          expandGroup();\n        } else if (hasExpandableGroups) {\n          collapseGroup();\n        }\n\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.escape: {\n        closeDropdown();\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.tab: {\n        closeDropdown();\n        break;\n      }\n    }\n  };\n  const onKeyUp = (event: React.KeyboardEvent) => {\n    // We need to handle activating items with Space separately because there is a bug\n    // in Firefox where changing the focus during a Space keydown event it will trigger\n    // unexpected click events on the new element: https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    if (event.keyCode === KeyCode.space && !targetItem?.disabled) {\n      activate(event);\n    }\n  };\n\n  return {\n    isOpen,\n    targetItem,\n    isHighlighted,\n    isExpanded,\n    highlightItem,\n    onKeyDown,\n    onKeyUp,\n    onItemActivate,\n    onGroupToggle,\n    toggleDropdown,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}