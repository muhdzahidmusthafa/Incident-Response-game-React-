{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalLink from '../link/internal';\nimport InternalBox from '../box/internal';\nimport styles from './styles.css.js';\nvar Statuses;\n\n(function (Statuses) {\n  Statuses[\"Active\"] = \"active\";\n  Statuses[\"Unvisited\"] = \"unvisited\";\n  Statuses[\"Visited\"] = \"visited\";\n  Statuses[\"Next\"] = \"next\";\n})(Statuses || (Statuses = {}));\n\nexport default function Navigation(_a) {\n  var activeStepIndex = _a.activeStepIndex,\n      farthestStepIndex = _a.farthestStepIndex,\n      allowSkipTo = _a.allowSkipTo,\n      hidden = _a.hidden,\n      i18nStrings = _a.i18nStrings,\n      isVisualRefresh = _a.isVisualRefresh,\n      isLoadingNextStep = _a.isLoadingNextStep,\n      onStepClick = _a.onStepClick,\n      onSkipToClick = _a.onSkipToClick,\n      steps = _a.steps;\n  return React.createElement(\"nav\", {\n    className: clsx(styles.navigation, hidden && styles.hidden, isVisualRefresh && styles.refresh)\n  }, React.createElement(\"ul\", null, steps.map(function (step, index) {\n    return isVisualRefresh ? React.createElement(NavigationStepVisualRefresh, {\n      i18nStrings: i18nStrings,\n      index: index,\n      key: index,\n      onStepClick: onStepClick,\n      onSkipToClick: onSkipToClick,\n      status: getStatus(index),\n      step: step\n    }) : React.createElement(NavigationStepClassic, {\n      i18nStrings: i18nStrings,\n      index: index,\n      key: index,\n      onStepClick: onStepClick,\n      onSkipToClick: onSkipToClick,\n      status: getStatus(index),\n      step: step\n    });\n  })));\n\n  function getStatus(index) {\n    if (activeStepIndex === index) {\n      return Statuses.Active;\n    }\n\n    if (isLoadingNextStep) {\n      return Statuses.Unvisited;\n    }\n\n    if (farthestStepIndex >= index) {\n      return Statuses.Visited;\n    }\n\n    if (allowSkipTo && canSkip(activeStepIndex + 1, index)) {\n      return Statuses.Next;\n    }\n\n    return Statuses.Unvisited;\n  }\n\n  function canSkip(fromIndex, toIndex) {\n    var index = fromIndex;\n\n    do {\n      if (!steps[index].isOptional) {\n        return false;\n      }\n\n      index++;\n    } while (index < toIndex);\n\n    return true;\n  }\n}\n\nfunction NavigationStepVisualRefresh(_a) {\n  var _b;\n\n  var i18nStrings = _a.i18nStrings,\n      index = _a.index,\n      onStepClick = _a.onStepClick,\n      onSkipToClick = _a.onSkipToClick,\n      status = _a.status,\n      step = _a.step;\n\n  function handleStepInteraction() {\n    if (status === Statuses.Visited) {\n      onStepClick(index);\n    }\n\n    if (status === Statuses.Next) {\n      onSkipToClick(index);\n    }\n  }\n\n  var state = {\n    active: 'active',\n    unvisited: 'disabled',\n    visited: 'enabled',\n    next: 'enabled'\n  }[status];\n  var linkClassName = clsx(styles['navigation-link'], (_b = {}, _b[styles['navigation-link-active']] = status === Statuses.Active, _b[styles['navigation-link-disabled']] = status === Statuses.Unvisited, _b));\n  return React.createElement(\"li\", {\n    className: clsx(styles[\"\".concat(state)], styles['navigation-link-item'])\n  }, React.createElement(\"hr\", null), React.createElement(\"span\", {\n    className: clsx(styles.number, styles['navigation-link-label'])\n  }, i18nStrings.stepNumberLabel && i18nStrings.stepNumberLabel(index + 1), step.isOptional && React.createElement(\"i\", null, \" - \".concat(i18nStrings.optional))), React.createElement(\"a\", {\n    className: linkClassName,\n    \"aria-current\": status === Statuses.Active ? 'step' : undefined,\n    \"aria-disabled\": status === Statuses.Unvisited ? 'true' : undefined,\n    onClick: function (event) {\n      event.preventDefault();\n      handleStepInteraction();\n    },\n    onKeyDown: function (event) {\n      if (event.key === ' ' || event.key === 'Enter') {\n        event.preventDefault();\n      } // Enter activates the button on key down instead of key up.\n\n\n      if (event.key === 'Enter') {\n        handleStepInteraction();\n      }\n    },\n    onKeyUp: function (event) {\n      // Emulate button behavior, which also fires on space.\n      if (event.key === ' ') {\n        handleStepInteraction();\n      }\n    },\n    role: \"button\",\n    tabIndex: status === Statuses.Visited || status === Statuses.Next ? 0 : undefined\n  }, React.createElement(\"div\", {\n    className: clsx(styles.circle)\n  }), React.createElement(\"span\", {\n    className: clsx(styles.title)\n  }, step.title)));\n}\n\nfunction NavigationStepClassic(_a) {\n  var i18nStrings = _a.i18nStrings,\n      index = _a.index,\n      onStepClick = _a.onStepClick,\n      onSkipToClick = _a.onSkipToClick,\n      status = _a.status,\n      step = _a.step;\n  var spanClassName = clsx(styles['navigation-link'], status === Statuses.Active ? styles['navigation-link-active'] : styles['navigation-link-disabled']);\n  return React.createElement(\"li\", {\n    className: styles['navigation-link-item']\n  }, React.createElement(InternalBox, {\n    variant: \"small\",\n    className: styles['navigation-link-label'],\n    display: \"block\",\n    margin: {\n      bottom: 'xxs'\n    }\n  }, i18nStrings.stepNumberLabel && i18nStrings.stepNumberLabel(index + 1), step.isOptional && React.createElement(\"i\", null, \" - \".concat(i18nStrings.optional))), React.createElement(\"div\", null, status === Statuses.Visited || status === Statuses.Next ? React.createElement(InternalLink, {\n    className: clsx(styles['navigation-link']),\n    onFollow: function (evt) {\n      evt.preventDefault();\n      status === Statuses.Visited ? onStepClick(index) : onSkipToClick(index);\n    }\n  }, step.title) : React.createElement(\"span\", {\n    className: spanClassName,\n    \"aria-current\": status === Statuses.Active ? 'step' : undefined,\n    \"aria-disabled\": status === Statuses.Active ? undefined : 'true'\n  }, step.title)));\n}","map":{"version":3,"mappings":"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","names":["React","clsx","InternalLink","InternalBox","styles","Statuses","Navigation","_a","activeStepIndex","farthestStepIndex","allowSkipTo","hidden","i18nStrings","isVisualRefresh","isLoadingNextStep","onStepClick","onSkipToClick","steps","className","navigation","refresh","map","step","index","NavigationStepVisualRefresh","key","status","getStatus","NavigationStepClassic","Active","Unvisited","Visited","canSkip","Next","fromIndex","toIndex","isOptional","handleStepInteraction","state","active","unvisited","visited","next","linkClassName","_b","number","stepNumberLabel","optional","undefined","onClick","event","preventDefault","onKeyDown","onKeyUp","role","tabIndex","circle","title","spanClassName","variant","display","margin","bottom","onFollow","evt"],"sourceRoot":"","sources":["../../../src/wizard/wizard-navigation.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalLink from '../link/internal';\nimport InternalBox from '../box/internal';\nimport { WizardProps } from './interfaces';\nimport styles from './styles.css.js';\n\ninterface NavigationProps {\n  activeStepIndex: number;\n  farthestStepIndex: number;\n  allowSkipTo: boolean;\n  hidden: boolean;\n  i18nStrings: WizardProps.I18nStrings;\n  isVisualRefresh: boolean;\n  isLoadingNextStep: boolean;\n  onStepClick: (stepIndex: number) => void;\n  onSkipToClick: (stepIndex: number) => void;\n  steps: ReadonlyArray<WizardProps.Step>;\n}\n\ninterface NavigationStepProps {\n  i18nStrings: WizardProps.I18nStrings;\n  index: number;\n  onStepClick: (stepIndex: number) => void;\n  onSkipToClick: (stepIndex: number) => void;\n  status: string;\n  step: WizardProps.Step;\n}\n\nenum Statuses {\n  Active = 'active',\n  Unvisited = 'unvisited',\n  Visited = 'visited',\n  Next = 'next',\n}\n\nexport default function Navigation({\n  activeStepIndex,\n  farthestStepIndex,\n  allowSkipTo,\n  hidden,\n  i18nStrings,\n  isVisualRefresh,\n  isLoadingNextStep,\n  onStepClick,\n  onSkipToClick,\n  steps,\n}: NavigationProps) {\n  return (\n    <nav className={clsx(styles.navigation, hidden && styles.hidden, isVisualRefresh && styles.refresh)}>\n      <ul>\n        {steps.map((step, index: number) =>\n          isVisualRefresh ? (\n            <NavigationStepVisualRefresh\n              i18nStrings={i18nStrings}\n              index={index}\n              key={index}\n              onStepClick={onStepClick}\n              onSkipToClick={onSkipToClick}\n              status={getStatus(index)}\n              step={step}\n            />\n          ) : (\n            <NavigationStepClassic\n              i18nStrings={i18nStrings}\n              index={index}\n              key={index}\n              onStepClick={onStepClick}\n              onSkipToClick={onSkipToClick}\n              status={getStatus(index)}\n              step={step}\n            />\n          )\n        )}\n      </ul>\n    </nav>\n  );\n\n  function getStatus(index: number) {\n    if (activeStepIndex === index) {\n      return Statuses.Active;\n    }\n    if (isLoadingNextStep) {\n      return Statuses.Unvisited;\n    }\n    if (farthestStepIndex >= index) {\n      return Statuses.Visited;\n    }\n    if (allowSkipTo && canSkip(activeStepIndex + 1, index)) {\n      return Statuses.Next;\n    }\n    return Statuses.Unvisited;\n  }\n\n  function canSkip(fromIndex: number, toIndex: number) {\n    let index = fromIndex;\n    do {\n      if (!steps[index].isOptional) {\n        return false;\n      }\n      index++;\n    } while (index < toIndex);\n    return true;\n  }\n}\n\nfunction NavigationStepVisualRefresh({\n  i18nStrings,\n  index,\n  onStepClick,\n  onSkipToClick,\n  status,\n  step,\n}: NavigationStepProps) {\n  function handleStepInteraction() {\n    if (status === Statuses.Visited) {\n      onStepClick(index);\n    }\n    if (status === Statuses.Next) {\n      onSkipToClick(index);\n    }\n  }\n\n  const state = {\n    active: 'active',\n    unvisited: 'disabled',\n    visited: 'enabled',\n    next: 'enabled',\n  }[status];\n\n  const linkClassName = clsx(styles['navigation-link'], {\n    [styles['navigation-link-active']]: status === Statuses.Active,\n    [styles['navigation-link-disabled']]: status === Statuses.Unvisited,\n  });\n\n  return (\n    <li className={clsx(styles[`${state}`], styles['navigation-link-item'])}>\n      <hr />\n\n      <span className={clsx(styles.number, styles['navigation-link-label'])}>\n        {i18nStrings.stepNumberLabel && i18nStrings.stepNumberLabel(index + 1)}\n        {step.isOptional && <i>{` - ${i18nStrings.optional}`}</i>}\n      </span>\n\n      <a\n        className={linkClassName}\n        aria-current={status === Statuses.Active ? 'step' : undefined}\n        aria-disabled={status === Statuses.Unvisited ? 'true' : undefined}\n        onClick={event => {\n          event.preventDefault();\n          handleStepInteraction();\n        }}\n        onKeyDown={event => {\n          if (event.key === ' ' || event.key === 'Enter') {\n            event.preventDefault();\n          }\n          // Enter activates the button on key down instead of key up.\n          if (event.key === 'Enter') {\n            handleStepInteraction();\n          }\n        }}\n        onKeyUp={event => {\n          // Emulate button behavior, which also fires on space.\n          if (event.key === ' ') {\n            handleStepInteraction();\n          }\n        }}\n        role=\"button\"\n        tabIndex={status === Statuses.Visited || status === Statuses.Next ? 0 : undefined}\n      >\n        <div className={clsx(styles.circle)} />\n\n        <span className={clsx(styles.title)}>{step.title}</span>\n      </a>\n    </li>\n  );\n}\n\nfunction NavigationStepClassic({ i18nStrings, index, onStepClick, onSkipToClick, status, step }: NavigationStepProps) {\n  const spanClassName = clsx(\n    styles['navigation-link'],\n    status === Statuses.Active ? styles['navigation-link-active'] : styles['navigation-link-disabled']\n  );\n\n  return (\n    <li className={styles['navigation-link-item']}>\n      <InternalBox\n        variant=\"small\"\n        className={styles['navigation-link-label']}\n        display=\"block\"\n        margin={{ bottom: 'xxs' }}\n      >\n        {i18nStrings.stepNumberLabel && i18nStrings.stepNumberLabel(index + 1)}\n        {step.isOptional && <i>{` - ${i18nStrings.optional}`}</i>}\n      </InternalBox>\n      <div>\n        {status === Statuses.Visited || status === Statuses.Next ? (\n          <InternalLink\n            className={clsx(styles['navigation-link'])}\n            onFollow={evt => {\n              evt.preventDefault();\n              status === Statuses.Visited ? onStepClick(index) : onSkipToClick(index);\n            }}\n          >\n            {step.title}\n          </InternalLink>\n        ) : (\n          <span\n            className={spanClassName}\n            aria-current={status === Statuses.Active ? 'step' : undefined}\n            aria-disabled={status === Statuses.Active ? undefined : 'true'}\n          >\n            {step.title}\n          </span>\n        )}\n      </div>\n    </li>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}