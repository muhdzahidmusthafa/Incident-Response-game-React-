{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef, useEffect } from 'react';\n/**\n * This hook provides access to the value of any variable\n * from the previous render frame.\n * Even if multiple effects are flushed in a single render\n * loop, this hook still keeps the original value.\n */\n\nexport var usePreviousFrameValue = function (value) {\n  var ref = useRef();\n  useEffect(function () {\n    var handle = requestAnimationFrame(function () {\n      ref.current = value;\n    });\n    return function () {\n      return cancelAnimationFrame(handle);\n    };\n  });\n  return ref.current;\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AAEA;;;;;;;AAMA,OAAO,IAAMC,qBAAqB,GAAG,UAAIC,KAAJ,EAAY;EAC/C,IAAMC,GAAG,GAAGJ,MAAM,EAAlB;EACAC,SAAS,CAAC;IACR,IAAMI,MAAM,GAAGC,qBAAqB,CAAC;MACnCF,GAAG,CAACG,OAAJ,GAAcJ,KAAd;IACD,CAFmC,CAApC;IAGA,OAAO;MAAM,2BAAoB,CAACE,MAAD,CAApB;IAA4B,CAAzC;EACD,CALQ,CAAT;EAMA,OAAOD,GAAG,CAACG,OAAX;AACD,CATM","names":["useRef","useEffect","usePreviousFrameValue","value","ref","handle","requestAnimationFrame","current"],"sourceRoot":"","sources":["../../../../../src/internal/hooks/use-previous-frame/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef, useEffect } from 'react';\n\n/**\n * This hook provides access to the value of any variable\n * from the previous render frame.\n * Even if multiple effects are flushed in a single render\n * loop, this hook still keeps the original value.\n */\nexport const usePreviousFrameValue = <T>(value: T) => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    const handle = requestAnimationFrame(() => {\n      ref.current = value;\n    });\n    return () => cancelAnimationFrame(handle);\n  });\n  return ref.current;\n};\n"]},"metadata":{},"sourceType":"module"}