{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useState } from 'react';\nimport { useMutationObserver } from '../../hooks/use-mutation-observer';\nimport { findUpUntil } from '../../utils/dom';\nexport var useVisualContext = function (elementRef) {\n  var contextMatch = /awsui-context-([\\w-]+)/;\n\n  var _a = useState(''),\n      value = _a[0],\n      setValue = _a[1];\n\n  useMutationObserver(elementRef, function (node) {\n    var contextParent = findUpUntil(node, function (node) {\n      return !!node.className.match(contextMatch);\n    });\n    setValue(contextParent ? contextParent.className.match(contextMatch)[1] : '');\n  });\n  return value;\n};\nexport default function VisualContext(_a) {\n  var contextName = _a.contextName,\n      className = _a.className,\n      children = _a.children;\n  return React.createElement(\"div\", {\n    className: clsx(\"awsui-context-\".concat(contextName), className)\n  }, children);\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAO,IAAMC,gBAAgB,GAAG,UAACC,UAAD,EAAyC;EACvE,IAAMC,YAAY,GAAG,wBAArB;;EACM,SAAoBL,QAAQ,CAAC,EAAD,CAA5B;EAAA,IAACM,KAAK,QAAN;EAAA,IAAQC,QAAQ,QAAhB;;EACNN,mBAAmB,CAACG,UAAD,EAAa,gBAAI;IAClC,IAAMI,aAAa,GAAGN,WAAW,CAACO,IAAD,EAAO,gBAAI;MAAI,QAAC,CAACA,IAAI,CAACC,SAAL,CAAeC,KAAf,CAAqBN,YAArB,CAAF;IAAoC,CAAnD,CAAjC;IACAE,QAAQ,CAACC,aAAa,GAAGA,aAAa,CAACE,SAAd,CAAwBC,KAAxB,CAA8BN,YAA9B,EAA6C,CAA7C,CAAH,GAAqD,EAAnE,CAAR;EACD,CAHkB,CAAnB;EAIA,OAAOC,KAAP;AACD,CARM;AAgBP,eAAc,SAAUM,aAAV,CAAwBC,EAAxB,EAAgF;MAAtDC,WAAW;MAAEJ,SAAS;MAAEK,QAAQ;EACtE,OAAOhB;IAAKW,SAAS,EAAEZ,IAAI,CAAC,wBAAiBgB,WAAjB,CAAD,EAAiCJ,SAAjC;EAApB,GAAkEK,QAAlE,CAAP;AACD","names":["clsx","React","useState","useMutationObserver","findUpUntil","useVisualContext","elementRef","contextMatch","value","setValue","contextParent","node","className","match","VisualContext","_a","contextName","children"],"sourceRoot":"","sources":["../../../../../src/internal/components/visual-context/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useState } from 'react';\nimport { useMutationObserver } from '../../hooks/use-mutation-observer';\nimport { findUpUntil } from '../../utils/dom';\n\nexport const useVisualContext = (elementRef: React.RefObject<HTMLElement>) => {\n  const contextMatch = /awsui-context-([\\w-]+)/;\n  const [value, setValue] = useState('');\n  useMutationObserver(elementRef, node => {\n    const contextParent = findUpUntil(node, node => !!node.className.match(contextMatch));\n    setValue(contextParent ? contextParent.className.match(contextMatch)![1] : '');\n  });\n  return value;\n};\n\ninterface VisualContextProps {\n  contextName: string;\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport default function VisualContext({ contextName, className, children }: VisualContextProps) {\n  return <div className={clsx(`awsui-context-${contextName}`, className)}>{children}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}