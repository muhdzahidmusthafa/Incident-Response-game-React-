{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../../base-component';\nimport PopoverContainer from '../../../popover/container';\nimport PopoverBody from '../../../popover/body';\nimport popoverStyles from '../../../popover/styles.css.js';\nimport { nodeContains } from '../../utils/dom';\nimport styles from './styles.css.js';\nexport default function ChartPopover(_a) {\n  var _b;\n\n  var _c = _a.position,\n      position = _c === void 0 ? 'right' : _c,\n      _d = _a.size,\n      size = _d === void 0 ? 'medium' : _d,\n      _e = _a.fixedWidth,\n      fixedWidth = _e === void 0 ? false : _e,\n      _f = _a.dismissButton,\n      dismissButton = _f === void 0 ? false : _f,\n      dismissAriaLabel = _a.dismissAriaLabel,\n      children = _a.children,\n      title = _a.title,\n      trackRef = _a.trackRef,\n      trackKey = _a.trackKey,\n      onDismiss = _a.onDismiss,\n      container = _a.container,\n      restProps = __rest(_a, [\"position\", \"size\", \"fixedWidth\", \"dismissButton\", \"dismissAriaLabel\", \"children\", \"title\", \"trackRef\", \"trackKey\", \"onDismiss\", \"container\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var popoverRef = useRef(null);\n  useEffect(function () {\n    var onDocumentClick = function (event) {\n      if (event.target && !nodeContains(popoverRef.current, event.target) && // click not in popover\n      !nodeContains(container, event.target) // click not in segment\n      ) {\n        onDismiss(true);\n      }\n    };\n\n    document.addEventListener('mousedown', onDocumentClick, {\n      capture: true\n    });\n    return function () {\n      document.removeEventListener('mousedown', onDocumentClick, {\n        capture: true\n      });\n    };\n  }, [container, onDismiss]);\n  return React.createElement(\"span\", __assign({}, baseProps, {\n    className: clsx(popoverStyles.root, styles.root, baseProps.className, (_b = {}, _b[styles.dismissable] = dismissButton, _b)),\n    ref: popoverRef\n  }), React.createElement(PopoverContainer, {\n    position: position,\n    trackRef: trackRef,\n    trackKey: trackKey,\n    arrow: function (position) {\n      return React.createElement(\"div\", {\n        className: clsx(popoverStyles.arrow, popoverStyles[\"arrow-position-\".concat(position)])\n      }, React.createElement(\"div\", {\n        className: popoverStyles['arrow-outer']\n      }), React.createElement(\"div\", {\n        className: popoverStyles['arrow-inner']\n      }));\n    }\n  }, React.createElement(PopoverBody, {\n    size: size,\n    fixedWidth: fixedWidth,\n    dismissButton: dismissButton,\n    dismissAriaLabel: dismissAriaLabel,\n    returnFocus: false,\n    header: title,\n    onDismiss: onDismiss\n  }, children)));\n}","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","clsx","getBaseProps","PopoverContainer","PopoverBody","popoverStyles","nodeContains","styles","ChartPopover","_a","_c","_d","size","_e","fixedWidth","_f","dismissButton","dismissAriaLabel","children","title","trackRef","trackKey","onDismiss","container","restProps","baseProps","popoverRef","onDocumentClick","event","target","current","document","addEventListener","capture","removeEventListener","className","root","_b","dismissable","ref","position","arrow","returnFocus","header"],"sourceRoot":"","sources":["../../../../../src/internal/components/chart-popover/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../../base-component';\n\nimport { PopoverProps } from '../../../popover/interfaces';\nimport PopoverContainer from '../../../popover/container';\nimport PopoverBody from '../../../popover/body';\nimport popoverStyles from '../../../popover/styles.css.js';\nimport { nodeContains } from '../../utils/dom';\n\nimport styles from './styles.css.js';\n\nexport interface ChartPopoverProps extends PopoverProps {\n  /** Title of the popover */\n  title?: React.ReactNode;\n\n  /** References the element the container is positioned against. */\n  trackRef: React.RefObject<Element>;\n  /**\n    Used to update the container position in case track or track position changes:\n    \n    const trackRef = useRef<Element>(null)\n    return (<>\n      <Track style={getPosition(selectedItemId)} ref={trackRef} />\n      <PopoverContainer trackRef={trackRef} trackKey={selectedItemId} .../>\n    </>)\n  */\n  trackKey?: string | number;\n\n  /** Optional container element that prevents any clicks in there from dismissing the popover */\n  container: Element | null;\n\n  /** Event that is fired when the popover is dismissed */\n  onDismiss: (outsideClick?: boolean) => void;\n\n  /** Popover content */\n  children?: React.ReactNode;\n}\n\nexport default function ChartPopover({\n  position = 'right',\n  size = 'medium',\n  fixedWidth = false,\n  dismissButton = false,\n  dismissAriaLabel,\n\n  children,\n\n  title,\n  trackRef,\n  trackKey,\n  onDismiss,\n  container,\n\n  ...restProps\n}: ChartPopoverProps) {\n  const baseProps = getBaseProps(restProps);\n  const popoverRef = useRef<HTMLSpanElement | null>(null);\n\n  useEffect(() => {\n    const onDocumentClick = (event: MouseEvent) => {\n      if (\n        event.target &&\n        !nodeContains(popoverRef.current, event.target as Element) && // click not in popover\n        !nodeContains(container, event.target as Element) // click not in segment\n      ) {\n        onDismiss(true);\n      }\n    };\n\n    document.addEventListener('mousedown', onDocumentClick, { capture: true });\n    return () => {\n      document.removeEventListener('mousedown', onDocumentClick, { capture: true });\n    };\n  }, [container, onDismiss]);\n\n  return (\n    <span\n      {...baseProps}\n      className={clsx(popoverStyles.root, styles.root, baseProps.className, { [styles.dismissable]: dismissButton })}\n      ref={popoverRef}\n    >\n      <PopoverContainer\n        position={position}\n        trackRef={trackRef}\n        trackKey={trackKey}\n        arrow={position => (\n          <div className={clsx(popoverStyles.arrow, popoverStyles[`arrow-position-${position}`])}>\n            <div className={popoverStyles['arrow-outer']} />\n            <div className={popoverStyles['arrow-inner']} />\n          </div>\n        )}\n      >\n        <PopoverBody\n          size={size}\n          fixedWidth={fixedWidth}\n          dismissButton={dismissButton}\n          dismissAriaLabel={dismissAriaLabel}\n          returnFocus={false}\n          header={title}\n          onDismiss={onDismiss}\n        >\n          {children}\n        </PopoverBody>\n      </PopoverContainer>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}