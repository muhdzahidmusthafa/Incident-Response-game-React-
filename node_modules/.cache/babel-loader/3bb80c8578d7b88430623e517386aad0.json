{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { pie } from 'd3-shape';\nimport { KeyCode } from '../internal/keycode';\nimport { nodeContains } from '../internal/utils/dom';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport ChartPopover from '../internal/components/chart-popover';\nimport SeriesDetails from '../internal/components/chart-series-details';\nimport SeriesMarker from '../internal/components/chart-series-marker';\nimport ChartStatusContainer, { getChartStatus } from '../internal/components/chart-status-container';\nimport InternalBox from '../box/internal';\nimport Labels from './labels';\nimport styles from './styles.css.js';\nimport { defaultDetails, dimensionsBySize, refreshDimensionsBySize } from './utils';\nimport Segments from './segments';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport ChartPlot from '../internal/components/chart-plot';\nexport default (function (_a) {\n  var _b;\n\n  var _c;\n\n  var variant = _a.variant,\n      size = _a.size,\n      i18nStrings = _a.i18nStrings,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby,\n      data = _a.data,\n      visibleData = _a.visibleData,\n      ariaDescription = _a.ariaDescription,\n      innerMetricValue = _a.innerMetricValue,\n      innerMetricDescription = _a.innerMetricDescription,\n      hideTitles = _a.hideTitles,\n      hideDescriptions = _a.hideDescriptions,\n      detailPopoverContent = _a.detailPopoverContent,\n      detailPopoverSize = _a.detailPopoverSize,\n      width = _a.width,\n      additionalFilters = _a.additionalFilters,\n      hideFilter = _a.hideFilter,\n      hideLegend = _a.hideLegend,\n      statusType = _a.statusType,\n      empty = _a.empty,\n      noMatch = _a.noMatch,\n      errorText = _a.errorText,\n      recoveryText = _a.recoveryText,\n      loadingText = _a.loadingText,\n      onRecoveryClick = _a.onRecoveryClick,\n      segmentDescription = _a.segmentDescription,\n      highlightedSegment = _a.highlightedSegment,\n      onHighlightChange = _a.onHighlightChange,\n      legendSegment = _a.legendSegment,\n      pinnedSegment = _a.pinnedSegment,\n      setPinnedSegment = _a.setPinnedSegment;\n  var plotRef = useRef(null);\n  var containerRef = useRef(null);\n  var focusedSegmentRef = useRef(null);\n  var popoverTrackRef = useRef(null);\n  var isRefresh = useVisualRefresh(containerRef);\n  var dimensions = isRefresh ? refreshDimensionsBySize[size] : dimensionsBySize[size];\n  var radius = dimensions.outerRadius;\n  var hasLabels = !(hideTitles && hideDescriptions);\n  var height = 2 * (radius + dimensions.padding + (hasLabels ? dimensions.paddingLabels : 0)); // Inner content is only available for donut charts and the inner description is not displayed for small charts\n\n  var hasInnerContent = variant === 'donut' && (innerMetricValue || innerMetricDescription && size !== 'small');\n  var innerMetricId = useUniqueId('awsui-pie-chart__inner');\n\n  var _d = useState(false),\n      isTooltipOpen = _d[0],\n      setTooltipOpen = _d[1];\n\n  var _e = useState(),\n      tooltipData = _e[0],\n      setTooltipData = _e[1];\n\n  var _f = useMemo(function () {\n    var dataSum = visibleData.reduce(function (sum, d) {\n      return sum + d.datum.value;\n    }, 0);\n    var pieFactory = pie() // Minimum 1% segment size\n    .value(function (d) {\n      return d.datum.value < dataSum / 100 ? dataSum / 100 : d.datum.value;\n    }).sort(null); // Filter out segments with value of zero or below\n\n    var pieData = pieFactory(visibleData.filter(function (d) {\n      return d.datum.value > 0;\n    }));\n    return {\n      pieData: pieData,\n      dataSum: dataSum\n    };\n  }, [visibleData]),\n      pieData = _f.pieData,\n      dataSum = _f.dataSum;\n\n  var highlightedSegmentIndex = useMemo(function () {\n    for (var index = 0; index < pieData.length; index++) {\n      if (pieData[index].data.datum === highlightedSegment) {\n        return index;\n      }\n    }\n\n    return null;\n  }, [pieData, highlightedSegment]);\n  var detailFunction = detailPopoverContent || defaultDetails(i18nStrings);\n  var details = tooltipData ? detailFunction(tooltipData.datum, dataSum) : [];\n  var tooltipContent = tooltipData && React.createElement(SeriesDetails, {\n    details: details\n  });\n\n  var _g = getChartStatus({\n    externalData: data,\n    visibleData: pieData,\n    statusType: statusType\n  }),\n      isEmpty = _g.isEmpty,\n      showChart = _g.showChart; // Pie charts have a special condition for empty/noMatch due to how zero-value segments are handled.\n\n\n  var isNoMatch = isEmpty && visibleData.length !== data.length;\n  var reserveLegendSpace = !showChart && !hideLegend;\n  var reserveFilterSpace = statusType !== 'finished' && !isNoMatch && (!hideFilter || additionalFilters);\n  var popoverDismissedRecently = useRef(false);\n  var highlightSegment = useCallback(function (internalDatum) {\n    var segment = internalDatum.datum;\n\n    if (segment !== highlightedSegment) {\n      onHighlightChange(segment);\n    }\n\n    if (popoverTrackRef.current) {\n      setTooltipData({\n        datum: internalDatum.datum,\n        series: {\n          color: internalDatum.color,\n          index: internalDatum.index,\n          label: internalDatum.datum.title,\n          markerType: 'rectangle'\n        },\n        trackRef: popoverTrackRef\n      });\n      setTooltipOpen(true);\n    }\n  }, [highlightedSegment, setTooltipOpen, onHighlightChange]);\n  var clearHighlightedSegment = useCallback(function () {\n    setTooltipOpen(false);\n    onHighlightChange(null);\n  }, [onHighlightChange, setTooltipOpen]);\n  var onClick = useCallback(function (internalDatum) {\n    if (pinnedSegment === internalDatum.datum) {\n      setPinnedSegment(null);\n      clearHighlightedSegment();\n    } else {\n      setPinnedSegment(internalDatum.datum);\n      highlightSegment(internalDatum);\n    }\n  }, [pinnedSegment, clearHighlightedSegment, setPinnedSegment, highlightSegment]);\n  var onMouseOver = useCallback(function (internalDatum) {\n    if (pinnedSegment !== null) {\n      return;\n    }\n\n    highlightSegment(internalDatum);\n  }, [pinnedSegment, highlightSegment]);\n  var onMouseOut = useCallback(function () {\n    if (pinnedSegment !== null) {\n      return;\n    }\n\n    clearHighlightedSegment();\n  }, [pinnedSegment, clearHighlightedSegment]);\n  var onKeyDown = useCallback(function (event) {\n    if (event.keyCode !== KeyCode.right && event.keyCode !== KeyCode.left && event.keyCode !== KeyCode.enter) {\n      return;\n    }\n\n    event.preventDefault();\n    var nextIndex = highlightedSegmentIndex || 0;\n    var MAX = pieData.length - 1;\n\n    if (event.keyCode === KeyCode.right) {\n      nextIndex++;\n\n      if (nextIndex > MAX) {\n        nextIndex = 0;\n      }\n    } else if (event.keyCode === KeyCode.left) {\n      nextIndex--;\n\n      if (nextIndex < 0) {\n        nextIndex = MAX;\n      }\n    }\n\n    if (event.keyCode === KeyCode.enter) {\n      setPinnedSegment(pieData[nextIndex].data.datum);\n    }\n\n    highlightSegment(pieData[nextIndex].data);\n  }, [setPinnedSegment, highlightSegment, pieData, highlightedSegmentIndex]);\n  var onFocus = useCallback(function (_event, target) {\n    // We need to make sure that we do not re-show the popover when we focus the segment after the popover is dismissed.\n    // Normally we would check `event.relatedTarget` for the previously focused element,\n    // but this is not supported for SVG elements in IE11. The workaround is this `popoverDismissedRecently` ref.\n    if (pinnedSegment !== null || popoverDismissedRecently.current || target === 'mouse') {\n      return;\n    }\n\n    var segment = highlightedSegment || legendSegment || pieData[0].data.datum;\n    var matched = pieData.filter(function (d) {\n      return d.data.datum === segment;\n    });\n    highlightSegment(matched[0].data);\n  }, [pinnedSegment, pieData, highlightSegment, highlightedSegment, legendSegment]);\n  var onBlur = useCallback(function (event) {\n    var blurTarget = event.relatedTarget || event.target;\n\n    if (blurTarget === null || !(blurTarget instanceof Element) || !nodeContains(containerRef.current, blurTarget)) {\n      // We only need to close the tooltip and remove the pinned segment so that we keep track of the current\n      // highlighted legendSeries. using clearHighlightedSegment() would set the legendSeries to null, in that case\n      // using Keyboard Tab will always highlight the first legend item in the legend component.\n      setTooltipOpen(false);\n      setPinnedSegment(null);\n    }\n  }, [setPinnedSegment]);\n\n  var onPopoverDismiss = function (outsideClick) {\n    setTooltipOpen(false);\n    setPinnedSegment(null);\n\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(function () {\n        popoverDismissedRecently.current = true;\n        plotRef.current.focusApplication();\n        popoverDismissedRecently.current = false;\n      }, 0);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: clsx(styles.content, styles[\"content--\".concat(size)], (_b = {}, _b[styles['content--without-labels']] = !hasLabels, _b[styles['content--reserve-filter']] = reserveFilterSpace, _b[styles['content--reserve-legend']] = reserveLegendSpace, _b))\n  }, React.createElement(ChartStatusContainer, {\n    isEmpty: isEmpty,\n    isNoMatch: isNoMatch,\n    showChart: showChart,\n    statusType: statusType,\n    empty: empty,\n    noMatch: noMatch,\n    loadingText: loadingText,\n    errorText: errorText,\n    recoveryText: recoveryText,\n    onRecoveryClick: onRecoveryClick\n  }), showChart && React.createElement(\"div\", {\n    className: styles['chart-container'],\n    ref: containerRef\n  }, React.createElement(ChartPlot, {\n    ref: plotRef,\n    width: width,\n    height: height,\n    transform: \"translate(\".concat(width / 2, \" \").concat(height / 2, \")\"),\n    isPrecise: true,\n    isClickable: !isTooltipOpen,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescription: ariaDescription,\n    ariaDescribedby: hasInnerContent ? innerMetricId : undefined,\n    ariaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.chartAriaRoleDescription,\n    ariaLiveRegion: tooltipContent,\n    activeElementRef: focusedSegmentRef,\n    activeElementKey: highlightedSegmentIndex === null || highlightedSegmentIndex === void 0 ? void 0 : highlightedSegmentIndex.toString(),\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onKeyDown: onKeyDown\n  }, React.createElement(Segments, {\n    pieData: pieData,\n    size: size,\n    variant: variant,\n    containerRef: containerRef,\n    focusedSegmentRef: focusedSegmentRef,\n    popoverTrackRef: popoverTrackRef,\n    highlightedSegment: highlightedSegment,\n    segmentAriaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.segmentAriaRoleDescription,\n    onClick: onClick,\n    onMouseOver: onMouseOver,\n    onMouseOut: onMouseOut\n  }), hasLabels && React.createElement(Labels, {\n    pieData: pieData,\n    size: size,\n    segmentDescription: segmentDescription,\n    visibleDataSum: dataSum,\n    hideTitles: hideTitles,\n    hideDescriptions: hideDescriptions,\n    highlightedSegment: highlightedSegment,\n    containerRef: containerRef\n  })), hasInnerContent && React.createElement(\"div\", {\n    className: styles['inner-content'],\n    id: innerMetricId\n  }, innerMetricValue && React.createElement(InternalBox, {\n    variant: size === 'small' ? 'h3' : 'h1',\n    tagOverride: \"div\",\n    color: \"inherit\",\n    padding: \"n\"\n  }, innerMetricValue), innerMetricDescription && size !== 'small' && React.createElement(InternalBox, {\n    variant: \"h3\",\n    color: \"text-body-secondary\",\n    tagOverride: \"div\",\n    padding: \"n\"\n  }, innerMetricDescription)), isTooltipOpen && tooltipData && React.createElement(ChartPopover, {\n    title: tooltipData.series && React.createElement(InternalBox, {\n      className: styles['popover-header'],\n      variant: \"strong\"\n    }, React.createElement(SeriesMarker, {\n      color: tooltipData.series.color,\n      type: tooltipData.series.markerType\n    }), ' ', tooltipData.series.label),\n    trackRef: tooltipData.trackRef,\n    trackKey: tooltipData.series.index,\n    dismissButton: pinnedSegment !== null,\n    dismissAriaLabel: i18nStrings.detailPopoverDismissAriaLabel,\n    onDismiss: onPopoverDismiss,\n    container: ((_c = plotRef.current) === null || _c === void 0 ? void 0 : _c.svg) || null,\n    size: detailPopoverSize\n  }, tooltipContent)));\n});","map":{"version":3,"mappings":"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","names":["React","useCallback","useMemo","useRef","useState","clsx","pie","KeyCode","nodeContains","useUniqueId","ChartPopover","SeriesDetails","SeriesMarker","ChartStatusContainer","getChartStatus","InternalBox","Labels","styles","defaultDetails","dimensionsBySize","refreshDimensionsBySize","Segments","useVisualRefresh","ChartPlot","_a","variant","size","i18nStrings","ariaLabel","ariaLabelledby","data","visibleData","ariaDescription","innerMetricValue","innerMetricDescription","hideTitles","hideDescriptions","detailPopoverContent","detailPopoverSize","width","additionalFilters","hideFilter","hideLegend","statusType","empty","noMatch","errorText","recoveryText","loadingText","onRecoveryClick","segmentDescription","highlightedSegment","onHighlightChange","legendSegment","pinnedSegment","setPinnedSegment","plotRef","containerRef","focusedSegmentRef","popoverTrackRef","isRefresh","dimensions","radius","outerRadius","hasLabels","height","padding","paddingLabels","hasInnerContent","innerMetricId","isTooltipOpen","setTooltipOpen","tooltipData","setTooltipData","dataSum","reduce","sum","d","datum","value","pieFactory","sort","pieData","filter","highlightedSegmentIndex","index","length","detailFunction","details","tooltipContent","externalData","isEmpty","showChart","isNoMatch","reserveLegendSpace","reserveFilterSpace","popoverDismissedRecently","highlightSegment","internalDatum","segment","current","series","color","label","title","markerType","trackRef","clearHighlightedSegment","onClick","onMouseOver","onMouseOut","onKeyDown","event","keyCode","right","left","enter","preventDefault","nextIndex","MAX","onFocus","_event","target","matched","onBlur","blurTarget","relatedTarget","Element","onPopoverDismiss","outsideClick","setTimeout","focusApplication","className","content","_b","ref","transform","concat","isPrecise","isClickable","ariaDescribedby","undefined","ariaRoleDescription","chartAriaRoleDescription","ariaLiveRegion","activeElementRef","activeElementKey","toString","segmentAriaRoleDescription","visibleDataSum","id","tagOverride","type","trackKey","dismissButton","dismissAriaLabel","detailPopoverDismissAriaLabel","onDismiss","container","_c","svg"],"sourceRoot":"","sources":["../../../src/pie-chart/pie-chart.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { pie } from 'd3-shape';\n\nimport { KeyCode } from '../internal/keycode';\nimport { nodeContains } from '../internal/utils/dom';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport ChartPopover from '../internal/components/chart-popover';\nimport SeriesDetails from '../internal/components/chart-series-details';\nimport SeriesMarker from '../internal/components/chart-series-marker';\nimport ChartStatusContainer, { getChartStatus } from '../internal/components/chart-status-container';\nimport InternalBox from '../box/internal';\n\nimport Labels from './labels';\nimport { PieChartProps, SeriesInfo } from './interfaces';\nimport styles from './styles.css.js';\nimport { defaultDetails, dimensionsBySize, refreshDimensionsBySize } from './utils';\nimport Segments from './segments';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport ChartPlot, { ChartPlotRef } from '../internal/components/chart-plot';\nimport { SomeRequired } from '../internal/types';\n\nexport interface InternalChartDatum<T> {\n  index: number;\n  color: string;\n  datum: Readonly<T>;\n}\n\ninterface InternalPieChartProps<T extends PieChartProps.Datum>\n  extends SomeRequired<\n    Omit<PieChartProps<T>, 'onHighlightChange'>,\n    'variant' | 'size' | 'i18nStrings' | 'hideTitles' | 'hideDescriptions' | 'statusType'\n  > {\n  visibleData: Array<InternalChartDatum<T>>;\n  width: number;\n\n  highlightedSegment: T | null;\n  onHighlightChange: (segment: null | T) => void;\n\n  legendSegment: T | null;\n\n  pinnedSegment: T | null;\n  setPinnedSegment: React.Dispatch<React.SetStateAction<T | null>>;\n}\n\nexport interface TooltipData<T> {\n  datum: T;\n  trackRef: React.RefObject<SVGElement>;\n  series: SeriesInfo;\n}\n\nexport default <T extends PieChartProps.Datum>({\n  variant,\n  size,\n  i18nStrings,\n  ariaLabel,\n  ariaLabelledby,\n  data,\n  visibleData,\n  ariaDescription,\n  innerMetricValue,\n  innerMetricDescription,\n  hideTitles,\n  hideDescriptions,\n  detailPopoverContent,\n  detailPopoverSize,\n  width,\n  additionalFilters,\n  hideFilter,\n  hideLegend,\n  statusType,\n  empty,\n  noMatch,\n  errorText,\n  recoveryText,\n  loadingText,\n  onRecoveryClick,\n  segmentDescription,\n  highlightedSegment,\n  onHighlightChange,\n  legendSegment,\n  pinnedSegment,\n  setPinnedSegment,\n}: InternalPieChartProps<T>) => {\n  const plotRef = useRef<ChartPlotRef>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const focusedSegmentRef = useRef<SVGGElement>(null);\n  const popoverTrackRef = useRef<SVGCircleElement>(null);\n  const isRefresh = useVisualRefresh(containerRef);\n\n  const dimensions = isRefresh ? refreshDimensionsBySize[size] : dimensionsBySize[size];\n  const radius = dimensions.outerRadius;\n\n  const hasLabels = !(hideTitles && hideDescriptions);\n  const height = 2 * (radius + dimensions.padding + (hasLabels ? dimensions.paddingLabels : 0));\n\n  // Inner content is only available for donut charts and the inner description is not displayed for small charts\n  const hasInnerContent = variant === 'donut' && (innerMetricValue || (innerMetricDescription && size !== 'small'));\n\n  const innerMetricId = useUniqueId('awsui-pie-chart__inner');\n\n  const [isTooltipOpen, setTooltipOpen] = useState<boolean>(false);\n  const [tooltipData, setTooltipData] = useState<TooltipData<T>>();\n\n  const { pieData, dataSum } = useMemo(() => {\n    const dataSum = visibleData.reduce((sum, d) => sum + d.datum.value, 0);\n\n    const pieFactory = pie<InternalChartDatum<T>>()\n      // Minimum 1% segment size\n      .value(d => (d.datum.value < dataSum / 100 ? dataSum / 100 : d.datum.value))\n      .sort(null);\n\n    // Filter out segments with value of zero or below\n    const pieData = pieFactory(visibleData.filter(d => d.datum.value > 0));\n\n    return { pieData, dataSum };\n  }, [visibleData]);\n\n  const highlightedSegmentIndex = useMemo(() => {\n    for (let index = 0; index < pieData.length; index++) {\n      if (pieData[index].data.datum === highlightedSegment) {\n        return index;\n      }\n    }\n    return null;\n  }, [pieData, highlightedSegment]);\n\n  const detailFunction = detailPopoverContent || defaultDetails(i18nStrings);\n  const details = tooltipData ? detailFunction(tooltipData.datum, dataSum) : [];\n  const tooltipContent = tooltipData && <SeriesDetails details={details} />;\n\n  const { isEmpty, showChart } = getChartStatus({ externalData: data, visibleData: pieData, statusType });\n\n  // Pie charts have a special condition for empty/noMatch due to how zero-value segments are handled.\n  const isNoMatch = isEmpty && visibleData.length !== data.length;\n\n  const reserveLegendSpace = !showChart && !hideLegend;\n  const reserveFilterSpace = statusType !== 'finished' && !isNoMatch && (!hideFilter || additionalFilters);\n\n  const popoverDismissedRecently = useRef(false);\n\n  const highlightSegment = useCallback(\n    (internalDatum: InternalChartDatum<T>) => {\n      const segment = internalDatum.datum;\n      if (segment !== highlightedSegment) {\n        onHighlightChange(segment);\n      }\n\n      if (popoverTrackRef.current) {\n        setTooltipData({\n          datum: internalDatum.datum,\n          series: {\n            color: internalDatum.color,\n            index: internalDatum.index,\n            label: internalDatum.datum.title,\n            markerType: 'rectangle',\n          },\n          trackRef: popoverTrackRef,\n        });\n        setTooltipOpen(true);\n      }\n    },\n    [highlightedSegment, setTooltipOpen, onHighlightChange]\n  );\n  const clearHighlightedSegment = useCallback(() => {\n    setTooltipOpen(false);\n    onHighlightChange(null);\n  }, [onHighlightChange, setTooltipOpen]);\n\n  const onClick = useCallback(\n    (internalDatum: InternalChartDatum<T>) => {\n      if (pinnedSegment === internalDatum.datum) {\n        setPinnedSegment(null);\n        clearHighlightedSegment();\n      } else {\n        setPinnedSegment(internalDatum.datum);\n        highlightSegment(internalDatum);\n      }\n    },\n    [pinnedSegment, clearHighlightedSegment, setPinnedSegment, highlightSegment]\n  );\n  const onMouseOver = useCallback(\n    (internalDatum: InternalChartDatum<T>) => {\n      if (pinnedSegment !== null) {\n        return;\n      }\n      highlightSegment(internalDatum);\n    },\n    [pinnedSegment, highlightSegment]\n  );\n  const onMouseOut = useCallback(() => {\n    if (pinnedSegment !== null) {\n      return;\n    }\n\n    clearHighlightedSegment();\n  }, [pinnedSegment, clearHighlightedSegment]);\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.keyCode !== KeyCode.right && event.keyCode !== KeyCode.left && event.keyCode !== KeyCode.enter) {\n        return;\n      }\n\n      event.preventDefault();\n\n      let nextIndex = highlightedSegmentIndex || 0;\n      const MAX = pieData.length - 1;\n      if (event.keyCode === KeyCode.right) {\n        nextIndex++;\n        if (nextIndex > MAX) {\n          nextIndex = 0;\n        }\n      } else if (event.keyCode === KeyCode.left) {\n        nextIndex--;\n        if (nextIndex < 0) {\n          nextIndex = MAX;\n        }\n      }\n      if (event.keyCode === KeyCode.enter) {\n        setPinnedSegment(pieData[nextIndex].data.datum);\n      }\n      highlightSegment(pieData[nextIndex].data);\n    },\n    [setPinnedSegment, highlightSegment, pieData, highlightedSegmentIndex]\n  );\n  const onFocus = useCallback(\n    (_event: any, target: 'keyboard' | 'mouse') => {\n      // We need to make sure that we do not re-show the popover when we focus the segment after the popover is dismissed.\n      // Normally we would check `event.relatedTarget` for the previously focused element,\n      // but this is not supported for SVG elements in IE11. The workaround is this `popoverDismissedRecently` ref.\n      if (pinnedSegment !== null || popoverDismissedRecently.current || target === 'mouse') {\n        return;\n      }\n\n      const segment = highlightedSegment || legendSegment || pieData[0].data.datum;\n      const matched = pieData.filter(d => d.data.datum === segment);\n      highlightSegment(matched[0].data);\n    },\n    [pinnedSegment, pieData, highlightSegment, highlightedSegment, legendSegment]\n  );\n\n  const onBlur = useCallback(\n    (event: React.FocusEvent) => {\n      const blurTarget = event.relatedTarget || event.target;\n      if (blurTarget === null || !(blurTarget instanceof Element) || !nodeContains(containerRef.current, blurTarget)) {\n        // We only need to close the tooltip and remove the pinned segment so that we keep track of the current\n        // highlighted legendSeries. using clearHighlightedSegment() would set the legendSeries to null, in that case\n        // using Keyboard Tab will always highlight the first legend item in the legend component.\n        setTooltipOpen(false);\n        setPinnedSegment(null);\n      }\n    },\n    [setPinnedSegment]\n  );\n  const onPopoverDismiss = (outsideClick?: boolean) => {\n    setTooltipOpen(false);\n    setPinnedSegment(null);\n\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(() => {\n        popoverDismissedRecently.current = true;\n        plotRef.current!.focusApplication();\n        popoverDismissedRecently.current = false;\n      }, 0);\n    }\n  };\n\n  return (\n    <div\n      className={clsx(styles.content, styles[`content--${size}`], {\n        [styles['content--without-labels']]: !hasLabels,\n        [styles['content--reserve-filter']]: reserveFilterSpace,\n        [styles['content--reserve-legend']]: reserveLegendSpace,\n      })}\n    >\n      <ChartStatusContainer\n        isEmpty={isEmpty}\n        isNoMatch={isNoMatch}\n        showChart={showChart}\n        statusType={statusType}\n        empty={empty}\n        noMatch={noMatch}\n        loadingText={loadingText}\n        errorText={errorText}\n        recoveryText={recoveryText}\n        onRecoveryClick={onRecoveryClick}\n      />\n      {showChart && (\n        <div className={styles['chart-container']} ref={containerRef}>\n          <ChartPlot\n            ref={plotRef}\n            width={width}\n            height={height}\n            transform={`translate(${width / 2} ${height / 2})`}\n            isPrecise={true}\n            isClickable={!isTooltipOpen}\n            ariaLabel={ariaLabel}\n            ariaLabelledby={ariaLabelledby}\n            ariaDescription={ariaDescription}\n            ariaDescribedby={hasInnerContent ? innerMetricId : undefined}\n            ariaRoleDescription={i18nStrings?.chartAriaRoleDescription}\n            ariaLiveRegion={tooltipContent}\n            activeElementRef={focusedSegmentRef}\n            activeElementKey={highlightedSegmentIndex?.toString()}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            onKeyDown={onKeyDown}\n          >\n            <Segments\n              pieData={pieData}\n              size={size}\n              variant={variant}\n              containerRef={containerRef}\n              focusedSegmentRef={focusedSegmentRef}\n              popoverTrackRef={popoverTrackRef}\n              highlightedSegment={highlightedSegment}\n              segmentAriaRoleDescription={i18nStrings?.segmentAriaRoleDescription}\n              onClick={onClick}\n              onMouseOver={onMouseOver}\n              onMouseOut={onMouseOut}\n            />\n            {hasLabels && (\n              <Labels\n                pieData={pieData}\n                size={size}\n                segmentDescription={segmentDescription}\n                visibleDataSum={dataSum}\n                hideTitles={hideTitles}\n                hideDescriptions={hideDescriptions}\n                highlightedSegment={highlightedSegment}\n                containerRef={containerRef}\n              />\n            )}\n          </ChartPlot>\n          {hasInnerContent && (\n            <div className={styles['inner-content']} id={innerMetricId}>\n              {innerMetricValue && (\n                <InternalBox variant={size === 'small' ? 'h3' : 'h1'} tagOverride=\"div\" color=\"inherit\" padding=\"n\">\n                  {innerMetricValue}\n                </InternalBox>\n              )}\n              {innerMetricDescription && size !== 'small' && (\n                <InternalBox variant=\"h3\" color=\"text-body-secondary\" tagOverride=\"div\" padding=\"n\">\n                  {innerMetricDescription}\n                </InternalBox>\n              )}\n            </div>\n          )}\n          {isTooltipOpen && tooltipData && (\n            <ChartPopover\n              title={\n                tooltipData.series && (\n                  <InternalBox className={styles['popover-header']} variant=\"strong\">\n                    <SeriesMarker color={tooltipData.series.color} type={tooltipData.series.markerType} />{' '}\n                    {tooltipData.series.label}\n                  </InternalBox>\n                )\n              }\n              trackRef={tooltipData.trackRef}\n              trackKey={tooltipData.series.index}\n              dismissButton={pinnedSegment !== null}\n              dismissAriaLabel={i18nStrings.detailPopoverDismissAriaLabel}\n              onDismiss={onPopoverDismiss}\n              container={plotRef.current?.svg || null}\n              size={detailPopoverSize}\n            >\n              {tooltipContent}\n            </ChartPopover>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}