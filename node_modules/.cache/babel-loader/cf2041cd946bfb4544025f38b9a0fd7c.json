{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isItemGroup, indexEquals } from './utils';\nexport default function moveHighlight(_a) {\n  var startIndex = _a.startIndex,\n      expandedIndex = _a.expandedIndex,\n      getNext = _a.getNext,\n      hasExpandableGroups = _a.hasExpandableGroups,\n      isInRestrictedView = _a.isInRestrictedView;\n\n  var tryMove = function (currentIndex) {\n    var _a;\n\n    var next = getNext(currentIndex);\n\n    if (!next) {\n      return null;\n    } // Prevents stepping into disabled expandable groups. However,\n    // it's possible to navigate nested groups.\n\n\n    if (((_a = next.parent) === null || _a === void 0 ? void 0 : _a.disabled) && hasExpandableGroups) {\n      return tryMove(next.index);\n    } // it is not allowed to highlight groups when non-expandable\n\n\n    if (isItemGroup(next.item) && !hasExpandableGroups) {\n      return tryMove(next.index);\n    } // can only move within same parent unless is in restricted view\n\n\n    if (hasExpandableGroups && !isInRestrictedView && !isSameParent(startIndex, next.index)) {\n      return tryMove(next.index);\n    } // in restricted view can only navigate to children if group is expanded\n\n\n    if (hasExpandableGroups && isInRestrictedView && !isSameLevel(next.index, expandedIndex) && !isIncluded(expandedIndex, next.index)) {\n      return tryMove(next.index);\n    }\n\n    return next.index;\n  };\n\n  return tryMove(startIndex);\n}\n\nfunction isSameParent(left, right) {\n  return indexEquals(left.slice(0, -1), right.slice(0, -1));\n}\n\nfunction isSameLevel(left, right) {\n  return left.length === right.length;\n}\n\nfunction isIncluded(parent, child) {\n  return indexEquals(parent, child.slice(0, -1));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,SAAzC;AAoBA,eAAc,SAAUC,aAAV,CAAwBC,EAAxB,EAMO;MALnBC,UAAU;MACVC,aAAa;MACbC,OAAO;MACPC,mBAAmB;MACnBC,kBAAkB;;EAElB,IAAMC,OAAO,GAAG,UAACC,YAAD,EAAwB;;;IACtC,IAAMC,IAAI,GAAGL,OAAO,CAACI,YAAD,CAApB;;IAEA,IAAI,CAACC,IAAL,EAAW;MACT,OAAO,IAAP;IACD,CALqC,CAOtC;IACA;;;IACA,IAAI,WAAI,CAACC,MAAL,MAAW,IAAX,IAAWT,aAAX,GAAW,MAAX,GAAWA,GAAEU,QAAb,KAAyBN,mBAA7B,EAAkD;MAChD,OAAOE,OAAO,CAACE,IAAI,CAACG,KAAN,CAAd;IACD,CAXqC,CAatC;;;IACA,IAAId,WAAW,CAACW,IAAI,CAACI,IAAN,CAAX,IAA0B,CAACR,mBAA/B,EAAoD;MAClD,OAAOE,OAAO,CAACE,IAAI,CAACG,KAAN,CAAd;IACD,CAhBqC,CAkBtC;;;IACA,IAAIP,mBAAmB,IAAI,CAACC,kBAAxB,IAA8C,CAACQ,YAAY,CAACZ,UAAD,EAAaO,IAAI,CAACG,KAAlB,CAA/D,EAAyF;MACvF,OAAOL,OAAO,CAACE,IAAI,CAACG,KAAN,CAAd;IACD,CArBqC,CAuBtC;;;IACA,IACEP,mBAAmB,IACnBC,kBADA,IAEA,CAACS,WAAW,CAACN,IAAI,CAACG,KAAN,EAAaT,aAAb,CAFZ,IAGA,CAACa,UAAU,CAACb,aAAD,EAAgBM,IAAI,CAACG,KAArB,CAJb,EAKE;MACA,OAAOL,OAAO,CAACE,IAAI,CAACG,KAAN,CAAd;IACD;;IAED,OAAOH,IAAI,CAACG,KAAZ;EACD,CAlCD;;EAoCA,OAAOL,OAAO,CAACL,UAAD,CAAd;AACD;;AAED,SAASY,YAAT,CAAsBG,IAAtB,EAAuCC,KAAvC,EAAuD;EACrD,OAAOnB,WAAW,CAACkB,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAD,EAAoBD,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAApB,CAAlB;AACD;;AAED,SAASJ,WAAT,CAAqBE,IAArB,EAAsCC,KAAtC,EAAsD;EACpD,OAAOD,IAAI,CAACG,MAAL,KAAgBF,KAAK,CAACE,MAA7B;AACD;;AAED,SAASJ,UAAT,CAAoBN,MAApB,EAAuCW,KAAvC,EAAuD;EACrD,OAAOtB,WAAW,CAACW,MAAD,EAASW,KAAK,CAACF,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAT,CAAlB;AACD","names":["isItemGroup","indexEquals","moveHighlight","_a","startIndex","expandedIndex","getNext","hasExpandableGroups","isInRestrictedView","tryMove","currentIndex","next","parent","disabled","index","item","isSameParent","isSameLevel","isIncluded","left","right","slice","length","child"],"sourceRoot":"","sources":["../../../../src/button-dropdown/utils/move-highlight.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isItemGroup, indexEquals } from './utils';\nimport { ButtonDropdownProps } from '../interfaces';\nimport { TreeIndex } from './create-items-tree';\n\n// While every menu item except the edge ones have successors and predecessors,\n// there are rules determining what items are eligible for highlighting for the\n// given set of conditions. The function implements all these rules.\n\ninterface MoveHighlightProps {\n  startIndex: TreeIndex;\n  expandedIndex: TreeIndex;\n  getNext: (index: TreeIndex) => {\n    index: TreeIndex;\n    item: ButtonDropdownProps.ItemOrGroup;\n    parent?: ButtonDropdownProps.ItemOrGroup;\n  } | null;\n  hasExpandableGroups: boolean;\n  isInRestrictedView: boolean;\n}\n\nexport default function moveHighlight({\n  startIndex,\n  expandedIndex,\n  getNext,\n  hasExpandableGroups,\n  isInRestrictedView,\n}: MoveHighlightProps): TreeIndex | null {\n  const tryMove = (currentIndex: TreeIndex): TreeIndex | null => {\n    const next = getNext(currentIndex);\n\n    if (!next) {\n      return null;\n    }\n\n    // Prevents stepping into disabled expandable groups. However,\n    // it's possible to navigate nested groups.\n    if (next.parent?.disabled && hasExpandableGroups) {\n      return tryMove(next.index);\n    }\n\n    // it is not allowed to highlight groups when non-expandable\n    if (isItemGroup(next.item) && !hasExpandableGroups) {\n      return tryMove(next.index);\n    }\n\n    // can only move within same parent unless is in restricted view\n    if (hasExpandableGroups && !isInRestrictedView && !isSameParent(startIndex, next.index)) {\n      return tryMove(next.index);\n    }\n\n    // in restricted view can only navigate to children if group is expanded\n    if (\n      hasExpandableGroups &&\n      isInRestrictedView &&\n      !isSameLevel(next.index, expandedIndex) &&\n      !isIncluded(expandedIndex, next.index)\n    ) {\n      return tryMove(next.index);\n    }\n\n    return next.index;\n  };\n\n  return tryMove(startIndex);\n}\n\nfunction isSameParent(left: TreeIndex, right: TreeIndex) {\n  return indexEquals(left.slice(0, -1), right.slice(0, -1));\n}\n\nfunction isSameLevel(left: TreeIndex, right: TreeIndex) {\n  return left.length === right.length;\n}\n\nfunction isIncluded(parent: TreeIndex, child: TreeIndex) {\n  return indexEquals(parent, child.slice(0, -1));\n}\n"]},"metadata":{},"sourceType":"module"}