{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// these styles needed to be imported for every public component\nimport './styles.css.js';\nimport { PACKAGE_VERSION } from '../environment'; // expose version info, so it can be checked using the browser devtools\n\nif (typeof window !== 'undefined') {\n  if (!window.awsuiVersions) {\n    window.awsuiVersions = {};\n  }\n\n  if (!window.awsuiVersions.components) {\n    window.awsuiVersions.components = [];\n  }\n\n  window.awsuiVersions.components.push(PACKAGE_VERSION);\n}\n\nexport function getBaseProps(props) {\n  var baseProps = {};\n  Object.keys(props).forEach(function (prop) {\n    if (prop === 'id' || prop === 'className' || prop.match(/^data-/)) {\n      baseProps[prop] = props[prop];\n    }\n  });\n  return baseProps;\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA;AACA,OAAO,iBAAP;AACA,SAASA,eAAT,QAAgC,gBAAhC,C,CAQA;;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;EACjC,IAAI,CAACA,MAAM,CAACC,aAAZ,EAA2B;IACzBD,MAAM,CAACC,aAAP,GAAuB,EAAvB;EACD;;EACD,IAAI,CAACD,MAAM,CAACC,aAAP,CAAqBC,UAA1B,EAAsC;IACpCF,MAAM,CAACC,aAAP,CAAqBC,UAArB,GAAkC,EAAlC;EACD;;EACDF,MAAM,CAACC,aAAP,CAAqBC,UAArB,CAAgCC,IAAhC,CAAqCJ,eAArC;AACD;;AAkBD,OAAM,SAAUK,YAAV,CAAuBC,KAAvB,EAAgD;EACpD,IAAMC,SAAS,GAAwB,EAAvC;EACAC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2B,gBAAI;IAC7B,IAAIC,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,WAA1B,IAAyCA,IAAI,CAACC,KAAL,CAAW,QAAX,CAA7C,EAAmE;MACjEL,SAAS,CAACI,IAAD,CAAT,GAAmBL,KAA6B,CAACK,IAAD,CAAhD;IACD;EACF,CAJD;EAKA,OAAOJ,SAAP;AACD","names":["PACKAGE_VERSION","window","awsuiVersions","components","push","getBaseProps","props","baseProps","Object","keys","forEach","prop","match"],"sourceRoot":"","sources":["../../../../src/internal/base-component/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n// these styles needed to be imported for every public component\nimport './styles.css.js';\nimport { PACKAGE_VERSION } from '../environment';\n\n// not using `declare global {}` to avoid polluting customers' typings with this info\ninterface CustomWindow extends Window {\n  awsuiVersions?: { components?: string[] };\n}\ndeclare const window: CustomWindow | undefined;\n\n// expose version info, so it can be checked using the browser devtools\nif (typeof window !== 'undefined') {\n  if (!window.awsuiVersions) {\n    window.awsuiVersions = {};\n  }\n  if (!window.awsuiVersions.components) {\n    window.awsuiVersions.components = [];\n  }\n  window.awsuiVersions.components.push(PACKAGE_VERSION);\n}\n\nexport interface BaseComponentProps {\n  /**\n   * Adds the specified classes to the root element of the component.\n   * @deprecated Custom CSS is not supported. For other use cases, use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes).\n   */\n  className?: string;\n  /**\n   * Adds the specified ID to the root element of the component.\n   * @deprecated Custom CSS is not supported. For other use cases, use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes).\n   */\n  id?: string;\n  // we also support data-* attributes, but they are always implicitly allowed by typescript\n  // http://www.typescriptlang.org/docs/handbook/jsx.html#attribute-type-checking\n  // \"Note: If an attribute name is not a valid JS identifier (like a data-* attribute), it is not considered to be an error\"\n}\n\nexport function getBaseProps(props: BaseComponentProps) {\n  const baseProps: Record<string, any> = {};\n  Object.keys(props).forEach(prop => {\n    if (prop === 'id' || prop === 'className' || prop.match(/^data-/)) {\n      baseProps[prop] = (props as Record<string, any>)[prop];\n    }\n  });\n  return baseProps as BaseComponentProps;\n}\n"]},"metadata":{},"sourceType":"module"}