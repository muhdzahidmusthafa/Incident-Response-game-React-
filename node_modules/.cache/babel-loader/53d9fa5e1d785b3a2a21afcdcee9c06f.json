{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyCode } from '../../keycode';\nimport { createSingletonState } from '../use-singleton-handler';\nvar useFocusSingleton = createSingletonState({\n  initialState: false,\n  factory: function (setIsKeyboard) {\n    var handleMousedown = function () {\n      return setIsKeyboard(false);\n    };\n\n    var handleKeydown = function (event) {\n      // we do not want to highlight focused element\n      // when special keys are pressed\n      var isSpecialKey = [KeyCode.shift, KeyCode.alt, KeyCode.control, KeyCode.meta].indexOf(event.keyCode) > -1;\n\n      if (!isSpecialKey) {\n        setIsKeyboard(true);\n      }\n    };\n\n    document.addEventListener('mousedown', handleMousedown);\n    document.addEventListener('keydown', handleKeydown);\n    return function () {\n      document.removeEventListener('mousedown', handleMousedown);\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }\n});\nexport default function useFocusVisible() {\n  var visible = useFocusSingleton();\n  return visible ? {\n    'data-awsui-focus-visible': visible\n  } : {};\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,oBAAT,QAAqC,0BAArC;AAEA,IAAMC,iBAAiB,GAAGD,oBAAoB,CAAU;EACtDE,YAAY,EAAE,KADwC;EAEtDC,OAAO,EAAE,yBAAa;IACpB,IAAMC,eAAe,GAAG;MAAM,oBAAa,CAAC,KAAD,CAAb;IAAoB,CAAlD;;IACA,IAAMC,aAAa,GAAG,UAACC,KAAD,EAAqB;MACzC;MACA;MACA,IAAMC,YAAY,GAAG,CAACR,OAAO,CAACS,KAAT,EAAgBT,OAAO,CAACU,GAAxB,EAA6BV,OAAO,CAACW,OAArC,EAA8CX,OAAO,CAACY,IAAtD,EAA4DC,OAA5D,CAAoEN,KAAK,CAACO,OAA1E,IAAqF,CAAC,CAA3G;;MAEA,IAAI,CAACN,YAAL,EAAmB;QACjBO,aAAa,CAAC,IAAD,CAAb;MACD;IACF,CARD;;IASAC,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCZ,eAAvC;IACAW,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCX,aAArC;IACA,OAAO;MACLU,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0Cb,eAA1C;MACAW,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCZ,aAAxC;IACD,CAHD;EAID;AAnBqD,CAAV,CAA9C;AAsBA,eAAc,SAAUa,eAAV,GAAyB;EACrC,IAAMC,OAAO,GAAGlB,iBAAiB,EAAjC;EACA,OAAOkB,OAAO,GAAG;IAAE,4BAA4BA;EAA9B,CAAH,GAA6C,EAA3D;AACD","names":["KeyCode","createSingletonState","useFocusSingleton","initialState","factory","handleMousedown","handleKeydown","event","isSpecialKey","shift","alt","control","meta","indexOf","keyCode","setIsKeyboard","document","addEventListener","removeEventListener","useFocusVisible","visible"],"sourceRoot":"","sources":["../../../../../src/internal/hooks/focus-visible/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyCode } from '../../keycode';\nimport { createSingletonState } from '../use-singleton-handler';\n\nconst useFocusSingleton = createSingletonState<boolean>({\n  initialState: false,\n  factory: setIsKeyboard => {\n    const handleMousedown = () => setIsKeyboard(false);\n    const handleKeydown = (event: KeyboardEvent) => {\n      // we do not want to highlight focused element\n      // when special keys are pressed\n      const isSpecialKey = [KeyCode.shift, KeyCode.alt, KeyCode.control, KeyCode.meta].indexOf(event.keyCode) > -1;\n\n      if (!isSpecialKey) {\n        setIsKeyboard(true);\n      }\n    };\n    document.addEventListener('mousedown', handleMousedown);\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('mousedown', handleMousedown);\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  },\n});\n\nexport default function useFocusVisible() {\n  const visible = useFocusSingleton();\n  return visible ? { 'data-awsui-focus-visible': visible } : {};\n}\n"]},"metadata":{},"sourceType":"module"}