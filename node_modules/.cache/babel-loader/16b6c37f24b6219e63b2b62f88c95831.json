{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './styles.css.js';\nimport { normalizeLocale } from '../date-picker/calendar/utils/locales';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { KeyCode } from '../internal/keycode';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport InternalBox from '../box/internal';\nimport { DateRangePickerDropdown } from './dropdown';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport Dropdown from '../internal/components/dropdown';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport ButtonTrigger from '../internal/components/button-trigger';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport InternalIcon from '../icon/internal';\nimport { getBrowserTimezoneOffset, shiftTimeOffset, formatOffset, setTimeOffset } from './time-offset';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { fireNonCancelableEvent } from '../internal/events/index.js';\nimport { isDevelopment } from '../internal/is-development.js';\nimport { warnOnce } from '../internal/logging.js';\nimport { usePrevious } from '../internal/hooks/use-previous/index.js';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\n\nfunction formatDateRange(range, placeholder, formatRelativeRange, timeOffset) {\n  if (!range) {\n    return React.createElement(\"span\", {\n      className: styles['label-text'],\n      \"aria-disabled\": true\n    }, placeholder);\n  }\n\n  var formatted = range.type === 'relative' ? formatRelativeRange(range) : React.createElement(BreakSpaces, {\n    text: formatAbsoluteRange(range, timeOffset)\n  });\n  return React.createElement(InternalBox, {\n    fontWeight: \"normal\",\n    display: \"inline\",\n    color: \"inherit\"\n  }, formatted);\n}\n\nfunction BreakSpaces(_a) {\n  var text = _a.text;\n  var tokens = text.split(/( )/);\n  return React.createElement(\"div\", {\n    style: {\n      whiteSpace: 'nowrap'\n    }\n  }, tokens.map(function (token, index) {\n    return React.createElement(React.Fragment, {\n      key: index\n    }, token, token === ' ' && React.createElement(\"wbr\", null));\n  }));\n}\n\nfunction formatAbsoluteRange(value, timeOffset) {\n  var formattedOffset = isDateOnly(value) ? '' : formatOffset(timeOffset);\n  return value.startDate + formattedOffset + ' ' + 'â€”' + ' ' + value.endDate + formattedOffset;\n}\n\nfunction isDateOnly(value) {\n  if (!value || value.type !== 'absolute') {\n    return false;\n  }\n\n  var dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\n  return dateRegex.test(value.startDate) && dateRegex.test(value.endDate);\n}\n\nfunction formatValue(value, _a) {\n  var timeOffset = _a.timeOffset,\n      dateOnly = _a.dateOnly;\n\n  if (!value || value.type === 'relative') {\n    return value;\n  }\n\n  if (dateOnly) {\n    return {\n      type: 'absolute',\n      startDate: value.startDate.split('T')[0],\n      endDate: value.endDate.split('T')[0]\n    };\n  }\n\n  return setTimeOffset(value, timeOffset);\n}\n\nvar DateRangePicker = React.forwardRef(function (_a, ref) {\n  var _b;\n\n  var _c, _d;\n\n  var _e = _a.locale,\n      locale = _e === void 0 ? '' : _e,\n      startOfWeek = _a.startOfWeek,\n      _f = _a.isDateEnabled,\n      isDateEnabled = _f === void 0 ? function () {\n    return true;\n  } : _f,\n      value = _a.value,\n      placeholder = _a.placeholder,\n      _g = _a.readOnly,\n      readOnly = _g === void 0 ? false : _g,\n      _h = _a.disabled,\n      disabled = _h === void 0 ? false : _h,\n      onChange = _a.onChange,\n      onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      _j = _a.relativeOptions,\n      relativeOptions = _j === void 0 ? [] : _j,\n      i18nStrings = _a.i18nStrings,\n      _k = _a.isValidRange,\n      isValidRange = _k === void 0 ? function () {\n    return {\n      valid: true\n    };\n  } : _k,\n      _l = _a.showClearButton,\n      showClearButton = _l === void 0 ? true : _l,\n      _m = _a.dateOnly,\n      dateOnly = _m === void 0 ? false : _m,\n      _o = _a.timeOffset,\n      timeOffset = _o === void 0 ? getBrowserTimezoneOffset() : _o,\n      _p = _a.timeInputFormat,\n      timeInputFormat = _p === void 0 ? 'hh:mm:ss' : _p,\n      _q = _a.expandToViewport,\n      expandToViewport = _q === void 0 ? false : _q,\n      _r = _a.rangeSelectorMode,\n      rangeSelectorMode = _r === void 0 ? 'default' : _r,\n      rest = __rest(_a, [\"locale\", \"startOfWeek\", \"isDateEnabled\", \"value\", \"placeholder\", \"readOnly\", \"disabled\", \"onChange\", \"onBlur\", \"onFocus\", \"relativeOptions\", \"i18nStrings\", \"isValidRange\", \"showClearButton\", \"dateOnly\", \"timeOffset\", \"timeInputFormat\", \"expandToViewport\", \"rangeSelectorMode\"]);\n\n  var __internalRootRef = useBaseComponent('DateRangePicker').__internalRootRef;\n\n  checkControlled('DateRangePicker', 'value', value, 'onChange', onChange);\n  value = isDateOnly(value) ? value : shiftTimeOffset(value, timeOffset);\n  var baseProps = getBaseProps(rest);\n\n  var _s = useFormFieldContext(__assign({\n    ariaLabelledby: (_c = rest.ariaLabelledby) !== null && _c !== void 0 ? _c : i18nStrings.ariaLabelledby,\n    ariaDescribedby: (_d = rest.ariaDescribedby) !== null && _d !== void 0 ? _d : i18nStrings.ariaDescribedby\n  }, rest)),\n      invalid = _s.invalid,\n      controlId = _s.controlId,\n      ariaDescribedby = _s.ariaDescribedby,\n      ariaLabelledby = _s.ariaLabelledby;\n\n  var isSingleGrid = useMobile();\n  var triggerRef = useRef(null);\n  useForwardFocus(ref, triggerRef);\n  var rootRef = useRef(null);\n  var dropdownId = useUniqueId('date-range-picker-dropdown');\n  useFocusTracker({\n    rootRef: rootRef,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    viewportId: expandToViewport ? dropdownId : ''\n  });\n\n  var _t = useState(false),\n      isDropDownOpen = _t[0],\n      setIsDropDownOpen = _t[1];\n\n  var normalizedLocale = normalizeLocale('DateRangePicker', locale !== null && locale !== void 0 ? locale : '');\n\n  var closeDropdown = function (focusTrigger) {\n    var _a;\n\n    if (focusTrigger === void 0) {\n      focusTrigger = false;\n    }\n\n    setIsDropDownOpen(false);\n\n    if (focusTrigger) {\n      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n\n  var onWrapperKeyDownHandler = function (event) {\n    if (event.keyCode === KeyCode.escape) {\n      closeDropdown(true);\n    }\n  };\n\n  var onClear = function () {\n    fireNonCancelableEvent(onChange, {\n      value: null\n    });\n  };\n\n  var onApply = function (newValue) {\n    var validationResult = isValidRange(newValue);\n\n    if ((validationResult === null || validationResult === void 0 ? void 0 : validationResult.valid) === false) {\n      return validationResult;\n    }\n\n    if (isDevelopment) {\n      if ((newValue === null || newValue === void 0 ? void 0 : newValue.type) === 'absolute') {\n        var startDateWithoutTime = newValue.startDate.split('T')[0];\n        var endDateWithoutTime = newValue.endDate.split('T')[0];\n\n        if (!startDateWithoutTime || !endDateWithoutTime) {\n          warnOnce('DateRangePicker', 'You have provided an `isValidRange` prop that did not catch a missing start or end date.');\n        }\n      }\n    }\n\n    fireNonCancelableEvent(onChange, {\n      value: formatValue(newValue, {\n        dateOnly: dateOnly,\n        timeOffset: timeOffset\n      })\n    });\n    return validationResult || {\n      valid: true\n    };\n  };\n\n  var prevDateOnly = usePrevious(dateOnly);\n  useEffect(function () {\n    if (prevDateOnly !== undefined && prevDateOnly !== dateOnly) {\n      warnOnce('DateRangePicker', \"The provided `dateOnly` flag has been changed from \\\"\".concat(prevDateOnly, \"\\\" to \\\"\").concat(dateOnly, \"\\\" which can lead to unexpected value format. Consider using separate components.\"));\n    }\n  }, [prevDateOnly, dateOnly]);\n\n  if (value && value.type !== 'absolute' && value.type !== 'relative') {\n    warnOnce('DateRangePicker', 'You provided an invalid value. Reverting back to default.');\n    value = null;\n  }\n\n  if ((value === null || value === void 0 ? void 0 : value.type) === 'absolute' && rangeSelectorMode === 'relative-only' || (value === null || value === void 0 ? void 0 : value.type) === 'relative' && rangeSelectorMode === 'absolute-only') {\n    warnOnce('DateRangePicker', 'The provided value does not correspond to the current range selector mode. Reverting back to default.');\n    value = null;\n  }\n\n  var trigger = React.createElement(\"div\", {\n    className: styles['trigger-wrapper']\n  }, React.createElement(ButtonTrigger, {\n    ref: triggerRef,\n    id: controlId,\n    invalid: invalid,\n    ariaLabel: i18nStrings.ariaLabel,\n    ariaDescribedby: ariaDescribedby,\n    ariaLabelledby: ariaLabelledby,\n    className: clsx(styles.label, (_b = {}, _b[styles['label-enabled']] = !readOnly && !disabled, _b)),\n    hideCaret: true,\n    onClick: function () {\n      if (!readOnly && !disabled) {\n        setIsDropDownOpen(true);\n      }\n    },\n    disabled: disabled,\n    readOnly: readOnly,\n    ariaHasPopup: \"true\"\n  }, React.createElement(\"span\", {\n    className: styles['trigger-flexbox']\n  }, React.createElement(\"span\", {\n    className: styles['icon-wrapper']\n  }, React.createElement(InternalIcon, {\n    name: \"calendar\",\n    variant: disabled || readOnly ? 'disabled' : 'normal'\n  })), formatDateRange(value, placeholder !== null && placeholder !== void 0 ? placeholder : '', i18nStrings.formatRelativeRange, timeOffset))));\n  var mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(baseProps.className, styles.root),\n    onKeyDown: onWrapperKeyDownHandler\n  }), React.createElement(Dropdown, {\n    stretchWidth: true,\n    stretchHeight: true,\n    open: isDropDownOpen,\n    onDropdownClose: function () {\n      return closeDropdown();\n    },\n    trigger: trigger,\n    stretchToTriggerWidth: false,\n    expandToViewport: expandToViewport,\n    dropdownId: dropdownId\n  }, isDropDownOpen && React.createElement(DateRangePickerDropdown, {\n    startOfWeek: startOfWeek,\n    locale: normalizedLocale,\n    isSingleGrid: isSingleGrid,\n    onDropdownClose: function () {\n      return closeDropdown(true);\n    },\n    value: value,\n    showClearButton: showClearButton,\n    isDateEnabled: isDateEnabled,\n    i18nStrings: i18nStrings,\n    onClear: onClear,\n    onApply: onApply,\n    relativeOptions: relativeOptions,\n    isValidRange: isValidRange,\n    dateOnly: dateOnly,\n    timeInputFormat: timeInputFormat,\n    rangeSelectorMode: rangeSelectorMode,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby\n  })));\n});\napplyDisplayName(DateRangePicker, 'DateRangePicker');\nexport default DateRangePicker;","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","useState","styles","normalizeLocale","useForwardFocus","KeyCode","clsx","getBaseProps","checkControlled","InternalBox","DateRangePickerDropdown","applyDisplayName","Dropdown","useFocusTracker","useMobile","ButtonTrigger","useFormFieldContext","InternalIcon","getBrowserTimezoneOffset","shiftTimeOffset","formatOffset","setTimeOffset","useBaseComponent","useMergeRefs","fireNonCancelableEvent","isDevelopment","warnOnce","usePrevious","useUniqueId","formatDateRange","range","placeholder","formatRelativeRange","timeOffset","className","formatted","type","BreakSpaces","text","formatAbsoluteRange","fontWeight","display","color","_a","tokens","split","style","whiteSpace","map","token","index","Fragment","key","value","formattedOffset","isDateOnly","startDate","endDate","dateRegex","test","formatValue","dateOnly","DateRangePicker","forwardRef","ref","_e","startOfWeek","_f","isDateEnabled","_g","readOnly","_h","disabled","onChange","onBlur","onFocus","_j","relativeOptions","i18nStrings","_k","isValidRange","valid","_l","showClearButton","_m","_o","_p","timeInputFormat","_q","expandToViewport","_r","rangeSelectorMode","rest","__internalRootRef","baseProps","ariaLabelledby","_c","ariaDescribedby","_d","invalid","controlId","isSingleGrid","triggerRef","rootRef","dropdownId","viewportId","isDropDownOpen","setIsDropDownOpen","normalizedLocale","locale","closeDropdown","focusTrigger","current","focus","onWrapperKeyDownHandler","event","keyCode","escape","onClear","onApply","newValue","validationResult","startDateWithoutTime","endDateWithoutTime","prevDateOnly","undefined","concat","trigger","id","ariaLabel","label","_b","hideCaret","onClick","ariaHasPopup","name","variant","mergedRef","root","onKeyDown","stretchWidth","stretchHeight","open","onDropdownClose","stretchToTriggerWidth"],"sourceRoot":"","sources":["../../../src/date-range-picker/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref, useEffect, useRef, useState } from 'react';\nimport styles from './styles.css.js';\nimport { DateRangePickerProps } from './interfaces';\nimport { normalizeLocale } from '../date-picker/calendar/utils/locales';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { KeyCode } from '../internal/keycode';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport InternalBox from '../box/internal';\nimport { DateRangePickerDropdown } from './dropdown';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport Dropdown from '../internal/components/dropdown';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport ButtonTrigger from '../internal/components/button-trigger';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport InternalIcon from '../icon/internal';\nimport { getBrowserTimezoneOffset, shiftTimeOffset, formatOffset, setTimeOffset } from './time-offset';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { fireNonCancelableEvent } from '../internal/events/index.js';\nimport { isDevelopment } from '../internal/is-development.js';\nimport { warnOnce } from '../internal/logging.js';\nimport { usePrevious } from '../internal/hooks/use-previous/index.js';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\n\nexport { DateRangePickerProps };\n\nfunction formatDateRange(\n  range: null | DateRangePickerProps.Value,\n  placeholder: string,\n  formatRelativeRange: DateRangePickerProps.I18nStrings['formatRelativeRange'],\n  timeOffset: number\n) {\n  if (!range) {\n    return (\n      <span className={styles['label-text']} aria-disabled={true}>\n        {placeholder}\n      </span>\n    );\n  }\n\n  const formatted =\n    range.type === 'relative' ? (\n      formatRelativeRange(range)\n    ) : (\n      <BreakSpaces text={formatAbsoluteRange(range, timeOffset)} />\n    );\n\n  return (\n    <InternalBox fontWeight=\"normal\" display=\"inline\" color=\"inherit\">\n      {formatted}\n    </InternalBox>\n  );\n}\n\nfunction BreakSpaces({ text }: { text: string }) {\n  const tokens = text.split(/( )/);\n  return (\n    <div style={{ whiteSpace: 'nowrap' }}>\n      {tokens.map((token, index) => (\n        <React.Fragment key={index}>\n          {token}\n          {token === ' ' && <wbr />}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n\nfunction formatAbsoluteRange(value: DateRangePickerProps.AbsoluteValue, timeOffset: number): string {\n  const formattedOffset = isDateOnly(value) ? '' : formatOffset(timeOffset);\n  return value.startDate + formattedOffset + ' ' + 'â€”' + ' ' + value.endDate + formattedOffset;\n}\n\nfunction isDateOnly(value: null | DateRangePickerProps.Value) {\n  if (!value || value.type !== 'absolute') {\n    return false;\n  }\n  const dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\n  return dateRegex.test(value.startDate) && dateRegex.test(value.endDate);\n}\n\nfunction formatValue(\n  value: null | DateRangePickerProps.Value,\n  { timeOffset, dateOnly }: { timeOffset: number; dateOnly: boolean }\n): null | DateRangePickerProps.Value {\n  if (!value || value.type === 'relative') {\n    return value;\n  }\n  if (dateOnly) {\n    return {\n      type: 'absolute',\n      startDate: value.startDate.split('T')[0],\n      endDate: value.endDate.split('T')[0],\n    };\n  }\n  return setTimeOffset(value, timeOffset);\n}\n\nconst DateRangePicker = React.forwardRef(\n  (\n    {\n      locale = '',\n      startOfWeek,\n      isDateEnabled = () => true,\n      value,\n      placeholder,\n      readOnly = false,\n      disabled = false,\n      onChange,\n      onBlur,\n      onFocus,\n      relativeOptions = [],\n      i18nStrings,\n      isValidRange = () => ({ valid: true }),\n      showClearButton = true,\n      dateOnly = false,\n      timeOffset = getBrowserTimezoneOffset(),\n      timeInputFormat = 'hh:mm:ss',\n      expandToViewport = false,\n      rangeSelectorMode = 'default',\n      ...rest\n    }: DateRangePickerProps,\n    ref: Ref<DateRangePickerProps.Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent('DateRangePicker');\n    checkControlled('DateRangePicker', 'value', value, 'onChange', onChange);\n\n    value = isDateOnly(value) ? value : shiftTimeOffset(value, timeOffset);\n\n    const baseProps = getBaseProps(rest);\n    const { invalid, controlId, ariaDescribedby, ariaLabelledby } = useFormFieldContext({\n      ariaLabelledby: rest.ariaLabelledby ?? i18nStrings.ariaLabelledby,\n      ariaDescribedby: rest.ariaDescribedby ?? i18nStrings.ariaDescribedby,\n      ...rest,\n    });\n    const isSingleGrid = useMobile();\n\n    const triggerRef = useRef<HTMLButtonElement | null>(null);\n    useForwardFocus(ref, triggerRef);\n\n    const rootRef = useRef<HTMLDivElement>(null);\n    const dropdownId = useUniqueId('date-range-picker-dropdown');\n\n    useFocusTracker({ rootRef, onBlur, onFocus, viewportId: expandToViewport ? dropdownId : '' });\n\n    const [isDropDownOpen, setIsDropDownOpen] = useState<boolean>(false);\n\n    const normalizedLocale = normalizeLocale('DateRangePicker', locale ?? '');\n\n    const closeDropdown = (focusTrigger = false) => {\n      setIsDropDownOpen(false);\n      if (focusTrigger) {\n        triggerRef.current?.focus();\n      }\n    };\n\n    const onWrapperKeyDownHandler = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.keyCode === KeyCode.escape) {\n        closeDropdown(true);\n      }\n    };\n\n    const onClear = () => {\n      fireNonCancelableEvent(onChange, { value: null });\n    };\n\n    const onApply = (newValue: null | DateRangePickerProps.Value): DateRangePickerProps.ValidationResult => {\n      const validationResult = isValidRange(newValue);\n      if (validationResult?.valid === false) {\n        return validationResult;\n      }\n\n      if (isDevelopment) {\n        if (newValue?.type === 'absolute') {\n          const [startDateWithoutTime] = newValue.startDate.split('T');\n          const [endDateWithoutTime] = newValue.endDate.split('T');\n          if (!startDateWithoutTime || !endDateWithoutTime) {\n            warnOnce(\n              'DateRangePicker',\n              'You have provided an `isValidRange` prop that did not catch a missing start or end date.'\n            );\n          }\n        }\n      }\n      fireNonCancelableEvent(onChange, { value: formatValue(newValue, { dateOnly, timeOffset }) });\n      return validationResult || { valid: true };\n    };\n\n    const prevDateOnly = usePrevious(dateOnly);\n    useEffect(() => {\n      if (prevDateOnly !== undefined && prevDateOnly !== dateOnly) {\n        warnOnce(\n          'DateRangePicker',\n          `The provided \\`dateOnly\\` flag has been changed from \"${prevDateOnly}\" to \"${dateOnly}\" which can lead to unexpected value format. Consider using separate components.`\n        );\n      }\n    }, [prevDateOnly, dateOnly]);\n\n    if (value && value.type !== 'absolute' && value.type !== 'relative') {\n      warnOnce('DateRangePicker', 'You provided an invalid value. Reverting back to default.');\n      value = null;\n    }\n\n    if (\n      (value?.type === 'absolute' && rangeSelectorMode === 'relative-only') ||\n      (value?.type === 'relative' && rangeSelectorMode === 'absolute-only')\n    ) {\n      warnOnce(\n        'DateRangePicker',\n        'The provided value does not correspond to the current range selector mode. Reverting back to default.'\n      );\n      value = null;\n    }\n\n    const trigger = (\n      <div className={styles['trigger-wrapper']}>\n        <ButtonTrigger\n          ref={triggerRef}\n          id={controlId}\n          invalid={invalid}\n          ariaLabel={i18nStrings.ariaLabel}\n          ariaDescribedby={ariaDescribedby}\n          ariaLabelledby={ariaLabelledby}\n          className={clsx(styles.label, {\n            [styles['label-enabled']]: !readOnly && !disabled,\n          })}\n          hideCaret={true}\n          onClick={() => {\n            if (!readOnly && !disabled) {\n              setIsDropDownOpen(true);\n            }\n          }}\n          disabled={disabled}\n          readOnly={readOnly}\n          ariaHasPopup=\"true\"\n        >\n          <span className={styles['trigger-flexbox']}>\n            <span className={styles['icon-wrapper']}>\n              <InternalIcon name=\"calendar\" variant={disabled || readOnly ? 'disabled' : 'normal'} />\n            </span>\n            {formatDateRange(value, placeholder ?? '', i18nStrings.formatRelativeRange, timeOffset)}\n          </span>\n        </ButtonTrigger>\n      </div>\n    );\n\n    const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n\n    return (\n      <div\n        {...baseProps}\n        ref={mergedRef}\n        className={clsx(baseProps.className, styles.root)}\n        onKeyDown={onWrapperKeyDownHandler}\n      >\n        <Dropdown\n          stretchWidth={true}\n          stretchHeight={true}\n          open={isDropDownOpen}\n          onDropdownClose={() => closeDropdown()}\n          trigger={trigger}\n          stretchToTriggerWidth={false}\n          expandToViewport={expandToViewport}\n          dropdownId={dropdownId}\n        >\n          {isDropDownOpen && (\n            <DateRangePickerDropdown\n              startOfWeek={startOfWeek}\n              locale={normalizedLocale}\n              isSingleGrid={isSingleGrid}\n              onDropdownClose={() => closeDropdown(true)}\n              value={value}\n              showClearButton={showClearButton}\n              isDateEnabled={isDateEnabled}\n              i18nStrings={i18nStrings}\n              onClear={onClear}\n              onApply={onApply}\n              relativeOptions={relativeOptions}\n              isValidRange={isValidRange}\n              dateOnly={dateOnly}\n              timeInputFormat={timeInputFormat}\n              rangeSelectorMode={rangeSelectorMode}\n              ariaLabelledby={ariaLabelledby}\n              ariaDescribedby={ariaDescribedby}\n            />\n          )}\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\napplyDisplayName(DateRangePicker, 'DateRangePicker');\nexport default DateRangePicker;\n"]},"metadata":{},"sourceType":"module"}