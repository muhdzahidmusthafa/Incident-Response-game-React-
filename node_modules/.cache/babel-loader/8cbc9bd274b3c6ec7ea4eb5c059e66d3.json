{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useCollection } from '@awsui/collection-hooks';\nimport { InternalButton } from '../../button/internal';\nimport InternalHeader from '../../header/internal';\nimport InternalPagination from '../../pagination/internal';\nimport InternalTable from '../../table/internal';\nimport InternalTextFilter from '../../text-filter/internal';\nimport useForwardFocus from '../../internal/hooks/forward-focus';\nimport { useStableEventHandler } from '../../internal/hooks/use-stable-event-handler';\nimport { EmptyState } from './empty-state';\nexport function getSharedI18Strings(i18nStrings) {\n  return {\n    filteringCounterText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filteringCounterText,\n    labelRefresh: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelRefresh,\n    labelsPagination: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsPagination,\n    noMatchTitle: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filteringNoMatches,\n    noMatchSubtitle: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filteringCantFindMatch,\n    clearFilterButtonText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.clearFilterButtonText\n  };\n}\nexport function BasicS3Table(_a) {\n  var _b;\n\n  var forwardFocusRef = _a.forwardFocusRef,\n      columnDefinitions = _a.columnDefinitions,\n      fetchData = _a.fetchData,\n      trackBy = _a.trackBy,\n      _c = _a.i18nStrings,\n      i18nStrings = _c === void 0 ? {} : _c,\n      isVisualRefresh = _a.isVisualRefresh,\n      visibleColumns = _a.visibleColumns,\n      isItemDisabled = _a.isItemDisabled,\n      onSelect = _a.onSelect;\n\n  var _d = useState(false),\n      loading = _d[0],\n      setLoading = _d[1];\n\n  var _e = useState([]),\n      allItems = _e[0],\n      setAllItems = _e[1];\n\n  var textFilterRef = useRef(null);\n  var onSelectLatest = useStableEventHandler(onSelect);\n\n  function loadData() {\n    setLoading(true);\n    fetchData().then(function (items) {\n      setAllItems(items);\n      setLoading(false);\n    })[\"catch\"](function () {\n      // error handling should happen on the customer side, outside of this component\n      setLoading(false);\n    });\n  }\n\n  useEffect(function () {\n    loadData(); // Data loading is only happening on initial render, or via refresh button\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useForwardFocus(forwardFocusRef, textFilterRef);\n\n  var _f = useCollection(allItems, {\n    selection: {\n      trackBy: trackBy\n    },\n    filtering: {\n      empty: i18nStrings.emptyText,\n      noMatch: React.createElement(EmptyState, {\n        title: i18nStrings.noMatchTitle,\n        subtitle: i18nStrings.noMatchSubtitle,\n        action: React.createElement(InternalButton, {\n          onClick: function () {\n            return actions.setFiltering('');\n          }\n        }, i18nStrings.clearFilterButtonText)\n      })\n    },\n    pagination: {},\n    sorting: {}\n  }),\n      items = _f.items,\n      filteredItemsCount = _f.filteredItemsCount,\n      collectionProps = _f.collectionProps,\n      filterProps = _f.filterProps,\n      paginationProps = _f.paginationProps,\n      actions = _f.actions;\n\n  var selectedItem = (_b = collectionProps.selectedItems) === null || _b === void 0 ? void 0 : _b[0]; // selectedItem can change internally inside the hook after pagination or filtering\n  // useEffect will capture all possible changes\n\n  useEffect(function () {\n    onSelectLatest(selectedItem);\n  }, [selectedItem, onSelectLatest]);\n  return React.createElement(InternalTable, __assign({\n    variant: \"embedded\"\n  }, collectionProps, {\n    header: React.createElement(InternalHeader, {\n      variant: isVisualRefresh ? 'h3' : 'h2',\n      actions: React.createElement(InternalButton, {\n        iconName: \"refresh\",\n        ariaLabel: i18nStrings.labelRefresh,\n        onClick: loadData\n      }),\n      counter: selectedItem ? \"(1/\".concat(allItems.length, \")\") : \"(\".concat(allItems.length, \")\")\n    }, i18nStrings.header),\n    trackBy: trackBy,\n    filter: React.createElement(InternalTextFilter, __assign({}, filterProps, {\n      ref: textFilterRef,\n      filteringAriaLabel: i18nStrings.filteringAriaLabel,\n      filteringPlaceholder: i18nStrings.filteringPlaceholder,\n      countText: i18nStrings.filteringCounterText ? i18nStrings.filteringCounterText(filteredItemsCount) : ''\n    })),\n    pagination: React.createElement(InternalPagination, __assign({}, paginationProps, {\n      ariaLabels: i18nStrings.labelsPagination\n    })),\n    selectionType: \"single\",\n    ariaLabels: i18nStrings.selectionLabels,\n    loading: loading,\n    loadingText: i18nStrings.loadingText,\n    items: items,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled,\n    columnDefinitions: columnDefinitions\n  }));\n}","map":{"version":3,"mappings":"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","names":["React","useEffect","useState","useRef","useCollection","InternalButton","InternalHeader","InternalPagination","InternalTable","InternalTextFilter","useForwardFocus","useStableEventHandler","EmptyState","getSharedI18Strings","i18nStrings","filteringCounterText","labelRefresh","labelsPagination","noMatchTitle","filteringNoMatches","noMatchSubtitle","filteringCantFindMatch","clearFilterButtonText","BasicS3Table","_a","forwardFocusRef","columnDefinitions","fetchData","trackBy","_c","isVisualRefresh","visibleColumns","isItemDisabled","onSelect","loading","setLoading","allItems","setAllItems","textFilterRef","onSelectLatest","loadData","then","items","selection","filtering","empty","emptyText","noMatch","title","subtitle","action","onClick","setFiltering","pagination","sorting","filteredItemsCount","collectionProps","filterProps","paginationProps","actions","selectedItem","selectedItems","_b","__assign","variant","header","iconName","ariaLabel","counter","length","filter","ref","filteringAriaLabel","filteringPlaceholder","countText","ariaLabels","selectionType","selectionLabels","loadingText"],"sourceRoot":"","sources":["../../../../src/s3-resource-selector/s3-modal/basic-table.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useCollection } from '@awsui/collection-hooks';\nimport { InternalButton } from '../../button/internal';\nimport InternalHeader from '../../header/internal';\nimport { PaginationProps } from '../../pagination/interfaces';\nimport InternalPagination from '../../pagination/internal';\nimport { TableProps } from '../../table/interfaces';\nimport InternalTable from '../../table/internal';\nimport { TextFilterProps } from '../../text-filter/interfaces';\nimport InternalTextFilter from '../../text-filter/internal';\nimport useForwardFocus, { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { useStableEventHandler } from '../../internal/hooks/use-stable-event-handler';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { EmptyState } from './empty-state';\n\ninterface BasicS3TableStrings<T> {\n  labelRefresh?: string;\n  labelsPagination?: PaginationProps.Labels;\n  header?: string;\n  loadingText?: string;\n  filteringPlaceholder?: string;\n  filteringAriaLabel?: string;\n  filteringCounterText?: S3ResourceSelectorProps.I18nStrings['filteringCounterText'];\n  emptyText?: string;\n  noMatchTitle?: string;\n  noMatchSubtitle?: string;\n  clearFilterButtonText?: string;\n  selectionLabels?: TableProps.AriaLabels<T>;\n}\n\ninterface BasicS3TableProps<T> {\n  // We do not use idiomatic `ref` prop because it does not allow generics.\n  // Option 3 from this solution: https://stackoverflow.com/a/58473012/1297743\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n  fetchData: () => Promise<ReadonlyArray<T>>;\n  trackBy: TableProps.TrackBy<T>;\n  i18nStrings: BasicS3TableStrings<T>;\n  isVisualRefresh?: boolean;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<T> | undefined;\n  onSelect: (item: T | undefined) => void;\n}\n\nexport function getSharedI18Strings(i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined) {\n  return {\n    filteringCounterText: i18nStrings?.filteringCounterText,\n    labelRefresh: i18nStrings?.labelRefresh,\n    labelsPagination: i18nStrings?.labelsPagination,\n    noMatchTitle: i18nStrings?.filteringNoMatches,\n    noMatchSubtitle: i18nStrings?.filteringCantFindMatch,\n    clearFilterButtonText: i18nStrings?.clearFilterButtonText,\n  };\n}\n\nexport function BasicS3Table<T>({\n  forwardFocusRef,\n  columnDefinitions,\n  fetchData,\n  trackBy,\n  i18nStrings = {},\n  isVisualRefresh,\n  visibleColumns,\n  isItemDisabled,\n  onSelect,\n}: BasicS3TableProps<T>) {\n  const [loading, setLoading] = useState(false);\n  const [allItems, setAllItems] = useState<ReadonlyArray<T>>([]);\n  const textFilterRef = useRef<TextFilterProps.Ref>(null);\n  const onSelectLatest = useStableEventHandler(onSelect);\n\n  function loadData() {\n    setLoading(true);\n    fetchData()\n      .then(items => {\n        setAllItems(items);\n        setLoading(false);\n      })\n      .catch(() => {\n        // error handling should happen on the customer side, outside of this component\n        setLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    loadData();\n    // Data loading is only happening on initial render, or via refresh button\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useForwardFocus(forwardFocusRef, textFilterRef);\n\n  const { items, filteredItemsCount, collectionProps, filterProps, paginationProps, actions } = useCollection(\n    allItems,\n    {\n      selection: { trackBy },\n      filtering: {\n        empty: i18nStrings.emptyText,\n        noMatch: (\n          <EmptyState\n            title={i18nStrings.noMatchTitle}\n            subtitle={i18nStrings.noMatchSubtitle}\n            action={\n              <InternalButton onClick={() => actions.setFiltering('')}>\n                {i18nStrings.clearFilterButtonText}\n              </InternalButton>\n            }\n          />\n        ),\n      },\n      pagination: {},\n      sorting: {},\n    }\n  );\n  const selectedItem = collectionProps.selectedItems?.[0];\n\n  // selectedItem can change internally inside the hook after pagination or filtering\n  // useEffect will capture all possible changes\n  useEffect(() => {\n    onSelectLatest(selectedItem);\n  }, [selectedItem, onSelectLatest]);\n\n  return (\n    <InternalTable<T>\n      variant=\"embedded\"\n      {...collectionProps}\n      header={\n        <InternalHeader\n          variant={isVisualRefresh ? 'h3' : 'h2'}\n          actions={<InternalButton iconName=\"refresh\" ariaLabel={i18nStrings.labelRefresh} onClick={loadData} />}\n          counter={selectedItem ? `(1/${allItems.length})` : `(${allItems.length})`}\n        >\n          {i18nStrings.header}\n        </InternalHeader>\n      }\n      trackBy={trackBy}\n      filter={\n        <InternalTextFilter\n          {...filterProps}\n          ref={textFilterRef}\n          filteringAriaLabel={i18nStrings.filteringAriaLabel}\n          filteringPlaceholder={i18nStrings.filteringPlaceholder}\n          countText={i18nStrings.filteringCounterText ? i18nStrings.filteringCounterText(filteredItemsCount!) : ''}\n        />\n      }\n      pagination={<InternalPagination {...paginationProps} ariaLabels={i18nStrings.labelsPagination} />}\n      selectionType=\"single\"\n      ariaLabels={i18nStrings.selectionLabels}\n      loading={loading}\n      loadingText={i18nStrings.loadingText}\n      items={items}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled}\n      columnDefinitions={columnDefinitions}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}