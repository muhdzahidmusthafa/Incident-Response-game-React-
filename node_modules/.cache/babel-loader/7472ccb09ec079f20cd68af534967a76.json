{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport RadioButton from '../radio-group/radio-button';\nimport styles from './styles.css.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nvar COLUMN_TRIGGERS = ['default', 'xxs', 'xs'];\nexport default function InternalTiles(_a) {\n  var value = _a.value,\n      items = _a.items,\n      ariaLabel = _a.ariaLabel,\n      ariaRequired = _a.ariaRequired,\n      columns = _a.columns,\n      onChange = _a.onChange,\n      _b = _a.__internalRootRef,\n      __internalRootRef = _b === void 0 ? null : _b,\n      rest = __rest(_a, [\"value\", \"items\", \"ariaLabel\", \"ariaRequired\", \"columns\", \"onChange\", \"__internalRootRef\"]);\n\n  var getColumns = function () {\n    if (columns) {\n      return columns;\n    }\n\n    var nItems = items ? items.length : 0;\n    var columnsLookup = {\n      0: 1,\n      1: 1,\n      2: 2,\n      4: 2,\n      8: 2\n    };\n    return columnsLookup[nItems] || 3;\n  };\n\n  var _c = useFormFieldContext(rest),\n      ariaDescribedby = _c.ariaDescribedby,\n      ariaLabelledby = _c.ariaLabelledby;\n\n  var baseProps = getBaseProps(rest);\n  var generatedName = useUniqueId('awsui-tiles-');\n  var nColumns = getColumns();\n\n  var _d = useContainerBreakpoints(COLUMN_TRIGGERS),\n      breakpoint = _d[0],\n      ref = _d[1];\n\n  var mergedRef = useMergeRefs(ref, __internalRootRef);\n  return React.createElement(\"div\", __assign({\n    role: \"radiogroup\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-required\": ariaRequired\n  }, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef\n  }), React.createElement(\"div\", {\n    className: clsx(styles.columns, styles[\"column-\".concat(nColumns)])\n  }, items && items.map(function (item) {\n    var _a, _b, _c, _d, _e;\n\n    var controlId = item.controlId || \"\".concat(generatedName, \"-value-\").concat(item.value);\n    return React.createElement(\"label\", {\n      className: clsx(styles['tile-container'], (_a = {}, _a[styles['has-metadata']] = item.description || item.image, _a), (_b = {}, _b[styles.selected] = item.value === value, _b), (_c = {}, _c[styles.disabled] = !!item.disabled, _c), styles[\"breakpoint-\".concat(breakpoint)]),\n      key: item.value,\n      \"data-value\": item.value,\n      htmlFor: controlId,\n      id: \"\".concat(controlId, \"-wrapper\")\n    }, React.createElement(\"div\", {\n      className: clsx(styles.control, (_d = {}, _d[styles['no-image']] = !item.image, _d))\n    }, React.createElement(RadioButton, {\n      checked: item.value === value,\n      name: generatedName,\n      withoutLabel: true,\n      value: item.value,\n      label: item.label,\n      description: item.description,\n      disabled: item.disabled,\n      onChange: onChange,\n      controlId: controlId\n    })), item.image && React.createElement(\"div\", {\n      className: clsx(styles.image, (_e = {}, _e[styles.disabled] = !!item.disabled, _e))\n    }, item.image));\n  })));\n}","map":{"version":3,"mappings":"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","names":["clsx","React","getBaseProps","RadioButton","styles","useFormFieldContext","useUniqueId","useContainerBreakpoints","useMergeRefs","COLUMN_TRIGGERS","InternalTiles","_a","items","ariaLabel","ariaRequired","columns","onChange","_b","__internalRootRef","rest","getColumns","nItems","length","columnsLookup","ariaDescribedby","ariaLabelledby","baseProps","generatedName","nColumns","breakpoint","ref","mergedRef","role","className","root","map","controlId","item","concat","value","description","image","selected","_c","disabled","key","htmlFor","id","control","_d","checked","name","withoutLabel","label","_e"],"sourceRoot":"","sources":["../../../src/tiles/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { TilesProps } from './interfaces';\nimport RadioButton from '../radio-group/radio-button';\nimport styles from './styles.css.js';\n\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nconst COLUMN_TRIGGERS: TilesProps.Breakpoint[] = ['default', 'xxs', 'xs'];\n\ntype InternalTilesProps = TilesProps & InternalBaseComponentProps;\n\nexport default function InternalTiles({\n  value,\n  items,\n  ariaLabel,\n  ariaRequired,\n  columns,\n  onChange,\n  __internalRootRef = null,\n  ...rest\n}: InternalTilesProps) {\n  const getColumns = () => {\n    if (columns) {\n      return columns;\n    }\n\n    const nItems = items ? items.length : 0;\n    const columnsLookup: Record<number, number> = {\n      0: 1,\n      1: 1,\n      2: 2,\n      4: 2,\n      8: 2,\n    };\n    return columnsLookup[nItems] || 3;\n  };\n  const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);\n  const baseProps = getBaseProps(rest);\n  const generatedName = useUniqueId('awsui-tiles-');\n  const nColumns = getColumns();\n  const [breakpoint, ref] = useContainerBreakpoints(COLUMN_TRIGGERS);\n  const mergedRef = useMergeRefs(ref, __internalRootRef);\n\n  return (\n    <div\n      role=\"radiogroup\"\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledby}\n      aria-describedby={ariaDescribedby}\n      aria-required={ariaRequired}\n      {...baseProps}\n      className={clsx(baseProps.className, styles.root)}\n      ref={mergedRef}\n    >\n      <div className={clsx(styles.columns, styles[`column-${nColumns}`])}>\n        {items &&\n          items.map(item => {\n            const controlId = item.controlId || `${generatedName}-value-${item.value}`;\n            return (\n              <label\n                className={clsx(\n                  styles['tile-container'],\n                  { [styles['has-metadata']]: item.description || item.image },\n                  { [styles.selected]: item.value === value },\n                  { [styles.disabled]: !!item.disabled },\n                  styles[`breakpoint-${breakpoint}`]\n                )}\n                key={item.value}\n                data-value={item.value}\n                htmlFor={controlId}\n                id={`${controlId}-wrapper`}\n              >\n                <div className={clsx(styles.control, { [styles['no-image']]: !item.image })}>\n                  <RadioButton\n                    checked={item.value === value}\n                    name={generatedName}\n                    withoutLabel={true}\n                    value={item.value}\n                    label={item.label}\n                    description={item.description}\n                    disabled={item.disabled}\n                    onChange={onChange}\n                    controlId={controlId}\n                  />\n                </div>\n                {item.image && (\n                  <div className={clsx(styles.image, { [styles.disabled]: !!item.disabled })}>{item.image}</div>\n                )}\n              </label>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}