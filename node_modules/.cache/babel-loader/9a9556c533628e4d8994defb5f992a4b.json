{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useContext, createContext } from 'react';\nexport var SplitPanelContext = createContext({\n  topOffset: 0,\n  bottomOffset: 0,\n  leftOffset: 0,\n  rightOffset: 0,\n  position: 'bottom',\n  size: 0,\n  getMaxWidth: function () {\n    return 0;\n  },\n  getMaxHeight: function () {\n    return 0;\n  },\n  getHeader: function () {\n    return null;\n  },\n  isCopy: false,\n  isOpen: true,\n  isMobile: false,\n  isRefresh: false,\n  isForcedPosition: false,\n  lastInteraction: undefined,\n  splitPanelRef: undefined,\n  splitPanelHeaderRef: undefined,\n  onResize: function () {},\n  onToggle: function () {},\n  onPreferencesChange: function () {},\n  reportSize: function () {}\n});\nexport function useSplitPanelContext() {\n  return useContext(SplitPanelContext);\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAgBA,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAsCA,OAAO,IAAMC,iBAAiB,GAAGD,aAAa,CAAyB;EACrEE,SAAS,EAAE,CAD0D;EAErEC,YAAY,EAAE,CAFuD;EAGrEC,UAAU,EAAE,CAHyD;EAIrEC,WAAW,EAAE,CAJwD;EAKrEC,QAAQ,EAAE,QAL2D;EAMrEC,IAAI,EAAE,CAN+D;EAOrEC,WAAW,EAAE;IAAM;EAAC,CAPiD;EAQrEC,YAAY,EAAE;IAAM;EAAC,CARgD;EASrEC,SAAS,EAAE;IAAM;EAAI,CATgD;EAUrEC,MAAM,EAAE,KAV6D;EAWrEC,MAAM,EAAE,IAX6D;EAYrEC,QAAQ,EAAE,KAZ2D;EAarEC,SAAS,EAAE,KAb0D;EAcrEC,gBAAgB,EAAE,KAdmD;EAerEC,eAAe,EAAEC,SAfoD;EAgBrEC,aAAa,EAAED,SAhBsD;EAiBrEE,mBAAmB,EAAEF,SAjBgD;EAkBrEG,QAAQ,EAAE,aAAQ,CAlBmD;EAmBrEC,QAAQ,EAAE,aAAQ,CAnBmD;EAoBrEC,mBAAmB,EAAE,aAAQ,CApBwC;EAqBrEC,UAAU,EAAE,aAAQ;AArBiD,CAAzB,CAAvC;AAwBP,OAAM,SAAUC,oBAAV,GAA8B;EAClC,OAAOzB,UAAU,CAACE,iBAAD,CAAjB;AACD","names":["useContext","createContext","SplitPanelContext","topOffset","bottomOffset","leftOffset","rightOffset","position","size","getMaxWidth","getMaxHeight","getHeader","isCopy","isOpen","isMobile","isRefresh","isForcedPosition","lastInteraction","undefined","splitPanelRef","splitPanelHeaderRef","onResize","onToggle","onPreferencesChange","reportSize","useSplitPanelContext"],"sourceRoot":"","sources":["../../../../src/internal/context/split-panel-context.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext, createContext } from 'react';\n\nexport type SplitPanelLastInteraction = { type: 'open' } | { type: 'close' } | { type: 'position' };\n\nexport interface SplitPanelContextProps {\n  topOffset: number;\n  bottomOffset: number;\n  leftOffset: number;\n  rightOffset: number;\n  position: 'side' | 'bottom';\n  size: number;\n  getMaxWidth: () => number;\n  getMaxHeight: () => number;\n  getHeader: () => HTMLElement | null;\n  disableContentPaddings?: boolean;\n  contentWidthStyles?: React.CSSProperties;\n  contentWrapperPaddings?: {\n    closedNav: boolean;\n    closedTools: boolean;\n  };\n  isCopy?: boolean;\n  isOpen?: boolean;\n  isMobile: boolean;\n  isRefresh: boolean;\n  isForcedPosition: boolean;\n  // The lastInteraction property indicates last meaningful state transition used to trigger split-panel effects.\n  // We can't observe properties in a regular way because split-panel is being mounted in several places at once.\n  lastInteraction?: SplitPanelLastInteraction;\n  splitPanelRef?: React.Ref<any>;\n  splitPanelHeaderRef?: React.Ref<any>;\n  onResize: (detail: { size: number }) => void;\n  onToggle: () => void;\n  onPreferencesChange: (detail: { position: 'side' | 'bottom' }) => void;\n  reportSize: (pixels: number) => void;\n  openButtonAriaLabel?: string;\n  setOpenButtonAriaLabel?: (value: string) => void;\n}\n\nexport const SplitPanelContext = createContext<SplitPanelContextProps>({\n  topOffset: 0,\n  bottomOffset: 0,\n  leftOffset: 0,\n  rightOffset: 0,\n  position: 'bottom',\n  size: 0,\n  getMaxWidth: () => 0,\n  getMaxHeight: () => 0,\n  getHeader: () => null,\n  isCopy: false,\n  isOpen: true,\n  isMobile: false,\n  isRefresh: false,\n  isForcedPosition: false,\n  lastInteraction: undefined,\n  splitPanelRef: undefined,\n  splitPanelHeaderRef: undefined,\n  onResize: () => {},\n  onToggle: () => {},\n  onPreferencesChange: () => {},\n  reportSize: () => {},\n});\n\nexport function useSplitPanelContext() {\n  return useContext(SplitPanelContext);\n}\n"]},"metadata":{},"sourceType":"module"}