{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useState, useRef } from 'react';\nimport clsx from 'clsx';\nimport InternalSelect from '../select/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalAutosuggest from '../autosuggest/internal';\nimport InternalPopover from '../popover/internal';\nimport { InternalButton } from '../button/internal';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\nimport styles from './styles.css.js';\nimport { useLoadItems } from './use-load-items';\nimport { getAllowedOperators, getPropertyOptions, getPropertyByKey, operatorToDescription, getPropertySuggestions } from './controller';\n\nvar EditingFields = function (_a) {\n  var _b;\n\n  var temporaryToken = _a.temporaryToken,\n      setTemporaryToken = _a.setTemporaryToken,\n      asyncProps = _a.asyncProps,\n      asyncProperties = _a.asyncProperties,\n      filteringProperties = _a.filteringProperties,\n      filteringOptions = _a.filteringOptions,\n      onLoadItems = _a.onLoadItems,\n      customGroupsText = _a.customGroupsText,\n      i18nStrings = _a.i18nStrings,\n      disableFreeTextFiltering = _a.disableFreeTextFiltering;\n  var fields = [];\n  var property = temporaryToken.propertyKey !== undefined ? getPropertyByKey(filteringProperties, temporaryToken.propertyKey) : undefined;\n  var propertySelectHandlers = useLoadItems(onLoadItems);\n  var asyncPropertySelectProps = asyncProperties ? __assign(__assign({}, asyncProps), propertySelectHandlers) : {};\n  var propertyOptions = getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, function (_a) {\n    var propertyLabel = _a.propertyLabel,\n        key = _a.key;\n    return {\n      value: key,\n      label: propertyLabel,\n      dontCloseOnSelect: true\n    };\n  });\n  var allPropertiesOption = {\n    label: i18nStrings.allPropertiesLabel,\n    value: undefined\n  };\n\n  if (!disableFreeTextFiltering) {\n    propertyOptions.unshift(allPropertiesOption);\n  }\n\n  var propertyControlId = useUniqueId('property');\n  var propertySelect = React.createElement(InternalSelect, __assign({\n    controlId: propertyControlId,\n    options: propertyOptions,\n    selectedOption: property ? {\n      value: temporaryToken.propertyKey,\n      label: property.propertyLabel\n    } : allPropertiesOption,\n    onChange: function (e) {\n      var _a;\n\n      var filteringProperty = ((_a = e.detail.selectedOption) === null || _a === void 0 ? void 0 : _a.value) ? filteringProperties.reduce(function (acc, property) {\n        return property.key === e.detail.selectedOption.value ? property : acc;\n      }, undefined) : undefined;\n      var allowedOperators = filteringProperty ? getAllowedOperators(filteringProperty) : freeTextOperators;\n      var operator = temporaryToken.operator;\n\n      if (temporaryToken.operator && allowedOperators.indexOf(temporaryToken.operator) === -1) {\n        operator = allowedOperators[0];\n      }\n\n      setTemporaryToken(__assign(__assign({}, temporaryToken), {\n        operator: operator,\n        propertyKey: e.detail.selectedOption.value\n      }));\n    }\n  }, asyncPropertySelectProps));\n  fields.push({\n    text: i18nStrings.propertyText,\n    className: styles['property-selector'],\n    control: propertySelect,\n    controlId: propertyControlId\n  });\n  var operatorText = temporaryToken.operator;\n  var freeTextOperators = [':', '!:'];\n  var operatorOptions = (property ? getAllowedOperators(property) : freeTextOperators).map(function (operator) {\n    return {\n      value: operator,\n      label: operator,\n      description: operatorToDescription(operator, i18nStrings)\n    };\n  });\n  var operatorControlId = useUniqueId('operator');\n  var operatorSelect = temporaryToken && React.createElement(InternalSelect, {\n    controlId: operatorControlId,\n    options: operatorOptions,\n    triggerVariant: \"option\",\n    selectedOption: operatorText ? {\n      value: operatorText,\n      label: operatorText,\n      description: operatorToDescription(operatorText, i18nStrings)\n    } : null,\n    onChange: function (e) {\n      e.detail.selectedOption.value && setTemporaryToken(__assign(__assign({}, temporaryToken), {\n        operator: e.detail.selectedOption.value\n      }));\n    },\n    disabled: !temporaryToken\n  });\n  fields.push({\n    text: i18nStrings.operatorText,\n    className: styles['operator-selector'],\n    control: operatorSelect,\n    controlId: operatorControlId\n  });\n  var valueOptions = property ? (_b = getPropertyOptions(property, filteringOptions)) === null || _b === void 0 ? void 0 : _b.map(function (_a) {\n    var value = _a.value;\n    return {\n      value: value\n    };\n  }) : [];\n  var valueAutosuggestHandlers = useLoadItems(onLoadItems, '', property);\n  var asyncValueAutosuggesProps = temporaryToken.propertyKey ? __assign(__assign({}, valueAutosuggestHandlers), asyncProps) : {\n    empty: asyncProps.empty\n  };\n  var valueControlId = useUniqueId('value');\n  var valueAutosuggest = temporaryToken && React.createElement(InternalAutosuggest, __assign({\n    controlId: valueControlId,\n    enteredTextLabel: i18nStrings.enteredTextLabel,\n    value: temporaryToken.value || '',\n    onChange: function (e) {\n      setTemporaryToken(__assign(__assign({}, temporaryToken), {\n        value: e.detail.value\n      }));\n    },\n    disabled: !operatorText,\n    options: valueOptions\n  }, asyncValueAutosuggesProps, {\n    virtualScroll: true\n  }));\n  fields.push({\n    text: i18nStrings.valueText,\n    className: styles['value-selector'],\n    control: valueAutosuggest,\n    controlId: valueControlId\n  });\n  return React.createElement(\"div\", null, React.createElement(InternalSpaceBetween, {\n    size: \"l\"\n  }, fields.map(function (_a) {\n    var text = _a.text,\n        control = _a.control,\n        className = _a.className,\n        controlId = _a.controlId;\n    return React.createElement(\"div\", {\n      className: clsx(styles['token-editor-line'], className),\n      key: text\n    }, React.createElement(\"label\", {\n      className: styles['token-editor-label'],\n      htmlFor: controlId\n    }, text), React.createElement(\"div\", {\n      className: styles['token-editor-field']\n    }, control));\n  })));\n};\n\nexport var TokenEditor = function (props) {\n  var token = props.token,\n      triggerComponent = props.triggerComponent,\n      setToken = props.setToken,\n      i18nStrings = props.i18nStrings,\n      expandToViewport = props.expandToViewport;\n\n  var _a = useState(token),\n      temporaryToken = _a[0],\n      setTemporaryToken = _a[1];\n\n  var popoverRef = useRef(null);\n\n  var closePopover = function () {\n    popoverRef.current && popoverRef.current.dismissPopover();\n  };\n\n  return React.createElement(InternalPopover, {\n    ref: popoverRef,\n    className: styles['token-label'],\n    triggerType: \"text\",\n    header: i18nStrings.editTokenHeader,\n    size: \"large\",\n    position: \"right\",\n    dismissAriaLabel: i18nStrings.dismissAriaLabel,\n    __onOpen: function () {\n      return setTemporaryToken(token);\n    },\n    renderWithPortal: expandToViewport,\n    content: React.createElement(\"div\", {\n      className: styles['token-editor']\n    }, React.createElement(EditingFields, __assign({}, props, {\n      temporaryToken: temporaryToken,\n      setTemporaryToken: setTemporaryToken\n    })), React.createElement(\"div\", {\n      className: styles['token-editor-actions']\n    }, React.createElement(InternalButton, {\n      variant: \"link\",\n      className: styles['token-editor-cancel'],\n      onClick: closePopover\n    }, i18nStrings.cancelActionText), React.createElement(InternalButton, {\n      className: styles['token-editor-submit'],\n      onClick: function () {\n        setToken(temporaryToken);\n        closePopover();\n      }\n    }, i18nStrings.applyActionText)))\n  }, triggerComponent);\n};","map":{"version":3,"mappings":"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","names":["React","useState","useRef","clsx","InternalSelect","InternalSpaceBetween","InternalAutosuggest","InternalPopover","InternalButton","useUniqueId","styles","useLoadItems","getAllowedOperators","getPropertyOptions","getPropertyByKey","operatorToDescription","getPropertySuggestions","EditingFields","_a","temporaryToken","setTemporaryToken","asyncProps","asyncProperties","filteringProperties","filteringOptions","onLoadItems","customGroupsText","i18nStrings","disableFreeTextFiltering","fields","property","propertyKey","undefined","propertySelectHandlers","asyncPropertySelectProps","__assign","propertyOptions","propertyLabel","key","value","label","dontCloseOnSelect","allPropertiesOption","allPropertiesLabel","unshift","propertyControlId","propertySelect","controlId","options","selectedOption","onChange","filteringProperty","detail","reduce","acc","e","allowedOperators","freeTextOperators","operator","indexOf","push","text","propertyText","className","control","operatorText","operatorOptions","map","description","operatorControlId","operatorSelect","triggerVariant","disabled","valueOptions","_b","valueAutosuggestHandlers","asyncValueAutosuggesProps","empty","valueControlId","valueAutosuggest","enteredTextLabel","virtualScroll","valueText","size","htmlFor","TokenEditor","props","triggerComponent","setToken","expandToViewport","token","popoverRef","closePopover","current","dismissPopover","ref","triggerType","header","editTokenHeader","position","dismissAriaLabel","__onOpen","renderWithPortal","content","variant","onClick","cancelActionText","applyActionText"],"sourceRoot":"","sources":["../../../src/property-filter/token-editor.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { SelectProps } from '../select/interfaces';\nimport InternalSelect from '../select/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalAutosuggest from '../autosuggest/internal';\nimport { AutosuggestProps } from '../autosuggest/interfaces';\nimport InternalPopover, { InternalPopoverRef } from '../popover/internal';\nimport { InternalButton } from '../button/internal';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\n\nimport { PropertyFilterProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { useLoadItems } from './use-load-items';\nimport {\n  getAllowedOperators,\n  getPropertyOptions,\n  getPropertyByKey,\n  operatorToDescription,\n  getPropertySuggestions,\n} from './controller';\n\ninterface TokenEditorProps\n  extends Pick<\n    PropertyFilterProps,\n    | 'filteringProperties'\n    | 'filteringOptions'\n    | 'onLoadItems'\n    | 'i18nStrings'\n    | 'asyncProperties'\n    | 'customGroupsText'\n    | 'disableFreeTextFiltering'\n    | 'disabled'\n    | 'expandToViewport'\n  > {\n  token: PropertyFilterProps.Token;\n  triggerComponent?: React.ReactNode;\n  setToken: (newToken: PropertyFilterProps.Token) => void;\n  asyncProps: Pick<\n    AutosuggestProps,\n    'empty' | 'loadingText' | 'finishedText' | 'errorText' | 'recoveryText' | 'statusType'\n  >;\n}\n\nconst EditingFields = ({\n  temporaryToken,\n  setTemporaryToken,\n  asyncProps,\n  asyncProperties,\n  filteringProperties,\n  filteringOptions,\n  onLoadItems,\n  customGroupsText,\n  i18nStrings,\n  disableFreeTextFiltering,\n}: TokenEditorProps & {\n  temporaryToken: PropertyFilterProps.Token;\n  setTemporaryToken: (token: PropertyFilterProps.Token) => void;\n}) => {\n  const fields = [];\n  const property =\n    temporaryToken.propertyKey !== undefined\n      ? getPropertyByKey(filteringProperties, temporaryToken.propertyKey)\n      : undefined;\n  const propertySelectHandlers = useLoadItems(onLoadItems);\n  const asyncPropertySelectProps = asyncProperties\n    ? {\n        ...asyncProps,\n        ...propertySelectHandlers,\n      }\n    : {};\n  const propertyOptions: (SelectProps.Option | SelectProps.OptionGroup)[] = getPropertySuggestions(\n    filteringProperties,\n    customGroupsText,\n    i18nStrings,\n    ({ propertyLabel, key }) => ({\n      value: key,\n      label: propertyLabel,\n      dontCloseOnSelect: true,\n    })\n  );\n  const allPropertiesOption = {\n    label: i18nStrings.allPropertiesLabel,\n    value: undefined,\n  };\n  if (!disableFreeTextFiltering) {\n    propertyOptions.unshift(allPropertiesOption);\n  }\n\n  const propertyControlId = useUniqueId('property');\n  const propertySelect = (\n    <InternalSelect\n      controlId={propertyControlId}\n      options={propertyOptions}\n      selectedOption={\n        property\n          ? {\n              value: temporaryToken.propertyKey,\n              label: property.propertyLabel,\n            }\n          : allPropertiesOption\n      }\n      onChange={e => {\n        const filteringProperty = e.detail.selectedOption?.value\n          ? filteringProperties.reduce<PropertyFilterProps.FilteringProperty | undefined>(\n              (acc, property) => (property.key === e.detail.selectedOption.value ? property : acc),\n              undefined\n            )\n          : undefined;\n        const allowedOperators: PropertyFilterProps.ComparisonOperator[] = filteringProperty\n          ? getAllowedOperators(filteringProperty)\n          : freeTextOperators;\n        let operator = temporaryToken.operator;\n        if (temporaryToken.operator && allowedOperators.indexOf(temporaryToken.operator) === -1) {\n          operator = allowedOperators[0];\n        }\n        setTemporaryToken({\n          ...temporaryToken,\n          operator,\n          propertyKey: e.detail.selectedOption.value,\n        });\n      }}\n      {...asyncPropertySelectProps}\n    />\n  );\n  fields.push({\n    text: i18nStrings.propertyText,\n    className: styles['property-selector'],\n    control: propertySelect,\n    controlId: propertyControlId,\n  });\n\n  const operatorText = temporaryToken.operator;\n  const freeTextOperators: PropertyFilterProps.ComparisonOperator[] = [':', '!:'];\n  const operatorOptions = (property ? getAllowedOperators(property) : freeTextOperators).map(operator => ({\n    value: operator,\n    label: operator,\n    description: operatorToDescription(operator, i18nStrings),\n  }));\n  const operatorControlId = useUniqueId('operator');\n  const operatorSelect = temporaryToken && (\n    <InternalSelect\n      controlId={operatorControlId}\n      options={operatorOptions}\n      triggerVariant=\"option\"\n      selectedOption={\n        operatorText\n          ? {\n              value: operatorText,\n              label: operatorText,\n              description: operatorToDescription(operatorText, i18nStrings),\n            }\n          : null\n      }\n      onChange={e => {\n        e.detail.selectedOption.value &&\n          setTemporaryToken({\n            ...temporaryToken,\n            operator: e.detail.selectedOption.value as PropertyFilterProps.ComparisonOperator,\n          });\n      }}\n      disabled={!temporaryToken}\n    />\n  );\n  fields.push({\n    text: i18nStrings.operatorText,\n    className: styles['operator-selector'],\n    control: operatorSelect,\n    controlId: operatorControlId,\n  });\n\n  const valueOptions = property ? getPropertyOptions(property, filteringOptions)?.map(({ value }) => ({ value })) : [];\n  const valueAutosuggestHandlers = useLoadItems(onLoadItems, '', property);\n  const asyncValueAutosuggesProps = temporaryToken.propertyKey\n    ? {\n        ...valueAutosuggestHandlers,\n        ...asyncProps,\n      }\n    : { empty: asyncProps.empty };\n  const valueControlId = useUniqueId('value');\n  const valueAutosuggest = temporaryToken && (\n    <InternalAutosuggest\n      controlId={valueControlId}\n      enteredTextLabel={i18nStrings.enteredTextLabel}\n      value={temporaryToken.value || ''}\n      onChange={e => {\n        setTemporaryToken({\n          ...temporaryToken,\n          value: e.detail.value,\n        });\n      }}\n      disabled={!operatorText}\n      options={valueOptions}\n      {...asyncValueAutosuggesProps}\n      virtualScroll={true}\n    />\n  );\n  fields.push({\n    text: i18nStrings.valueText,\n    className: styles['value-selector'],\n    control: valueAutosuggest,\n    controlId: valueControlId,\n  });\n  return (\n    <div>\n      <InternalSpaceBetween size=\"l\">\n        {fields.map(({ text, control, className, controlId }) => (\n          <div className={clsx(styles['token-editor-line'], className)} key={text}>\n            <label className={styles['token-editor-label']} htmlFor={controlId}>\n              {text}\n            </label>\n            <div className={styles['token-editor-field']}>{control}</div>\n          </div>\n        ))}\n      </InternalSpaceBetween>\n    </div>\n  );\n};\n\nexport const TokenEditor = (props: TokenEditorProps) => {\n  const { token, triggerComponent, setToken, i18nStrings, expandToViewport } = props;\n  const [temporaryToken, setTemporaryToken] = useState<PropertyFilterProps.Token>(token);\n  const popoverRef = useRef<InternalPopoverRef>(null);\n  const closePopover = () => {\n    popoverRef.current && popoverRef.current.dismissPopover();\n  };\n  return (\n    <InternalPopover\n      ref={popoverRef}\n      className={styles['token-label']}\n      triggerType=\"text\"\n      header={i18nStrings.editTokenHeader}\n      size=\"large\"\n      position=\"right\"\n      dismissAriaLabel={i18nStrings.dismissAriaLabel}\n      __onOpen={() => setTemporaryToken(token)}\n      renderWithPortal={expandToViewport}\n      content={\n        <div className={styles['token-editor']}>\n          <EditingFields {...props} temporaryToken={temporaryToken} setTemporaryToken={setTemporaryToken} />\n          <div className={styles['token-editor-actions']}>\n            <InternalButton variant=\"link\" className={styles['token-editor-cancel']} onClick={closePopover}>\n              {i18nStrings.cancelActionText}\n            </InternalButton>\n            <InternalButton\n              className={styles['token-editor-submit']}\n              onClick={() => {\n                setToken(temporaryToken as PropertyFilterProps.Token);\n                closePopover();\n              }}\n            >\n              {i18nStrings.applyActionText}\n            </InternalButton>\n          </div>\n        </div>\n      }\n    >\n      {triggerComponent}\n    </InternalPopover>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}