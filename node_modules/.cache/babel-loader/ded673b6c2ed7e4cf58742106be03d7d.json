{"ast":null,"code":"function getSorter(sortingField) {\n  return function (row1, row2) {\n    var _a, _b; // Use empty string as a default value, because it works well to compare with both strings and numbers:\n    // Every number can be casted to a string, but not every string can be casted to a meaningful number,\n    // sometimes it is NaN.\n\n\n    var value1 = (_a = row1[sortingField]) !== null && _a !== void 0 ? _a : '';\n    var value2 = (_b = row2[sortingField]) !== null && _b !== void 0 ? _b : '';\n\n    if (typeof value1 === 'string' && typeof value2 === 'string') {\n      return value1.localeCompare(value2);\n    } // use loose comparison to handle inconsistent data types\n    // eslint-disable-next-line eqeqeq\n\n\n    return value1 < value2 ? -1 : value1 == value2 ? 0 : 1;\n  };\n}\n\nexport function sort(items, state) {\n  if (!state) {\n    return items;\n  }\n\n  var sortingColumn = state.sortingColumn;\n  var comparator = 'sortingComparator' in sortingColumn ? sortingColumn.sortingComparator : sortingColumn.sortingField ? getSorter(sortingColumn.sortingField) : undefined;\n\n  if (!comparator) {\n    return items;\n  }\n\n  var sorted = items.slice();\n  var direction = state.isDescending ? -1 : 1;\n  sorted.sort(function (a, b) {\n    return comparator(a, b) * direction;\n  });\n  return sorted;\n}","map":{"version":3,"names":["getSorter","sortingField","row1","row2","_a","_b","value1","value2","localeCompare","sort","items","state","sortingColumn","comparator","sortingComparator","undefined","sorted","slice","direction","isDescending","a","b"],"sources":["/Users/igostu/repos/dissertation/node_modules/@awsui/collection-hooks/dist/mjs/operations/sort.js"],"sourcesContent":["function getSorter(sortingField) {\n    return function (row1, row2) {\n        var _a, _b;\n        // Use empty string as a default value, because it works well to compare with both strings and numbers:\n        // Every number can be casted to a string, but not every string can be casted to a meaningful number,\n        // sometimes it is NaN.\n        var value1 = (_a = row1[sortingField]) !== null && _a !== void 0 ? _a : '';\n        var value2 = (_b = row2[sortingField]) !== null && _b !== void 0 ? _b : '';\n        if (typeof value1 === 'string' && typeof value2 === 'string') {\n            return value1.localeCompare(value2);\n        }\n        // use loose comparison to handle inconsistent data types\n        // eslint-disable-next-line eqeqeq\n        return value1 < value2 ? -1 : value1 == value2 ? 0 : 1;\n    };\n}\nexport function sort(items, state) {\n    if (!state) {\n        return items;\n    }\n    var sortingColumn = state.sortingColumn;\n    var comparator = 'sortingComparator' in sortingColumn\n        ? sortingColumn.sortingComparator\n        : sortingColumn.sortingField\n            ? getSorter(sortingColumn.sortingField)\n            : undefined;\n    if (!comparator) {\n        return items;\n    }\n    var sorted = items.slice();\n    var direction = state.isDescending ? -1 : 1;\n    sorted.sort(function (a, b) { return comparator(a, b) * direction; });\n    return sorted;\n}\n"],"mappings":"AAAA,SAASA,SAAT,CAAmBC,YAAnB,EAAiC;EAC7B,OAAO,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;IACzB,IAAIC,EAAJ,EAAQC,EAAR,CADyB,CAEzB;IACA;IACA;;;IACA,IAAIC,MAAM,GAAG,CAACF,EAAE,GAAGF,IAAI,CAACD,YAAD,CAAV,MAA8B,IAA9B,IAAsCG,EAAE,KAAK,KAAK,CAAlD,GAAsDA,EAAtD,GAA2D,EAAxE;IACA,IAAIG,MAAM,GAAG,CAACF,EAAE,GAAGF,IAAI,CAACF,YAAD,CAAV,MAA8B,IAA9B,IAAsCI,EAAE,KAAK,KAAK,CAAlD,GAAsDA,EAAtD,GAA2D,EAAxE;;IACA,IAAI,OAAOC,MAAP,KAAkB,QAAlB,IAA8B,OAAOC,MAAP,KAAkB,QAApD,EAA8D;MAC1D,OAAOD,MAAM,CAACE,aAAP,CAAqBD,MAArB,CAAP;IACH,CATwB,CAUzB;IACA;;;IACA,OAAOD,MAAM,GAAGC,MAAT,GAAkB,CAAC,CAAnB,GAAuBD,MAAM,IAAIC,MAAV,GAAmB,CAAnB,GAAuB,CAArD;EACH,CAbD;AAcH;;AACD,OAAO,SAASE,IAAT,CAAcC,KAAd,EAAqBC,KAArB,EAA4B;EAC/B,IAAI,CAACA,KAAL,EAAY;IACR,OAAOD,KAAP;EACH;;EACD,IAAIE,aAAa,GAAGD,KAAK,CAACC,aAA1B;EACA,IAAIC,UAAU,GAAG,uBAAuBD,aAAvB,GACXA,aAAa,CAACE,iBADH,GAEXF,aAAa,CAACX,YAAd,GACID,SAAS,CAACY,aAAa,CAACX,YAAf,CADb,GAEIc,SAJV;;EAKA,IAAI,CAACF,UAAL,EAAiB;IACb,OAAOH,KAAP;EACH;;EACD,IAAIM,MAAM,GAAGN,KAAK,CAACO,KAAN,EAAb;EACA,IAAIC,SAAS,GAAGP,KAAK,CAACQ,YAAN,GAAqB,CAAC,CAAtB,GAA0B,CAA1C;EACAH,MAAM,CAACP,IAAP,CAAY,UAAUW,CAAV,EAAaC,CAAb,EAAgB;IAAE,OAAOR,UAAU,CAACO,CAAD,EAAIC,CAAJ,CAAV,GAAmBH,SAA1B;EAAsC,CAApE;EACA,OAAOF,MAAP;AACH"},"metadata":{},"sourceType":"module"}