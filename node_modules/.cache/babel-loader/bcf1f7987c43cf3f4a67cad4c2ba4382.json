{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport ChartLegend from '../internal/components/chart-legend';\nimport { chartLegendMap } from './utils';\nexport default function InternalChartLegend(_a) {\n  var series = _a.series,\n      visibleSeries = _a.visibleSeries,\n      highlightedSeries = _a.highlightedSeries,\n      onHighlightChange = _a.onHighlightChange,\n      legendTitle = _a.legendTitle,\n      ariaLabel = _a.ariaLabel,\n      plotContainerRef = _a.plotContainerRef;\n  var legendItems = useMemo(function () {\n    return series.filter(function (s) {\n      return visibleSeries.indexOf(s.series) !== -1;\n    }).map(function (_a) {\n      var series = _a.series,\n          color = _a.color;\n      return {\n        label: series.title,\n        type: chartLegendMap[series.type],\n        color: color,\n        datum: series\n      };\n    });\n  }, [series, visibleSeries]);\n  return React.createElement(ChartLegend, {\n    series: legendItems,\n    highlightedSeries: highlightedSeries || null,\n    onHighlightChange: onHighlightChange,\n    legendTitle: legendTitle,\n    ariaLabel: ariaLabel,\n    plotContainerRef: plotContainerRef\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,OAAOC,WAAP,MAAwB,qCAAxB;AAIA,SAASC,cAAT,QAA+B,SAA/B;AAYA,eAAc,SAAUC,mBAAV,CAAgEC,EAAhE,EAQgB;MAP5BC,MAAM;MACNC,aAAa;MACbC,iBAAiB;MACjBC,iBAAiB;MACjBC,WAAW;MACXC,SAAS;MACTC,gBAAgB;EAEhB,IAAMC,WAAW,GAAsEZ,OAAO,CAAC;IAC7F,OAAOK,MAAM,CACVQ,MADI,CACG,aAAC;MAAI,oBAAa,CAACC,OAAd,CAAsBC,CAAC,CAACV,MAAxB,MAAoC,CAAC,CAArC;IAAsC,CAD9C,EAEJW,GAFI,CAEA,UAACZ,EAAD,EAAkB;UAAfC,MAAM;UAAEY,KAAK;MAAO,OAAC;QAC3BC,KAAK,EAAEb,MAAM,CAACc,KADa;QAE3BC,IAAI,EAAElB,cAAc,CAACG,MAAM,CAACe,IAAR,CAFO;QAG3BH,KAAK,OAHsB;QAI3BI,KAAK,EAAEhB;MAJoB,CAAD;IAK1B,CAPG,CAAP;EAQD,CAT6F,EAS3F,CAACA,MAAD,EAASC,aAAT,CAT2F,CAA9F;EAWA,OACEP,oBAACE,WAAD,EAAY;IACVI,MAAM,EAAEO,WADE;IAEVL,iBAAiB,EAAEA,iBAAiB,IAAI,IAF9B;IAGVC,iBAAiB,EAAEA,iBAHT;IAIVC,WAAW,EAAEA,WAJH;IAKVC,SAAS,EAAEA,SALD;IAMVC,gBAAgB,EAAEA;EANR,CAAZ,CADF;AAUD","names":["React","useMemo","ChartLegend","chartLegendMap","InternalChartLegend","_a","series","visibleSeries","highlightedSeries","onHighlightChange","legendTitle","ariaLabel","plotContainerRef","legendItems","filter","indexOf","s","map","color","label","title","type","datum"],"sourceRoot":"","sources":["../../../src/mixed-line-bar-chart/chart-legend.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\n\nimport ChartLegend from '../internal/components/chart-legend';\nimport { ChartFilterProps } from '../internal/components/chart-filter';\n\nimport { ChartDataTypes, MixedLineBarChartProps, InternalChartSeries } from './interfaces';\nimport { chartLegendMap } from './utils';\n\ninterface InternalChartLegendProps<T extends ChartDataTypes> {\n  series: ReadonlyArray<InternalChartSeries<T>>;\n  visibleSeries: ReadonlyArray<MixedLineBarChartProps.ChartSeries<T>>;\n  plotContainerRef: React.RefObject<HTMLDivElement>;\n  highlightedSeries?: MixedLineBarChartProps.ChartSeries<T> | null;\n  onHighlightChange: (series: MixedLineBarChartProps.ChartSeries<T> | null) => void;\n  legendTitle?: string;\n  ariaLabel?: string;\n}\n\nexport default function InternalChartLegend<T extends number | string | Date>({\n  series,\n  visibleSeries,\n  highlightedSeries,\n  onHighlightChange,\n  legendTitle,\n  ariaLabel,\n  plotContainerRef,\n}: InternalChartLegendProps<T>) {\n  const legendItems: ChartFilterProps<MixedLineBarChartProps.ChartSeries<T>>['series'] = useMemo(() => {\n    return series\n      .filter(s => visibleSeries.indexOf(s.series) !== -1)\n      .map(({ series, color }) => ({\n        label: series.title,\n        type: chartLegendMap[series.type],\n        color,\n        datum: series,\n      }));\n  }, [series, visibleSeries]);\n\n  return (\n    <ChartLegend<MixedLineBarChartProps.ChartSeries<T>>\n      series={legendItems}\n      highlightedSeries={highlightedSeries || null}\n      onHighlightChange={onHighlightChange}\n      legendTitle={legendTitle}\n      ariaLabel={ariaLabel}\n      plotContainerRef={plotContainerRef}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}