{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect } from 'react';\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { useControllable } from '../../internal/hooks/use-controllable'; // Provides controlled or uncontrolled props to highlight chart elements.\n\nexport default function useHighlightProps(series, controlledHighlightedSeries, controlledOnHighlightChange) {\n  var _a = useControllable(controlledHighlightedSeries, controlledOnHighlightChange, null, {\n    componentName: 'AreaChart',\n    controlledProp: 'highlightedSeries',\n    changeHandler: 'onHighlightChange'\n  }),\n      _b = _a[0],\n      highlightedSeries = _b === void 0 ? null : _b,\n      setHighlightedSeries = _a[1];\n\n  var notifyHighlightedSeries = useCallback(function (s) {\n    fireNonCancelableEvent(controlledOnHighlightChange, {\n      highlightedSeries: s\n    });\n  }, [controlledOnHighlightChange]); // Reset highlights if series change.\n\n  useEffect(function () {\n    if (controlledHighlightedSeries) {\n      var highlightedSeriesIndex = series.indexOf(controlledHighlightedSeries);\n\n      if (highlightedSeriesIndex === -1) {\n        setHighlightedSeries(null);\n        notifyHighlightedSeries(null);\n      }\n    }\n  }, [series, controlledHighlightedSeries, setHighlightedSeries, notifyHighlightedSeries]);\n  return [highlightedSeries, notifyHighlightedSeries];\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SAASC,sBAAT,QAAkE,uBAAlE;AACA,SAASC,eAAT,QAAgC,uCAAhC,C,CAKA;;AACA,eAAc,SAAUC,iBAAV,CACZC,MADY,EAEZC,2BAFY,EAGZC,2BAHY,EAGoF;EAE1F,SAAmDJ,eAAe,CACtEG,2BADsE,EAEtEC,2BAFsE,EAGtE,IAHsE,EAItE;IACEC,aAAa,EAAE,WADjB;IAEEC,cAAc,EAAE,mBAFlB;IAGEC,aAAa,EAAE;EAHjB,CAJsE,CAAlE;EAAA,IAACC,UAAD;EAAA,IAACC,iBAAiB,mBAAG,IAAH,GAAOD,EAAzB;EAAA,IAA2BE,oBAAoB,QAA/C;;EAWN,IAAMC,uBAAuB,GAAGd,WAAW,CACzC,UAACe,CAAD,EAAmC;IACjCb,sBAAsB,CAACK,2BAAD,EAA8B;MAAEK,iBAAiB,EAAEG;IAArB,CAA9B,CAAtB;EACD,CAHwC,EAIzC,CAACR,2BAAD,CAJyC,CAA3C,CAbgG,CAoBhG;;EACAN,SAAS,CAAC;IACR,IAAIK,2BAAJ,EAAiC;MAC/B,IAAMU,sBAAsB,GAAGX,MAAM,CAACY,OAAP,CAAeX,2BAAf,CAA/B;;MAEA,IAAIU,sBAAsB,KAAK,CAAC,CAAhC,EAAmC;QACjCH,oBAAoB,CAAC,IAAD,CAApB;QACAC,uBAAuB,CAAC,IAAD,CAAvB;MACD;IACF;EACF,CATQ,EASN,CAACT,MAAD,EAASC,2BAAT,EAAsCO,oBAAtC,EAA4DC,uBAA5D,CATM,CAAT;EAWA,OAAO,CAACF,iBAAD,EAAoBE,uBAApB,CAAP;AACD","names":["useCallback","useEffect","fireNonCancelableEvent","useControllable","useHighlightProps","series","controlledHighlightedSeries","controlledOnHighlightChange","componentName","controlledProp","changeHandler","_b","highlightedSeries","setHighlightedSeries","notifyHighlightedSeries","s","highlightedSeriesIndex","indexOf"],"sourceRoot":"","sources":["../../../../src/area-chart/model/use-highlight-props.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect } from 'react';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../../internal/events';\nimport { useControllable } from '../../internal/hooks/use-controllable';\nimport { AreaChartProps } from '../interfaces';\n\ntype HighlightProps<T> = [null | AreaChartProps.Series<T>, (s: null | AreaChartProps.Series<T>) => void];\n\n// Provides controlled or uncontrolled props to highlight chart elements.\nexport default function useHighlightProps<T>(\n  series: readonly AreaChartProps.Series<T>[],\n  controlledHighlightedSeries?: null | AreaChartProps.Series<T>,\n  controlledOnHighlightChange?: NonCancelableEventHandler<AreaChartProps.HighlightChangeDetail<T>>\n): HighlightProps<T> {\n  const [highlightedSeries = null, setHighlightedSeries] = useControllable(\n    controlledHighlightedSeries,\n    controlledOnHighlightChange,\n    null,\n    {\n      componentName: 'AreaChart',\n      controlledProp: 'highlightedSeries',\n      changeHandler: 'onHighlightChange',\n    }\n  );\n\n  const notifyHighlightedSeries = useCallback(\n    (s: null | AreaChartProps.Series<T>) => {\n      fireNonCancelableEvent(controlledOnHighlightChange, { highlightedSeries: s });\n    },\n    [controlledOnHighlightChange]\n  );\n\n  // Reset highlights if series change.\n  useEffect(() => {\n    if (controlledHighlightedSeries) {\n      const highlightedSeriesIndex = series.indexOf(controlledHighlightedSeries);\n\n      if (highlightedSeriesIndex === -1) {\n        setHighlightedSeries(null);\n        notifyHighlightedSeries(null);\n      }\n    }\n  }, [series, controlledHighlightedSeries, setHighlightedSeries, notifyHighlightedSeries]);\n\n  return [highlightedSeries, notifyHighlightedSeries];\n}\n"]},"metadata":{},"sourceType":"module"}