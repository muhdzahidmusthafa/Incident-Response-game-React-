{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\n\nvar MobileExpandableGroup = function (_a) {\n  var _b;\n\n  var children = _a.children,\n      trigger = _a.trigger,\n      open = _a.open;\n  return React.createElement(\"div\", {\n    className: clsx(styles.root)\n  }, React.createElement(\"div\", {\n    className: styles.trigger\n  }, trigger), React.createElement(\"div\", {\n    className: clsx(styles.dropdown, (_b = {}, _b[styles.open] = open, _b)),\n    \"data-open\": open\n  }, children));\n};\n\nexport default MobileExpandableGroup;","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAiBA,IAAMC,qBAAqB,GAAG,UAACC,EAAD,EAAwD;;;MAArDC,QAAQ;MAAEC,OAAO;MAAEC,IAAI;EACtD,OACEP;IAAKQ,SAAS,EAAEP,IAAI,CAACC,MAAM,CAACO,IAAR;EAApB,GACET;IAAKQ,SAAS,EAAEN,MAAM,CAACI;EAAvB,GAAiCA,OAAjC,CADF,EAEEN;IAAKQ,SAAS,EAAEP,IAAI,CAACC,MAAM,CAACQ,QAAR,GAAgBC,SAAIA,GAACT,MAAM,CAACK,IAAR,IAAeA,IAAnB,EAAuBI,EAAvC,EAApB;IAA8D,aAAaJ;EAA3E,GACGF,QADH,CAFF,CADF;AAQD,CATD;;AAWA,eAAeF,qBAAf","names":["React","clsx","styles","MobileExpandableGroup","_a","children","trigger","open","className","root","dropdown","_b"],"sourceRoot":"","sources":["../../../../src/button-dropdown/mobile-expandable-group/mobile-expandable-group.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\n\nexport interface MobileExpandableGroupProps {\n  /**\n   * Trigger element.\n   */\n  trigger: React.ReactNode;\n  /**\n   * mobile expandable groups content elements.\n   */\n  children?: React.ReactNode;\n  /**\n   * Open state of the mobile expandable groups.\n   */\n  open?: boolean;\n}\n\nconst MobileExpandableGroup = ({ children, trigger, open }: MobileExpandableGroupProps) => {\n  return (\n    <div className={clsx(styles.root)}>\n      <div className={styles.trigger}>{trigger}</div>\n      <div className={clsx(styles.dropdown, { [styles.open]: open })} data-open={open}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default MobileExpandableGroup;\n"]},"metadata":{},"sourceType":"module"}