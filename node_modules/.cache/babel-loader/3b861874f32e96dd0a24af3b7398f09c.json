{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../button/internal';\nimport InternalIcon from '../icon/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport VisualContext from '../internal/components/visual-context';\nimport styles from './styles.css.js';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nvar typeToIcon = {\n  error: 'status-negative',\n  warning: 'status-warning',\n  success: 'status-positive',\n  info: 'status-info'\n};\nexport default function InternalAlert(_a) {\n  var _b;\n\n  var type = _a.type,\n      _c = _a.visible,\n      visible = _c === void 0 ? true : _c,\n      dismissible = _a.dismissible,\n      dismissAriaLabel = _a.dismissAriaLabel,\n      children = _a.children,\n      header = _a.header,\n      buttonText = _a.buttonText,\n      action = _a.action,\n      onDismiss = _a.onDismiss,\n      onButtonClick = _a.onButtonClick,\n      _d = _a.__internalRootRef,\n      __internalRootRef = _d === void 0 ? null : _d,\n      rest = __rest(_a, [\"type\", \"visible\", \"dismissible\", \"dismissAriaLabel\", \"children\", \"header\", \"buttonText\", \"action\", \"onDismiss\", \"onButtonClick\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(rest);\n\n  var _e = useContainerBreakpoints(['xs']),\n      breakpoint = _e[0],\n      breakpointRef = _e[1];\n\n  var refObject = useRef(null);\n  var mergedRef = useMergeRefs(breakpointRef, refObject, __internalRootRef);\n  var isRefresh = useVisualRefresh(refObject);\n  var size = isRefresh ? 'normal' : header && children ? 'big' : 'normal';\n  var actionButton = action || React.createElement(InternalButton, {\n    className: styles['action-button'],\n    onClick: function () {\n      return fireNonCancelableEvent(onButtonClick);\n    },\n    formAction: \"none\"\n  }, buttonText);\n  var hasAction = Boolean(action || buttonText);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    \"aria-hidden\": !visible,\n    className: clsx(styles.root, (_b = {}, _b[styles.hidden] = !visible, _b), baseProps.className, styles[\"breakpoint-\".concat(breakpoint)]),\n    ref: mergedRef\n  }), React.createElement(VisualContext, {\n    contextName: \"alert\"\n  }, React.createElement(\"div\", {\n    className: clsx(styles.alert, styles[\"type-\".concat(type)])\n  }, React.createElement(\"div\", {\n    className: clsx(styles.icon, styles.text)\n  }, React.createElement(InternalIcon, {\n    name: typeToIcon[type],\n    size: size\n  })), React.createElement(\"div\", {\n    className: styles.body\n  }, React.createElement(\"div\", {\n    className: clsx(styles.message, styles.text)\n  }, header && React.createElement(\"div\", {\n    className: styles.header\n  }, header), React.createElement(\"div\", {\n    className: styles.content\n  }, children)), hasAction && React.createElement(\"div\", {\n    className: styles.action\n  }, actionButton)), dismissible && React.createElement(\"div\", {\n    className: styles.dismiss\n  }, React.createElement(InternalButton, {\n    className: styles['dismiss-button'],\n    variant: \"icon\",\n    iconName: \"close\",\n    formAction: \"none\",\n    ariaLabel: dismissAriaLabel,\n    onClick: function () {\n      return fireNonCancelableEvent(onDismiss);\n    }\n  })))));\n}","map":{"version":3,"mappings":"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","names":["React","useRef","clsx","InternalButton","InternalIcon","getBaseProps","VisualContext","styles","fireNonCancelableEvent","useContainerBreakpoints","useVisualRefresh","useMergeRefs","typeToIcon","error","warning","success","info","InternalAlert","_a","_c","visible","dismissible","dismissAriaLabel","children","header","buttonText","action","onDismiss","onButtonClick","_d","__internalRootRef","rest","baseProps","breakpoint","breakpointRef","refObject","mergedRef","isRefresh","size","actionButton","className","onClick","formAction","hasAction","Boolean","root","_b","hidden","ref","contextName","alert","type","icon","text","name","body","message","content","dismiss","variant","iconName","ariaLabel"],"sourceRoot":"","sources":["../../../src/alert/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../button/internal';\nimport { IconProps } from '../icon/interfaces';\nimport InternalIcon from '../icon/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport VisualContext from '../internal/components/visual-context';\nimport styles from './styles.css.js';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { AlertProps } from './interfaces';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { SomeRequired } from '../internal/types';\n\nconst typeToIcon: Record<AlertProps.Type, IconProps['name']> = {\n  error: 'status-negative',\n  warning: 'status-warning',\n  success: 'status-positive',\n  info: 'status-info',\n};\n\ntype InternalAlertProps = SomeRequired<AlertProps, 'type'> & InternalBaseComponentProps;\n\nexport default function InternalAlert({\n  type,\n  visible = true,\n  dismissible,\n  dismissAriaLabel,\n  children,\n  header,\n  buttonText,\n  action,\n  onDismiss,\n  onButtonClick,\n  __internalRootRef = null,\n  ...rest\n}: InternalAlertProps) {\n  const baseProps = getBaseProps(rest);\n\n  const [breakpoint, breakpointRef] = useContainerBreakpoints(['xs']);\n  const refObject = useRef(null);\n  const mergedRef = useMergeRefs(breakpointRef, refObject, __internalRootRef);\n\n  const isRefresh = useVisualRefresh(refObject);\n  const size = isRefresh ? 'normal' : header && children ? 'big' : 'normal';\n\n  const actionButton = action || (\n    <InternalButton\n      className={styles['action-button']}\n      onClick={() => fireNonCancelableEvent(onButtonClick)}\n      formAction=\"none\"\n    >\n      {buttonText}\n    </InternalButton>\n  );\n\n  const hasAction = Boolean(action || buttonText);\n\n  return (\n    <div\n      {...baseProps}\n      aria-hidden={!visible}\n      className={clsx(\n        styles.root,\n        { [styles.hidden]: !visible },\n        baseProps.className,\n        styles[`breakpoint-${breakpoint}`]\n      )}\n      ref={mergedRef}\n    >\n      <VisualContext contextName=\"alert\">\n        <div className={clsx(styles.alert, styles[`type-${type}`])}>\n          <div className={clsx(styles.icon, styles.text)}>\n            <InternalIcon name={typeToIcon[type]} size={size} />\n          </div>\n          <div className={styles.body}>\n            <div className={clsx(styles.message, styles.text)}>\n              {header && <div className={styles.header}>{header}</div>}\n              <div className={styles.content}>{children}</div>\n            </div>\n            {hasAction && <div className={styles.action}>{actionButton}</div>}\n          </div>\n          {dismissible && (\n            <div className={styles.dismiss}>\n              <InternalButton\n                className={styles['dismiss-button']}\n                variant=\"icon\"\n                iconName=\"close\"\n                formAction=\"none\"\n                ariaLabel={dismissAriaLabel}\n                onClick={() => fireNonCancelableEvent(onDismiss)}\n              />\n            </div>\n          )}\n        </div>\n      </VisualContext>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}