{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { InternalButton } from '../../button/internal';\nimport styles from './styles.css.js';\nexport var togglesConfig = {\n  navigation: {\n    TagName: 'nav',\n    iconName: 'menu',\n    getLabels: function (labels) {\n      if (labels === void 0) {\n        labels = {};\n      }\n\n      return {\n        mainLabel: labels.navigation,\n        openLabel: labels.navigationToggle,\n        closeLabel: labels.navigationClose\n      };\n    }\n  },\n  tools: {\n    TagName: 'aside',\n    iconName: 'status-info',\n    getLabels: function (labels) {\n      if (labels === void 0) {\n        labels = {};\n      }\n\n      return {\n        mainLabel: labels.tools,\n        openLabel: labels.toolsToggle,\n        closeLabel: labels.toolsClose\n      };\n    }\n  }\n};\nexport var AppLayoutButton = React.forwardRef(function (_a, ref) {\n  var className = _a.className,\n      ariaLabel = _a.ariaLabel,\n      ariaExpanded = _a.ariaExpanded,\n      iconName = _a.iconName,\n      disabled = _a.disabled,\n      onClick = _a.onClick;\n  return React.createElement(InternalButton, {\n    ref: ref,\n    className: className,\n    ariaLabel: ariaLabel,\n    variant: \"icon\",\n    formAction: \"none\",\n    onClick: onClick,\n    iconName: iconName,\n    disabled: disabled,\n    ariaExpanded: ariaExpanded\n  });\n});\nexport var CloseButton = React.forwardRef(function (_a, ref) {\n  var className = _a.className,\n      ariaLabel = _a.ariaLabel,\n      onClick = _a.onClick,\n      iconName = _a.iconName;\n  return React.createElement(\"span\", {\n    className: styles['close-button']\n  }, React.createElement(AppLayoutButton, {\n    ref: ref,\n    className: className,\n    ariaLabel: ariaLabel,\n    iconName: iconName,\n    onClick: onClick\n  }));\n});","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,cAAT,QAA+B,uBAA/B;AAGA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAO,IAAMC,aAAa,GAAG;EAC3BC,UAAU,EAAE;IACVC,OAAO,EAAE,KADC;IAEVC,QAAQ,EAAE,MAFA;IAGVC,SAAS,EAAE,UAACC,MAAD,EAAmC;MAAlC;QAAAA;MAAkC;;MAAK,OAAC;QAClDC,SAAS,EAAED,MAAM,CAACJ,UADgC;QAElDM,SAAS,EAAEF,MAAM,CAACG,gBAFgC;QAGlDC,UAAU,EAAEJ,MAAM,CAACK;MAH+B,CAAD;IAIjD;EAPQ,CADe;EAU3BC,KAAK,EAAE;IACLT,OAAO,EAAE,OADJ;IAELC,QAAQ,EAAE,aAFL;IAGLC,SAAS,EAAE,UAACC,MAAD,EAAmC;MAAlC;QAAAA;MAAkC;;MAAK,OAAC;QAClDC,SAAS,EAAED,MAAM,CAACM,KADgC;QAElDJ,SAAS,EAAEF,MAAM,CAACO,WAFgC;QAGlDH,UAAU,EAAEJ,MAAM,CAACQ;MAH+B,CAAD;IAIjD;EAPG;AAVoB,CAAtB;AAqBP,OAAO,IAAMC,eAAe,GAAGjB,KAAK,CAACkB,UAAN,CAC7B,UACEC,EADF,EAEEC,GAFF,EAEiC;MAD7BC,SAAS;MAAEC,SAAS;MAAEC,YAAY;MAAEjB,QAAQ;MAAEkB,QAAQ;MAAEC,OAAO;EAGjE,OACEzB,oBAACC,cAAD,EAAe;IACbmB,GAAG,EAAEA,GADQ;IAEbC,SAAS,EAAEA,SAFE;IAGbC,SAAS,EAAEA,SAHE;IAIbI,OAAO,EAAC,MAJK;IAKbC,UAAU,EAAC,MALE;IAMbF,OAAO,EAAEA,OANI;IAObnB,QAAQ,EAAEA,QAPG;IAQbkB,QAAQ,EAAEA,QARG;IASbD,YAAY,EAAEA;EATD,CAAf,CADF;AAaD,CAlB4B,CAAxB;AA4BP,OAAO,IAAMK,WAAW,GAAG5B,KAAK,CAACkB,UAAN,CACzB,UAACC,EAAD,EAAgEC,GAAhE,EAA+F;MAA5FC,SAAS;MAAEC,SAAS;MAAEG,OAAO;MAAEnB,QAAQ;EACxC,OACEN;IAAMqB,SAAS,EAAEnB,MAAM,CAAC,cAAD;EAAvB,GACEF,oBAACiB,eAAD,EAAgB;IAACG,GAAG,EAAEA,GAAN;IAAWC,SAAS,EAAEA,SAAtB;IAAiCC,SAAS,EAAEA,SAA5C;IAAuDhB,QAAQ,EAAEA,QAAjE;IAA2EmB,OAAO,EAAEA;EAApF,CAAhB,CADF,CADF;AAKD,CAPwB,CAApB","names":["React","InternalButton","styles","togglesConfig","navigation","TagName","iconName","getLabels","labels","mainLabel","openLabel","navigationToggle","closeLabel","navigationClose","tools","toolsToggle","toolsClose","AppLayoutButton","forwardRef","_a","ref","className","ariaLabel","ariaExpanded","disabled","onClick","variant","formAction","CloseButton"],"sourceRoot":"","sources":["../../../../src/app-layout/toggles/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { ButtonProps } from '../../button/interfaces';\nimport { IconProps } from '../../icon/interfaces';\nimport { InternalButton } from '../../button/internal';\nimport { AppLayoutProps } from '../interfaces';\nimport { AppLayoutButtonProps } from './interfaces';\nimport styles from './styles.css.js';\n\nexport const togglesConfig = {\n  navigation: {\n    TagName: 'nav',\n    iconName: 'menu',\n    getLabels: (labels: AppLayoutProps.Labels = {}) => ({\n      mainLabel: labels.navigation,\n      openLabel: labels.navigationToggle,\n      closeLabel: labels.navigationClose,\n    }),\n  },\n  tools: {\n    TagName: 'aside',\n    iconName: 'status-info',\n    getLabels: (labels: AppLayoutProps.Labels = {}) => ({\n      mainLabel: labels.tools,\n      openLabel: labels.toolsToggle,\n      closeLabel: labels.toolsClose,\n    }),\n  },\n} as const;\n\nexport const AppLayoutButton = React.forwardRef(\n  (\n    { className, ariaLabel, ariaExpanded, iconName, disabled, onClick }: AppLayoutButtonProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    return (\n      <InternalButton\n        ref={ref}\n        className={className}\n        ariaLabel={ariaLabel}\n        variant=\"icon\"\n        formAction=\"none\"\n        onClick={onClick}\n        iconName={iconName}\n        disabled={disabled}\n        ariaExpanded={ariaExpanded}\n      />\n    );\n  }\n);\n\ninterface CloseButtonProps {\n  className?: string;\n  ariaLabel: string | undefined;\n  onClick: () => void;\n  iconName: IconProps.Name;\n}\n\nexport const CloseButton = React.forwardRef(\n  ({ className, ariaLabel, onClick, iconName }: CloseButtonProps, ref: React.Ref<ButtonProps.Ref>) => {\n    return (\n      <span className={styles['close-button']}>\n        <AppLayoutButton ref={ref} className={className} ariaLabel={ariaLabel} iconName={iconName} onClick={onClick} />\n      </span>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}