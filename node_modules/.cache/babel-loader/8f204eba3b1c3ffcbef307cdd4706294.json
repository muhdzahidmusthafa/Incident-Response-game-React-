{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport ItemElement from './item-element';\nimport ExpandableCategoryElement from './category-elements/expandable-category-element';\nimport CategoryElement from './category-elements/category-element';\nimport { isItemGroup } from './utils/utils';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport MobileExpandableCategoryElement from './category-elements/mobile-expandable-category-element';\nexport default function ItemsList(_a) {\n  var items = _a.items,\n      onItemActivate = _a.onItemActivate,\n      onGroupToggle = _a.onGroupToggle,\n      targetItem = _a.targetItem,\n      isHighlighted = _a.isHighlighted,\n      isExpanded = _a.isExpanded,\n      highlightItem = _a.highlightItem,\n      _b = _a.categoryDisabled,\n      categoryDisabled = _b === void 0 ? false : _b,\n      _c = _a.hasExpandableGroups,\n      hasExpandableGroups = _c === void 0 ? false : _c,\n      _d = _a.hasCategoryHeader,\n      hasCategoryHeader = _d === void 0 ? false : _d,\n      _e = _a.expandToViewport,\n      expandToViewport = _e === void 0 ? false : _e,\n      _f = _a.variant,\n      variant = _f === void 0 ? 'normal' : _f;\n  var isMobile = useMobile();\n  var elements = items.map(function (item, index) {\n    var _a, _b, _c, _d;\n\n    if (!isItemGroup(item)) {\n      return React.createElement(ItemElement, {\n        key: index,\n        item: item,\n        onItemActivate: onItemActivate,\n        disabled: (_a = item.disabled) !== null && _a !== void 0 ? _a : categoryDisabled,\n        highlighted: isHighlighted(item),\n        highlightItem: highlightItem,\n        first: index === 0 || isItemGroup(items[index - 1]),\n        last: index === items.length - 1 || isItemGroup(items[index + 1]),\n        hasCategoryHeader: hasCategoryHeader,\n        variant: variant\n      });\n    }\n\n    if (hasExpandableGroups) {\n      return item.text ? isMobile ? React.createElement(MobileExpandableCategoryElement, {\n        key: index,\n        item: item,\n        onItemActivate: onItemActivate,\n        onGroupToggle: onGroupToggle,\n        targetItem: targetItem,\n        isHighlighted: isHighlighted,\n        isExpanded: isExpanded,\n        highlightItem: highlightItem,\n        disabled: (_b = item.disabled) !== null && _b !== void 0 ? _b : false,\n        variant: variant\n      }) : React.createElement(ExpandableCategoryElement, {\n        key: index,\n        item: item,\n        onItemActivate: onItemActivate,\n        onGroupToggle: onGroupToggle,\n        targetItem: targetItem,\n        isHighlighted: isHighlighted,\n        isExpanded: isExpanded,\n        highlightItem: highlightItem,\n        disabled: (_c = item.disabled) !== null && _c !== void 0 ? _c : false,\n        expandToViewport: expandToViewport,\n        variant: variant\n      }) : null;\n    }\n\n    return React.createElement(CategoryElement, {\n      key: index,\n      item: item,\n      onItemActivate: onItemActivate,\n      onGroupToggle: onGroupToggle,\n      targetItem: targetItem,\n      isHighlighted: isHighlighted,\n      isExpanded: isExpanded,\n      highlightItem: highlightItem,\n      disabled: (_d = item.disabled) !== null && _d !== void 0 ? _d : false,\n      variant: variant\n    });\n  });\n  return React.createElement(React.Fragment, null, elements);\n}","map":{"version":3,"mappings":"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","names":["React","ItemElement","ExpandableCategoryElement","CategoryElement","isItemGroup","useMobile","MobileExpandableCategoryElement","ItemsList","_a","items","onItemActivate","onGroupToggle","targetItem","isHighlighted","isExpanded","highlightItem","_b","categoryDisabled","_c","hasExpandableGroups","_d","hasCategoryHeader","_e","expandToViewport","_f","variant","isMobile","elements","map","item","index","key","disabled","highlighted","first","last","length","text"],"sourceRoot":"","sources":["../../../src/button-dropdown/items-list.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { ItemListProps } from './interfaces';\nimport ItemElement from './item-element';\nimport ExpandableCategoryElement from './category-elements/expandable-category-element';\nimport CategoryElement from './category-elements/category-element';\nimport { isItemGroup } from './utils/utils';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport MobileExpandableCategoryElement from './category-elements/mobile-expandable-category-element';\n\nexport default function ItemsList({\n  items,\n  onItemActivate,\n  onGroupToggle,\n  targetItem,\n  isHighlighted,\n  isExpanded,\n  highlightItem,\n  categoryDisabled = false,\n  hasExpandableGroups = false,\n  hasCategoryHeader = false,\n  expandToViewport = false,\n  variant = 'normal',\n}: ItemListProps) {\n  const isMobile = useMobile();\n\n  const elements = items.map((item, index) => {\n    if (!isItemGroup(item)) {\n      return (\n        <ItemElement\n          key={index}\n          item={item}\n          onItemActivate={onItemActivate}\n          disabled={item.disabled ?? categoryDisabled}\n          highlighted={isHighlighted(item)}\n          highlightItem={highlightItem}\n          first={index === 0 || isItemGroup(items[index - 1])}\n          last={index === items.length - 1 || isItemGroup(items[index + 1])}\n          hasCategoryHeader={hasCategoryHeader}\n          variant={variant}\n        />\n      );\n    }\n    if (hasExpandableGroups) {\n      return item.text ? (\n        isMobile ? (\n          <MobileExpandableCategoryElement\n            key={index}\n            item={item}\n            onItemActivate={onItemActivate}\n            onGroupToggle={onGroupToggle}\n            targetItem={targetItem}\n            isHighlighted={isHighlighted}\n            isExpanded={isExpanded}\n            highlightItem={highlightItem}\n            disabled={item.disabled ?? false}\n            variant={variant}\n          />\n        ) : (\n          <ExpandableCategoryElement\n            key={index}\n            item={item}\n            onItemActivate={onItemActivate}\n            onGroupToggle={onGroupToggle}\n            targetItem={targetItem}\n            isHighlighted={isHighlighted}\n            isExpanded={isExpanded}\n            highlightItem={highlightItem}\n            disabled={item.disabled ?? false}\n            expandToViewport={expandToViewport}\n            variant={variant}\n          />\n        )\n      ) : null;\n    }\n    return (\n      <CategoryElement\n        key={index}\n        item={item}\n        onItemActivate={onItemActivate}\n        onGroupToggle={onGroupToggle}\n        targetItem={targetItem}\n        isHighlighted={isHighlighted}\n        isExpanded={isExpanded}\n        highlightItem={highlightItem}\n        disabled={item.disabled ?? false}\n        variant={variant}\n      />\n    );\n  });\n\n  return <>{elements}</>;\n}\n"]},"metadata":{},"sourceType":"module"}