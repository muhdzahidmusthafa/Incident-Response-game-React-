{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport InternalButtonDropdown from './internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar ButtonDropdown = React.forwardRef(function (_a, ref) {\n  var items = _a.items,\n      _b = _a.variant,\n      variant = _b === void 0 ? 'normal' : _b,\n      _c = _a.loading,\n      loading = _c === void 0 ? false : _c,\n      _d = _a.disabled,\n      disabled = _d === void 0 ? false : _d,\n      _e = _a.expandableGroups,\n      expandableGroups = _e === void 0 ? false : _e,\n      _f = _a.expandToViewport,\n      expandToViewport = _f === void 0 ? false : _f,\n      ariaLabel = _a.ariaLabel,\n      children = _a.children,\n      onItemClick = _a.onItemClick,\n      onItemFollow = _a.onItemFollow,\n      props = __rest(_a, [\"items\", \"variant\", \"loading\", \"disabled\", \"expandableGroups\", \"expandToViewport\", \"ariaLabel\", \"children\", \"onItemClick\", \"onItemFollow\"]);\n\n  var baseComponentProps = useBaseComponent('ButtonDropdown');\n  var baseProps = getBaseProps(props);\n  return React.createElement(InternalButtonDropdown, __assign({}, baseProps, baseComponentProps, {\n    ref: ref,\n    items: items,\n    variant: variant,\n    loading: loading,\n    disabled: disabled,\n    expandableGroups: expandableGroups,\n    expandToViewport: expandToViewport,\n    ariaLabel: ariaLabel,\n    onItemClick: onItemClick,\n    onItemFollow: onItemFollow\n  }), children);\n});\napplyDisplayName(ButtonDropdown, 'ButtonDropdown');\nexport default ButtonDropdown;","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,sBAAP,MAAmC,YAAnC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AAIA,IAAMC,cAAc,GAAGL,KAAK,CAACM,UAAN,CACrB,UACEC,EADF,EAcEC,GAdF,EAcyC;EAZrC,SAAK,WAAL;EAAA,IACAC,eADA;EAAA,IACAC,OAAO,mBAAG,QAAH,GAAWD,EADlB;EAAA,IAEAE,eAFA;EAAA,IAEAC,OAAO,mBAAG,KAAH,GAAQD,EAFf;EAAA,IAGAE,gBAHA;EAAA,IAGAC,QAAQ,mBAAG,KAAH,GAAQD,EAHhB;EAAA,IAIAE,wBAJA;EAAA,IAIAC,gBAAgB,mBAAG,KAAH,GAAQD,EAJxB;EAAA,IAKAE,wBALA;EAAA,IAKAC,gBAAgB,mBAAG,KAAH,GAAQD,EALxB;EAAA,IAMAE,SAAS,eANT;EAAA,IAOAC,QAAQ,cAPR;EAAA,IAQAC,WAAW,iBARX;EAAA,IASAC,YAAY,kBATZ;EAAA,IAUGC,KAAK,cAXV,2IAWU,CAVR;;EAcF,IAAMC,kBAAkB,GAAGpB,gBAAgB,CAAC,gBAAD,CAA3C;EACA,IAAMqB,SAAS,GAAGvB,YAAY,CAACqB,KAAD,CAA9B;EACA,OACEvB,oBAACC,sBAAD,EAAuByB,aACjBD,SADiB,EAEjBD,kBAFiB,EAEC;IACtBhB,GAAG,EAAEA,GADiB;IAEtBmB,KAAK,EAAEA,KAFe;IAGtBjB,OAAO,EAAEA,OAHa;IAItBE,OAAO,EAAEA,OAJa;IAKtBE,QAAQ,EAAEA,QALY;IAMtBE,gBAAgB,EAAEA,gBANI;IAOtBE,gBAAgB,EAAEA,gBAPI;IAQtBC,SAAS,EAAEA,SARW;IAStBE,WAAW,EAAEA,WATS;IAUtBC,YAAY,EAAEA;EAVQ,CAFD,CAAvB,EAcGF,QAdH,CADF;AAkBD,CArCoB,CAAvB;AAwCAjB,gBAAgB,CAACE,cAAD,EAAiB,gBAAjB,CAAhB;AACA,eAAeA,cAAf","names":["React","InternalButtonDropdown","getBaseProps","applyDisplayName","useBaseComponent","ButtonDropdown","forwardRef","_a","ref","_b","variant","_c","loading","_d","disabled","_e","expandableGroups","_f","expandToViewport","ariaLabel","children","onItemClick","onItemFollow","props","baseComponentProps","baseProps","__assign","items"],"sourceRoot":"","sources":["../../../src/button-dropdown/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { ButtonDropdownProps } from './interfaces';\nimport InternalButtonDropdown from './internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { ButtonDropdownProps };\n\nconst ButtonDropdown = React.forwardRef(\n  (\n    {\n      items,\n      variant = 'normal',\n      loading = false,\n      disabled = false,\n      expandableGroups = false,\n      expandToViewport = false,\n      ariaLabel,\n      children,\n      onItemClick,\n      onItemFollow,\n      ...props\n    }: ButtonDropdownProps,\n    ref: React.Ref<ButtonDropdownProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('ButtonDropdown');\n    const baseProps = getBaseProps(props);\n    return (\n      <InternalButtonDropdown\n        {...baseProps}\n        {...baseComponentProps}\n        ref={ref}\n        items={items}\n        variant={variant}\n        loading={loading}\n        disabled={disabled}\n        expandableGroups={expandableGroups}\n        expandToViewport={expandToViewport}\n        ariaLabel={ariaLabel}\n        onItemClick={onItemClick}\n        onItemFollow={onItemFollow}\n      >\n        {children}\n      </InternalButtonDropdown>\n    );\n  }\n);\n\napplyDisplayName(ButtonDropdown, 'ButtonDropdown');\nexport default ButtonDropdown;\n"]},"metadata":{},"sourceType":"module"}