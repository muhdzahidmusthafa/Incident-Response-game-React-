{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalMixedLineBarChart from './internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nfunction MixedLineBarChart(_a) {\n  var _b = _a.series,\n      series = _b === void 0 ? [] : _b,\n      _c = _a.height,\n      height = _c === void 0 ? 500 : _c,\n      _d = _a.xScaleType,\n      xScaleType = _d === void 0 ? 'linear' : _d,\n      _e = _a.yScaleType,\n      yScaleType = _e === void 0 ? 'linear' : _e,\n      _f = _a.stackedBars,\n      stackedBars = _f === void 0 ? false : _f,\n      _g = _a.horizontalBars,\n      horizontalBars = _g === void 0 ? false : _g,\n      _h = _a.statusType,\n      statusType = _h === void 0 ? 'finished' : _h,\n      _j = _a.detailPopoverSize,\n      detailPopoverSize = _j === void 0 ? 'medium' : _j,\n      _k = _a.emphasizeBaselineAxis,\n      emphasizeBaselineAxis = _k === void 0 ? true : _k,\n      props = __rest(_a, [\"series\", \"height\", \"xScaleType\", \"yScaleType\", \"stackedBars\", \"horizontalBars\", \"statusType\", \"detailPopoverSize\", \"emphasizeBaselineAxis\"]);\n\n  var baseComponentProps = useBaseComponent('MixedLineBarChart');\n  return React.createElement(InternalMixedLineBarChart, __assign({\n    series: series,\n    height: height,\n    xScaleType: xScaleType,\n    yScaleType: yScaleType,\n    stackedBars: stackedBars,\n    horizontalBars: horizontalBars,\n    statusType: statusType,\n    detailPopoverSize: detailPopoverSize,\n    emphasizeBaselineAxis: emphasizeBaselineAxis\n  }, props, baseComponentProps));\n}\n\napplyDisplayName(MixedLineBarChart, 'MixedLineBarChart');\nexport default MixedLineBarChart;","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,sCAAjC;AAGA,OAAOC,yBAAP,MAAsC,YAAtC;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;;AAIA,SAASC,iBAAT,CAA6DC,EAA7D,EAW4B;EAV1B;EAAA,UAAM,mBAAG,EAAH,GAAKC,EAAX;EAAA,IACAC,cADA;EAAA,IACAC,MAAM,mBAAG,GAAH,GAAMD,EADZ;EAAA,IAEAE,kBAFA;EAAA,IAEAC,UAAU,mBAAG,QAAH,GAAWD,EAFrB;EAAA,IAGAE,kBAHA;EAAA,IAGAC,UAAU,mBAAG,QAAH,GAAWD,EAHrB;EAAA,IAIAE,mBAJA;EAAA,IAIAC,WAAW,mBAAG,KAAH,GAAQD,EAJnB;EAAA,IAKAE,sBALA;EAAA,IAKAC,cAAc,mBAAG,KAAH,GAAQD,EALtB;EAAA,IAMAE,kBANA;EAAA,IAMAC,UAAU,mBAAG,UAAH,GAAaD,EANvB;EAAA,IAOAE,yBAPA;EAAA,IAOAC,iBAAiB,mBAAG,QAAH,GAAWD,EAP5B;EAAA,IAQAE,6BARA;EAAA,IAQAC,qBAAqB,mBAAG,IAAH,GAAOD,EAR5B;EAAA,IASGE,KAAK,cAVmD,6IAUnD,CATR;;EAWA,IAAMC,kBAAkB,GAAGrB,gBAAgB,CAAC,mBAAD,CAA3C;EACA,OACEH,oBAACE,yBAAD,EAA0BuB;IACxBC,MAAM,EAAEA,MADgB;IAExBlB,MAAM,EAAEA,MAFgB;IAGxBE,UAAU,EAAEA,UAHY;IAIxBE,UAAU,EAAEA,UAJY;IAKxBE,WAAW,EAAEA,WALW;IAMxBE,cAAc,EAAEA,cANQ;IAOxBE,UAAU,EAAEA,UAPY;IAQxBE,iBAAiB,EAAEA,iBARK;IASxBE,qBAAqB,EAAEA;EATC,GAUpBC,KAVoB,EAWpBC,kBAXoB,CAA1B,CADF;AAeD;;AAEDvB,gBAAgB,CAACG,iBAAD,EAAoB,mBAApB,CAAhB;AAEA,eAAeA,iBAAf","names":["React","applyDisplayName","InternalMixedLineBarChart","useBaseComponent","MixedLineBarChart","_a","_b","_c","height","_d","xScaleType","_e","yScaleType","_f","stackedBars","_g","horizontalBars","_h","statusType","_j","detailPopoverSize","_k","emphasizeBaselineAxis","props","baseComponentProps","__assign","series"],"sourceRoot":"","sources":["../../../src/mixed-line-bar-chart/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\n\nimport { MixedLineBarChartProps } from './interfaces';\nimport InternalMixedLineBarChart from './internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { MixedLineBarChartProps };\n\nfunction MixedLineBarChart<T extends number | string | Date>({\n  series = [],\n  height = 500,\n  xScaleType = 'linear',\n  yScaleType = 'linear',\n  stackedBars = false,\n  horizontalBars = false,\n  statusType = 'finished',\n  detailPopoverSize = 'medium',\n  emphasizeBaselineAxis = true,\n  ...props\n}: MixedLineBarChartProps<T>) {\n  const baseComponentProps = useBaseComponent('MixedLineBarChart');\n  return (\n    <InternalMixedLineBarChart\n      series={series}\n      height={height}\n      xScaleType={xScaleType}\n      yScaleType={yScaleType}\n      stackedBars={stackedBars}\n      horizontalBars={horizontalBars}\n      statusType={statusType}\n      detailPopoverSize={detailPopoverSize}\n      emphasizeBaselineAxis={emphasizeBaselineAxis}\n      {...props}\n      {...baseComponentProps}\n    />\n  );\n}\n\napplyDisplayName(MixedLineBarChart, 'MixedLineBarChart');\n\nexport default MixedLineBarChart;\n"]},"metadata":{},"sourceType":"module"}