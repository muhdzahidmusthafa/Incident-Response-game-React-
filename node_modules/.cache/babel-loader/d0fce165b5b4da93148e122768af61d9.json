{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../../base-component';\nimport InternalIcon from '../../../icon/internal';\nimport styles from './styles.css.js';\nimport { fireKeyboardEvent, fireCancelableEvent, getBlurEventRelatedTarget } from '../../events';\nimport useFocusVisible from '../../hooks/focus-visible';\n\nvar ButtonTrigger = function (_a, ref) {\n  var children = _a.children,\n      _b = _a.pressed,\n      pressed = _b === void 0 ? false : _b,\n      _c = _a.hideCaret,\n      hideCaret = _c === void 0 ? false : _c,\n      _d = _a.disabled,\n      disabled = _d === void 0 ? false : _d,\n      _e = _a.readOnly,\n      readOnly = _e === void 0 ? false : _e,\n      _f = _a.invalid,\n      invalid = _f === void 0 ? false : _f,\n      inFilteringToken = _a.inFilteringToken,\n      ariaHasPopup = _a.ariaHasPopup,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby,\n      ariaDescribedby = _a.ariaDescribedby,\n      onKeyDown = _a.onKeyDown,\n      onKeyUp = _a.onKeyUp,\n      onMouseDown = _a.onMouseDown,\n      onClick = _a.onClick,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      restProps = __rest(_a, [\"children\", \"pressed\", \"hideCaret\", \"disabled\", \"readOnly\", \"invalid\", \"inFilteringToken\", \"ariaHasPopup\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescribedby\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onClick\", \"onFocus\", \"onBlur\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var focusVisible = useFocusVisible();\n\n  var attributes = __assign(__assign(__assign({}, focusVisible), baseProps), {\n    type: 'button',\n    className: clsx(styles['button-trigger'], baseProps.className, pressed && styles.pressed, disabled && styles.disabled, invalid && styles.invalid, !hideCaret && styles['has-caret'], readOnly && styles['read-only'], inFilteringToken && styles['in-filtering-token']),\n    disabled: disabled || readOnly,\n    'aria-expanded': pressed,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-haspopup': ariaHasPopup !== null && ariaHasPopup !== void 0 ? ariaHasPopup : 'listbox',\n    onKeyDown: onKeyDown && function (event) {\n      return fireKeyboardEvent(onKeyDown, event);\n    },\n    onKeyUp: onKeyUp && function (event) {\n      return fireKeyboardEvent(onKeyUp, event);\n    },\n    onMouseDown: onMouseDown && function (event) {\n      return fireCancelableEvent(onMouseDown, {}, event);\n    },\n    onClick: onClick && function (event) {\n      return fireCancelableEvent(onClick, {}, event);\n    },\n    onFocus: onFocus && function (event) {\n      return fireCancelableEvent(onFocus, {}, event);\n    },\n    onBlur: onBlur && function (event) {\n      return fireCancelableEvent(onBlur, {\n        relatedTarget: getBlurEventRelatedTarget(event.nativeEvent)\n      }, event);\n    }\n  });\n\n  if (invalid) {\n    attributes['aria-invalid'] = invalid;\n  }\n\n  return React.createElement(\"button\", __assign({\n    ref: ref\n  }, attributes), children, !hideCaret && React.createElement(\"span\", {\n    className: styles.arrow\n  }, React.createElement(InternalIcon, {\n    name: \"caret-down-filled\",\n    variant: disabled ? 'disabled' : 'normal'\n  })));\n};\n\nexport default React.forwardRef(ButtonTrigger);","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,KAAP,MAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAA6BC,YAA7B,QAAiD,sBAAjD;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SACEC,iBADF,EAEEC,mBAFF,EAKEC,yBALF,QAMO,cANP;AAOA,OAAOC,eAAP,MAA4B,2BAA5B;;AAsBA,IAAMC,aAAa,GAAG,UACpBC,EADoB,EAqBpBC,GArBoB,EAqBa;EAnB/B,YAAQ,cAAR;EAAA,IACAC,eADA;EAAA,IACAC,OAAO,mBAAG,KAAH,GAAQD,EADf;EAAA,IAEAE,iBAFA;EAAA,IAEAC,SAAS,mBAAG,KAAH,GAAQD,EAFjB;EAAA,IAGAE,gBAHA;EAAA,IAGAC,QAAQ,mBAAG,KAAH,GAAQD,EAHhB;EAAA,IAIAE,gBAJA;EAAA,IAIAC,QAAQ,mBAAG,KAAH,GAAQD,EAJhB;EAAA,IAKAE,eALA;EAAA,IAKAC,OAAO,mBAAG,KAAH,GAAQD,EALf;EAAA,IAMAE,gBAAgB,sBANhB;EAAA,IAOAC,YAAY,kBAPZ;EAAA,IAQAC,SAAS,eART;EAAA,IASAC,cAAc,oBATd;EAAA,IAUAC,eAAe,qBAVf;EAAA,IAWAC,SAAS,eAXT;EAAA,IAYAC,OAAO,aAZP;EAAA,IAaAC,WAAW,iBAbX;EAAA,IAcAC,OAAO,aAdP;EAAA,IAeAC,OAAO,aAfP;EAAA,IAgBAC,MAAM,YAhBN;EAAA,IAiBGC,SAAS,cAlBd,oOAkBc,CAjBZ;;EAqBF,IAAMC,SAAS,GAAGhC,YAAY,CAAC+B,SAAD,CAA9B;EACA,IAAME,YAAY,GAAG3B,eAAe,EAApC;;EAEA,IAAM4B,UAAU,kCACXD,YADW,GAEXD,SAFW,GAEF;IACZG,IAAI,EAAE,QADM;IAEZC,SAAS,EAAErC,IAAI,CACbG,MAAM,CAAC,gBAAD,CADO,EAEb8B,SAAS,CAACI,SAFG,EAGbzB,OAAO,IAAIT,MAAM,CAACS,OAHL,EAIbI,QAAQ,IAAIb,MAAM,CAACa,QAJN,EAKbI,OAAO,IAAIjB,MAAM,CAACiB,OALL,EAMb,CAACN,SAAD,IAAcX,MAAM,CAAC,WAAD,CANP,EAObe,QAAQ,IAAIf,MAAM,CAAC,WAAD,CAPL,EAQbkB,gBAAgB,IAAIlB,MAAM,CAAC,oBAAD,CARb,CAFH;IAYZa,QAAQ,EAAEA,QAAQ,IAAIE,QAZV;IAaZ,iBAAiBN,OAbL;IAcZ,cAAcW,SAdF;IAeZ,mBAAmBC,cAfP;IAgBZ,oBAAoBC,eAhBR;IAiBZ,iBAAiBH,YAAY,SAAZ,gBAAY,WAAZ,kBAAgB,SAjBrB;IAkBZI,SAAS,EAAEA,SAAS,IAAK,iBAAK;MAAI,wBAAiB,CAACA,SAAD,EAAYY,KAAZ,CAAjB;IAAmC,CAlBzD;IAmBZX,OAAO,EAAEA,OAAO,IAAK,iBAAK;MAAI,wBAAiB,CAACA,OAAD,EAAUW,KAAV,CAAjB;IAAiC,CAnBnD;IAoBZV,WAAW,EAAEA,WAAW,IAAK,iBAAK;MAAI,0BAAmB,CAACA,WAAD,EAAc,EAAd,EAAkBU,KAAlB,CAAnB;IAA2C,CApBrE;IAqBZT,OAAO,EAAEA,OAAO,IAAK,iBAAK;MAAI,0BAAmB,CAACA,OAAD,EAAU,EAAV,EAAcS,KAAd,CAAnB;IAAuC,CArBzD;IAsBZR,OAAO,EAAEA,OAAO,IAAK,iBAAK;MAAI,0BAAmB,CAACA,OAAD,EAAU,EAAV,EAAcQ,KAAd,CAAnB;IAAuC,CAtBzD;IAuBZP,MAAM,EACJA,MAAM,IACL,iBAAK;MAAI,0BAAmB,CAACA,MAAD,EAAS;QAAEQ,aAAa,EAAEjC,yBAAyB,CAACgC,KAAK,CAACE,WAAP;MAA1C,CAAT,EAA0EF,KAA1E,CAAnB;IAAmG;EAzBnG,CAFE,CAAhB;;EA8BA,IAAIlB,OAAJ,EAAa;IACXe,UAAU,CAAC,cAAD,CAAV,GAA6Bf,OAA7B;EACD;;EAED,OACErB;IAAQW,GAAG,EAAEA;EAAb,GAAsByB,UAAtB,GACGM,QADH,EAEG,CAAC3B,SAAD,IACCf;IAAMsC,SAAS,EAAElC,MAAM,CAACuC;EAAxB,GACE3C,oBAACG,YAAD,EAAa;IAACyC,IAAI,EAAC,mBAAN;IAA0BC,OAAO,EAAE5B,QAAQ,GAAG,UAAH,GAAgB;EAA3D,CAAb,CADF,CAHJ,CADF;AAUD,CAtED;;AA8EA,eAAejB,KAAK,CAAC8C,UAAN,CAAiBrC,aAAjB,CAAf","names":["React","clsx","getBaseProps","InternalIcon","styles","fireKeyboardEvent","fireCancelableEvent","getBlurEventRelatedTarget","useFocusVisible","ButtonTrigger","_a","ref","_b","pressed","_c","hideCaret","_d","disabled","_e","readOnly","_f","invalid","inFilteringToken","ariaHasPopup","ariaLabel","ariaLabelledby","ariaDescribedby","onKeyDown","onKeyUp","onMouseDown","onClick","onFocus","onBlur","restProps","baseProps","focusVisible","attributes","type","className","event","relatedTarget","nativeEvent","children","arrow","name","variant","forwardRef"],"sourceRoot":"","sources":["../../../../../src/internal/components/button-trigger/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { ButtonHTMLAttributes } from 'react';\nimport clsx from 'clsx';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport InternalIcon from '../../../icon/internal';\nimport styles from './styles.css.js';\nimport {\n  fireKeyboardEvent,\n  fireCancelableEvent,\n  CancelableEventHandler,\n  BaseKeyDetail,\n  getBlurEventRelatedTarget,\n} from '../../events';\nimport useFocusVisible from '../../hooks/focus-visible';\n\nexport interface ButtonTriggerProps extends BaseComponentProps {\n  children?: React.ReactNode;\n  pressed?: boolean;\n  hideCaret?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n  invalid?: boolean;\n  inFilteringToken?: boolean;\n  ariaHasPopup?: 'true' | 'listbox';\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  onKeyDown?: CancelableEventHandler<BaseKeyDetail>;\n  onKeyUp?: CancelableEventHandler<BaseKeyDetail>;\n  onMouseDown?: CancelableEventHandler;\n  onClick?: CancelableEventHandler;\n  onFocus?: CancelableEventHandler;\n  onBlur?: CancelableEventHandler<{ relatedTarget: Node | null }>;\n}\n\nconst ButtonTrigger = (\n  {\n    children,\n    pressed = false,\n    hideCaret = false,\n    disabled = false,\n    readOnly = false,\n    invalid = false,\n    inFilteringToken,\n    ariaHasPopup,\n    ariaLabel,\n    ariaLabelledby,\n    ariaDescribedby,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onClick,\n    onFocus,\n    onBlur,\n    ...restProps\n  }: ButtonTriggerProps,\n  ref: React.Ref<HTMLButtonElement>\n) => {\n  const baseProps = getBaseProps(restProps);\n  const focusVisible = useFocusVisible();\n\n  const attributes: ButtonHTMLAttributes<HTMLButtonElement> = {\n    ...focusVisible,\n    ...baseProps,\n    type: 'button',\n    className: clsx(\n      styles['button-trigger'],\n      baseProps.className,\n      pressed && styles.pressed,\n      disabled && styles.disabled,\n      invalid && styles.invalid,\n      !hideCaret && styles['has-caret'],\n      readOnly && styles['read-only'],\n      inFilteringToken && styles['in-filtering-token']\n    ),\n    disabled: disabled || readOnly,\n    'aria-expanded': pressed,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-haspopup': ariaHasPopup ?? 'listbox',\n    onKeyDown: onKeyDown && (event => fireKeyboardEvent(onKeyDown, event)),\n    onKeyUp: onKeyUp && (event => fireKeyboardEvent(onKeyUp, event)),\n    onMouseDown: onMouseDown && (event => fireCancelableEvent(onMouseDown, {}, event)),\n    onClick: onClick && (event => fireCancelableEvent(onClick, {}, event)),\n    onFocus: onFocus && (event => fireCancelableEvent(onFocus, {}, event)),\n    onBlur:\n      onBlur &&\n      (event => fireCancelableEvent(onBlur, { relatedTarget: getBlurEventRelatedTarget(event.nativeEvent) }, event)),\n  };\n\n  if (invalid) {\n    attributes['aria-invalid'] = invalid;\n  }\n\n  return (\n    <button ref={ref} {...attributes}>\n      {children}\n      {!hideCaret && (\n        <span className={styles.arrow}>\n          <InternalIcon name=\"caret-down-filled\" variant={disabled ? 'disabled' : 'normal'} />\n        </span>\n      )}\n    </button>\n  );\n};\n\nexport namespace ButtonTriggerProps {\n  export interface Ref {\n    focus(): void;\n  }\n}\n\nexport default React.forwardRef(ButtonTrigger);\n"]},"metadata":{},"sourceType":"module"}