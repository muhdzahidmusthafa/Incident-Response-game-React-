{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useMemo } from 'react';\nimport { arc } from 'd3-shape';\nimport { dimensionsBySize, refreshDimensionsBySize } from './utils';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nexport default function Segments(_a) {\n  var pieData = _a.pieData,\n      highlightedSegment = _a.highlightedSegment,\n      size = _a.size,\n      variant = _a.variant,\n      containerRef = _a.containerRef,\n      focusedSegmentRef = _a.focusedSegmentRef,\n      popoverTrackRef = _a.popoverTrackRef,\n      segmentAriaRoleDescription = _a.segmentAriaRoleDescription,\n      onClick = _a.onClick,\n      onMouseOver = _a.onMouseOver,\n      onMouseOut = _a.onMouseOut;\n  var isRefresh = useVisualRefresh(containerRef);\n\n  var _b = useMemo(function () {\n    var dimensions = isRefresh ? refreshDimensionsBySize[size] : dimensionsBySize[size];\n    var radius = dimensions.outerRadius;\n    var innerRadius = variant === 'pie' ? 0 : dimensions.innerRadius;\n    var cornerRadius = dimensions.cornerRadius || 0;\n    var arcFactory = arc().innerRadius(innerRadius).outerRadius(radius).cornerRadius(cornerRadius);\n    var highlightedArcFactory = arc().innerRadius(radius + 4).outerRadius(radius + 6);\n    return {\n      arcFactory: arcFactory,\n      highlightedArcFactory: highlightedArcFactory\n    };\n  }, [size, variant, isRefresh]),\n      arcFactory = _b.arcFactory,\n      highlightedArcFactory = _b.highlightedArcFactory;\n\n  var centroid = useMemo(function () {\n    for (var _i = 0, pieData_1 = pieData; _i < pieData_1.length; _i++) {\n      var datum = pieData_1[_i];\n\n      if (datum.data.datum === highlightedSegment) {\n        var _a = arcFactory.centroid(datum),\n            centroidLeft = _a[0],\n            centroidTop = _a[1];\n\n        return {\n          cx: centroidLeft,\n          cy: centroidTop\n        };\n      }\n    }\n\n    return null;\n  }, [highlightedSegment, pieData, arcFactory]);\n  return React.createElement(\"g\", {\n    onMouseLeave: function () {\n      return onMouseOut();\n    }\n  }, pieData.map(function (datum) {\n    var _a;\n\n    var isHighlighted = highlightedSegment === datum.data.datum;\n    var isDimmed = highlightedSegment !== null && !isHighlighted;\n    var arcPath = arcFactory(datum) || undefined;\n    var highlightedPath = highlightedArcFactory(datum) || undefined;\n    return React.createElement(\"g\", {\n      key: datum.data.index,\n      onClick: function () {\n        return onClick(datum.data);\n      },\n      onMouseOver: function () {\n        return onMouseOver(datum.data);\n      },\n      className: clsx(styles.segment, (_a = {}, _a[styles['segment--highlighted']] = isHighlighted, _a[styles['segment--dimmed']] = isDimmed, _a)),\n      ref: isHighlighted ? focusedSegmentRef : undefined,\n      \"aria-label\": \"\".concat(datum.data.datum.title, \" (\").concat(datum.data.datum.value, \")\"),\n      role: \"button\",\n      \"aria-roledescription\": segmentAriaRoleDescription\n    }, React.createElement(\"path\", {\n      d: arcPath,\n      fill: datum.data.color,\n      className: styles.segment__path,\n      \"aria-hidden\": \"true\"\n    }), React.createElement(\"path\", {\n      d: highlightedPath,\n      fill: datum.data.color,\n      className: clsx(styles.segment__path, styles.segment__highlight),\n      \"aria-hidden\": \"true\"\n    }));\n  }), React.createElement(\"circle\", __assign({}, centroid, {\n    ref: popoverTrackRef,\n    r: \"1\",\n    opacity: \"0\",\n    \"aria-hidden\": \"true\"\n  })));\n}","map":{"version":3,"mappings":"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","names":["React","useMemo","arc","dimensionsBySize","refreshDimensionsBySize","useVisualRefresh","styles","clsx","Segments","_a","pieData","highlightedSegment","size","variant","containerRef","focusedSegmentRef","popoverTrackRef","segmentAriaRoleDescription","onClick","onMouseOver","onMouseOut","isRefresh","dimensions","radius","outerRadius","innerRadius","cornerRadius","arcFactory","highlightedArcFactory","centroid","_i","datum","data","centroidLeft","centroidTop","cx","cy","onMouseLeave","map","isHighlighted","isDimmed","arcPath","undefined","highlightedPath","key","index","className","segment","ref","title","concat","value","role","d","fill","color","segment__path","segment__highlight","r","opacity"],"sourceRoot":"","sources":["../../../src/pie-chart/segments.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport { arc, PieArcDatum } from 'd3-shape';\n\nimport { PieChartProps } from './interfaces';\nimport { dimensionsBySize, refreshDimensionsBySize } from './utils';\nimport { InternalChartDatum } from './pie-chart';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\n\ninterface SegmentsProps<T> {\n  pieData: Array<PieArcDatum<InternalChartDatum<T>>>;\n  highlightedSegment: T | null;\n  size: NonNullable<PieChartProps['size']>;\n  variant: PieChartProps['variant'];\n  containerRef: React.RefObject<HTMLDivElement>;\n  focusedSegmentRef: React.RefObject<SVGGElement>;\n  popoverTrackRef: React.RefObject<SVGCircleElement>;\n  segmentAriaRoleDescription?: string;\n\n  onClick: (datum: InternalChartDatum<T>) => void;\n  onMouseOver: (datum: InternalChartDatum<T>) => void;\n  onMouseOut: () => void;\n}\n\nexport default function Segments<T extends PieChartProps.Datum>({\n  pieData,\n  highlightedSegment,\n  size,\n  variant,\n  containerRef,\n  focusedSegmentRef,\n  popoverTrackRef,\n  segmentAriaRoleDescription,\n  onClick,\n  onMouseOver,\n  onMouseOut,\n}: SegmentsProps<T>) {\n  const isRefresh = useVisualRefresh(containerRef);\n\n  const { arcFactory, highlightedArcFactory } = useMemo(() => {\n    const dimensions = isRefresh ? refreshDimensionsBySize[size] : dimensionsBySize[size];\n    const radius = dimensions.outerRadius;\n    const innerRadius = variant === 'pie' ? 0 : dimensions.innerRadius;\n    const cornerRadius = dimensions.cornerRadius || 0;\n\n    const arcFactory = arc<PieArcDatum<InternalChartDatum<any>>>()\n      .innerRadius(innerRadius)\n      .outerRadius(radius)\n      .cornerRadius(cornerRadius);\n\n    const highlightedArcFactory = arc<PieArcDatum<InternalChartDatum<any>>>()\n      .innerRadius(radius + 4)\n      .outerRadius(radius + 6);\n\n    return {\n      arcFactory,\n      highlightedArcFactory,\n    };\n  }, [size, variant, isRefresh]);\n\n  const centroid = useMemo(() => {\n    for (const datum of pieData) {\n      if (datum.data.datum === highlightedSegment) {\n        const [centroidLeft, centroidTop] = arcFactory.centroid(datum);\n        return { cx: centroidLeft, cy: centroidTop };\n      }\n    }\n    return null;\n  }, [highlightedSegment, pieData, arcFactory]);\n\n  return (\n    <g onMouseLeave={() => onMouseOut()}>\n      {pieData.map(datum => {\n        const isHighlighted = highlightedSegment === datum.data.datum;\n        const isDimmed = highlightedSegment !== null && !isHighlighted;\n        const arcPath = arcFactory(datum) || undefined;\n        const highlightedPath = highlightedArcFactory(datum) || undefined;\n        return (\n          <g\n            key={datum.data.index}\n            onClick={() => onClick(datum.data)}\n            onMouseOver={() => onMouseOver(datum.data)}\n            className={clsx(styles.segment, {\n              [styles['segment--highlighted']]: isHighlighted,\n              [styles['segment--dimmed']]: isDimmed,\n            })}\n            ref={isHighlighted ? focusedSegmentRef : undefined}\n            aria-label={`${datum.data.datum.title} (${datum.data.datum.value})`}\n            role=\"button\"\n            aria-roledescription={segmentAriaRoleDescription}\n          >\n            <path d={arcPath} fill={datum.data.color} className={styles.segment__path} aria-hidden=\"true\" />\n            <path\n              d={highlightedPath}\n              fill={datum.data.color}\n              className={clsx(styles.segment__path, styles.segment__highlight)}\n              aria-hidden=\"true\"\n            />\n          </g>\n        );\n      })}\n\n      <circle {...centroid} ref={popoverTrackRef} r=\"1\" opacity=\"0\" aria-hidden=\"true\" />\n    </g>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}