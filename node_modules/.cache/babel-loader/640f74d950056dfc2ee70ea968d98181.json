{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalToggle from '../toggle/internal';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport styles from './styles.css.js';\n\nvar isVisible = function (id, visibleIds) {\n  return visibleIds.indexOf(id) !== -1;\n};\n\nvar className = function (suffix) {\n  return {\n    className: styles[\"visible-content-\".concat(suffix)]\n  };\n};\n\nexport default function VisibleContentPreference(_a) {\n  var title = _a.title,\n      options = _a.options,\n      _b = _a.value,\n      value = _b === void 0 ? [] : _b,\n      onChange = _a.onChange;\n  var idPrefix = useUniqueId('visible-content');\n  var flatOptionsIds = options.reduce(function (ids, group) {\n    return __spreadArray(__spreadArray([], ids, true), group.options.reduce(function (groupIds, option) {\n      return __spreadArray(__spreadArray([], groupIds, true), [option.id], false);\n    }, []), true);\n  }, []);\n\n  var onToggle = function (id) {\n    if (!isVisible(id, value)) {\n      onChange(__spreadArray(__spreadArray([], value, true), [id], false).sort(function (firstId, secondId) {\n        return flatOptionsIds.indexOf(firstId) - flatOptionsIds.indexOf(secondId);\n      }));\n    } else {\n      onChange(value.filter(function (currentId) {\n        return currentId !== id;\n      }));\n    }\n  };\n\n  var selectionOption = function (option, optionGroupIndex, optionIndex) {\n    var labelId = \"\".concat(idPrefix, \"-\").concat(optionGroupIndex, \"-\").concat(optionIndex);\n    return React.createElement(\"div\", __assign({\n      key: optionIndex\n    }, className('option')), React.createElement(\"label\", __assign({}, className('option-label'), {\n      htmlFor: labelId\n    }), option.label), React.createElement(\"div\", __assign({}, className('toggle')), React.createElement(InternalToggle, {\n      checked: isVisible(option.id, value),\n      onChange: function () {\n        return onToggle(option.id);\n      },\n      disabled: option.editable === false,\n      controlId: labelId\n    })));\n  };\n\n  var outerGroupLabelId = \"\".concat(idPrefix, \"-outer\");\n  return React.createElement(\"div\", {\n    className: styles['visible-content']\n  }, React.createElement(\"div\", __assign({}, className('title'), {\n    id: outerGroupLabelId\n  }), title), React.createElement(InternalSpaceBetween, __assign({}, className('groups'), {\n    size: \"xs\"\n  }), options.map(function (optionGroup, optionGroupIndex) {\n    var groupLabelId = \"\".concat(idPrefix, \"-\").concat(optionGroupIndex);\n    return React.createElement(\"div\", __assign({\n      key: optionGroupIndex\n    }, className('group'), {\n      role: \"group\",\n      \"aria-labelledby\": \"\".concat(outerGroupLabelId, \" \").concat(groupLabelId)\n    }), React.createElement(\"div\", __assign({}, className('group-label'), {\n      id: groupLabelId\n    }), optionGroup.label), React.createElement(\"div\", null, optionGroup.options.map(function (option, optionIndex) {\n      return selectionOption(option, optionGroupIndex, optionIndex);\n    })));\n  })));\n}","map":{"version":3,"mappings":"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","names":["React","InternalSpaceBetween","InternalToggle","useUniqueId","styles","isVisible","id","visibleIds","indexOf","className","suffix","VisibleContentPreference","_a","title","options","_b","value","onChange","idPrefix","flatOptionsIds","reduce","ids","group","groupIds","option","onToggle","__spreadArray","sort","firstId","secondId","filter","selectionOption","optionGroupIndex","optionIndex","labelId","concat","key","htmlFor","label","checked","disabled","editable","controlId","outerGroupLabelId","__assign","size","map","optionGroup","groupLabelId","role"],"sourceRoot":"","sources":["../../../src/collection-preferences/visible-content.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalToggle from '../toggle/internal';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\n\nimport { CollectionPreferencesProps } from './interfaces';\nimport styles from './styles.css.js';\n\nconst isVisible = (id: string, visibleIds: ReadonlyArray<string>) => visibleIds.indexOf(id) !== -1;\n\ninterface ClassNameProps {\n  className: string;\n}\nconst className = (suffix: string): ClassNameProps => ({\n  className: styles[`visible-content-${suffix}`],\n});\n\ninterface VisibleContentPreferenceProps extends CollectionPreferencesProps.VisibleContentPreference {\n  onChange: (value: ReadonlyArray<string>) => void;\n  value?: ReadonlyArray<string>;\n}\n\nexport default function VisibleContentPreference({\n  title,\n  options,\n  value = [],\n  onChange,\n}: VisibleContentPreferenceProps) {\n  const idPrefix = useUniqueId('visible-content');\n\n  const flatOptionsIds = options.reduce<string[]>(\n    (ids, group) => [...ids, ...group.options.reduce<string[]>((groupIds, option) => [...groupIds, option.id], [])],\n    []\n  );\n\n  const onToggle = (id: string) => {\n    if (!isVisible(id, value)) {\n      onChange(\n        [...value, id].sort((firstId, secondId) => flatOptionsIds.indexOf(firstId) - flatOptionsIds.indexOf(secondId))\n      );\n    } else {\n      onChange(value.filter(currentId => currentId !== id));\n    }\n  };\n\n  const selectionOption = (\n    option: CollectionPreferencesProps.VisibleContentOption,\n    optionGroupIndex: number,\n    optionIndex: number\n  ) => {\n    const labelId = `${idPrefix}-${optionGroupIndex}-${optionIndex}`;\n    return (\n      <div key={optionIndex} {...className('option')}>\n        <label {...className('option-label')} htmlFor={labelId}>\n          {option.label}\n        </label>\n        <div {...className('toggle')}>\n          <InternalToggle\n            checked={isVisible(option.id, value)}\n            onChange={() => onToggle(option.id)}\n            disabled={option.editable === false}\n            controlId={labelId}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const outerGroupLabelId = `${idPrefix}-outer`;\n  return (\n    <div className={styles['visible-content']}>\n      <div {...className('title')} id={outerGroupLabelId}>\n        {title}\n      </div>\n      <InternalSpaceBetween {...className('groups')} size=\"xs\">\n        {options.map((optionGroup, optionGroupIndex) => {\n          const groupLabelId = `${idPrefix}-${optionGroupIndex}`;\n          return (\n            <div\n              key={optionGroupIndex}\n              {...className('group')}\n              role=\"group\"\n              aria-labelledby={`${outerGroupLabelId} ${groupLabelId}`}\n            >\n              <div {...className('group-label')} id={groupLabelId}>\n                {optionGroup.label}\n              </div>\n              <div>\n                {optionGroup.options.map((option, optionIndex) =>\n                  selectionOption(option, optionGroupIndex, optionIndex)\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </InternalSpaceBetween>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}