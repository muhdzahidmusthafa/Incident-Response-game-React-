{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useState } from 'react';\nexport function usePopover() {\n  var _a = useState('closed'),\n      state = _a[0],\n      setState = _a[1];\n\n  var isPopoverOpen = state !== 'closed';\n  var isPopoverPinned = state === 'pinned';\n  var showPopover = useCallback(function () {\n    return setState('open');\n  }, []);\n  var pinPopover = useCallback(function () {\n    return setState('pinned');\n  }, []);\n  var dismissPopover = useCallback(function () {\n    return setState('closed');\n  }, []);\n  return {\n    isPopoverOpen: isPopoverOpen,\n    isPopoverPinned: isPopoverPinned,\n    showPopover: showPopover,\n    pinPopover: pinPopover,\n    dismissPopover: dismissPopover\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,OAAM,SAAUC,UAAV,GAAoB;EAClB,SAAoBD,QAAQ,CAA+B,QAA/B,CAA5B;EAAA,IAACE,KAAK,QAAN;EAAA,IAAQC,QAAQ,QAAhB;;EAEN,IAAMC,aAAa,GAAGF,KAAK,KAAK,QAAhC;EACA,IAAMG,eAAe,GAAGH,KAAK,KAAK,QAAlC;EAEA,IAAMI,WAAW,GAAGP,WAAW,CAAC;IAAM,eAAQ,CAAC,MAAD,CAAR;EAAgB,CAAvB,EAAyB,EAAzB,CAA/B;EACA,IAAMQ,UAAU,GAAGR,WAAW,CAAC;IAAM,eAAQ,CAAC,QAAD,CAAR;EAAkB,CAAzB,EAA2B,EAA3B,CAA9B;EACA,IAAMS,cAAc,GAAGT,WAAW,CAAC;IAAM,eAAQ,CAAC,QAAD,CAAR;EAAkB,CAAzB,EAA2B,EAA3B,CAAlC;EAEA,OAAO;IAAEK,aAAa,eAAf;IAAiBC,eAAe,iBAAhC;IAAkCC,WAAW,aAA7C;IAA+CC,UAAU,YAAzD;IAA2DC,cAAc;EAAzE,CAAP;AACD","names":["useCallback","useState","usePopover","state","setState","isPopoverOpen","isPopoverPinned","showPopover","pinPopover","dismissPopover"],"sourceRoot":"","sources":["../../../../src/mixed-line-bar-chart/hooks/use-popover.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useState } from 'react';\n\nexport function usePopover() {\n  const [state, setState] = useState<'open' | 'closed' | 'pinned'>('closed');\n\n  const isPopoverOpen = state !== 'closed';\n  const isPopoverPinned = state === 'pinned';\n\n  const showPopover = useCallback(() => setState('open'), []);\n  const pinPopover = useCallback(() => setState('pinned'), []);\n  const dismissPopover = useCallback(() => setState('closed'), []);\n\n  return { isPopoverOpen, isPopoverPinned, showPopover, pinPopover, dismissPopover };\n}\n"]},"metadata":{},"sourceType":"module"}