{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport styles from './styles.css.js';\nimport Option from '../../internal/components/option';\nimport SelectableItem from '../../internal/components/selectable-item';\nimport { getBaseProps } from '../../internal/base-component';\nimport CheckboxIcon from '../../internal/components/checkbox-icon';\n\nvar Item = function (_a, ref) {\n  var option = _a.option,\n      highlighted = _a.highlighted,\n      selected = _a.selected,\n      filteringValue = _a.filteringValue,\n      hasCheckbox = _a.hasCheckbox,\n      isKeyboard = _a.isKeyboard,\n      virtualPosition = _a.virtualPosition,\n      padBottom = _a.padBottom,\n      isNextSelected = _a.isNextSelected,\n      screenReaderContent = _a.screenReaderContent,\n      ariaPosinset = _a.ariaPosinset,\n      ariaSetsize = _a.ariaSetsize,\n      restProps = __rest(_a, [\"option\", \"highlighted\", \"selected\", \"filteringValue\", \"hasCheckbox\", \"isKeyboard\", \"virtualPosition\", \"padBottom\", \"isNextSelected\", \"screenReaderContent\", \"ariaPosinset\", \"ariaSetsize\"]);\n\n  var baseProps = getBaseProps(restProps);\n  var isParent = option.type === 'parent';\n  var isChild = option.type === 'child';\n  var wrappedOption = option.option;\n  var disabled = option.disabled || wrappedOption.disabled;\n  return React.createElement(SelectableItem, __assign({\n    ariaSelected: selected,\n    selected: selected,\n    isNextSelected: isNextSelected,\n    highlighted: highlighted,\n    disabled: option.disabled,\n    isParent: isParent,\n    isChild: isChild,\n    isKeyboard: isKeyboard,\n    ref: ref,\n    virtualPosition: virtualPosition,\n    padBottom: padBottom,\n    screenReaderContent: screenReaderContent,\n    ariaPosinset: ariaPosinset,\n    ariaSetsize: ariaSetsize\n  }, baseProps), React.createElement(\"div\", {\n    className: styles.item\n  }, hasCheckbox && !isParent && React.createElement(\"div\", {\n    className: styles.checkbox\n  }, React.createElement(CheckboxIcon, {\n    checked: selected || false,\n    disabled: option.disabled\n  })), isParent ? wrappedOption.label || wrappedOption.value : React.createElement(Option, {\n    option: __assign(__assign({}, wrappedOption), {\n      disabled: disabled\n    }),\n    highlightText: filteringValue\n  })));\n};\n\nexport default React.memo(React.forwardRef(Item));","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,SAASC,YAAT,QAA6B,+BAA7B;AAEA,OAAOC,YAAP,MAAyB,yCAAzB;;AAiBA,IAAMC,IAAI,GAAG,UACXC,EADW,EAgBXC,GAhBW,EAgBmB;EAd5B,UAAM,YAAN;EAAA,IACAC,WAAW,iBADX;EAAA,IAEAC,QAAQ,cAFR;EAAA,IAGAC,cAAc,oBAHd;EAAA,IAIAC,WAAW,iBAJX;EAAA,IAKAC,UAAU,gBALV;EAAA,IAMAC,eAAe,qBANf;EAAA,IAOAC,SAAS,eAPT;EAAA,IAQAC,cAAc,oBARd;EAAA,IASAC,mBAAmB,yBATnB;EAAA,IAUAC,YAAY,kBAVZ;EAAA,IAWAC,WAAW,iBAXX;EAAA,IAYGC,SAAS,cAbd,4LAac,CAZZ;;EAgBF,IAAMC,SAAS,GAAGjB,YAAY,CAACgB,SAAD,CAA9B;EAEA,IAAME,QAAQ,GAAGC,MAAM,CAACC,IAAP,KAAgB,QAAjC;EACA,IAAMC,OAAO,GAAGF,MAAM,CAACC,IAAP,KAAgB,OAAhC;EACA,IAAME,aAAa,GAAqBH,MAAM,CAACA,MAA/C;EACA,IAAMI,QAAQ,GAAGJ,MAAM,CAACI,QAAP,IAAmBD,aAAa,CAACC,QAAlD;EAEA,OACE3B,oBAACG,cAAD,EAAeyB;IACbC,YAAY,EAAEnB,QADD;IAEbA,QAAQ,EAAEA,QAFG;IAGbM,cAAc,EAAEA,cAHH;IAIbP,WAAW,EAAEA,WAJA;IAKbkB,QAAQ,EAAEJ,MAAM,CAACI,QALJ;IAMbL,QAAQ,EAAEA,QANG;IAObG,OAAO,EAAEA,OAPI;IAQbZ,UAAU,EAAEA,UARC;IASbL,GAAG,EAAEA,GATQ;IAUbM,eAAe,EAAEA,eAVJ;IAWbC,SAAS,EAAEA,SAXE;IAYbE,mBAAmB,EAAEA,mBAZR;IAabC,YAAY,EAAEA,YAbD;IAcbC,WAAW,EAAEA;EAdA,GAeTE,SAfS,CAAf,EAiBErB;IAAK8B,SAAS,EAAE7B,MAAM,CAAC8B;EAAvB,GACGnB,WAAW,IAAI,CAACU,QAAhB,IACCtB;IAAK8B,SAAS,EAAE7B,MAAM,CAAC+B;EAAvB,GACEhC,oBAACK,YAAD,EAAa;IAAC4B,OAAO,EAAEvB,QAAQ,IAAI,KAAtB;IAA6BiB,QAAQ,EAAEJ,MAAM,CAACI;EAA9C,CAAb,CADF,CAFJ,EAMGL,QAAQ,GACPI,aAAa,CAACQ,KAAd,IAAuBR,aAAa,CAACS,KAD9B,GAGPnC,oBAACE,MAAD,EAAO;IAACqB,MAAM,wBAAOG,aAAP,GAAoB;MAAEC,QAAQ;IAAV,CAApB,CAAP;IAAyCS,aAAa,EAAEzB;EAAxD,CAAP,CATJ,CAjBF,CADF;AAgCD,CAzDD;;AA2DA,eAAeX,KAAK,CAACqC,IAAN,CAAWrC,KAAK,CAACsC,UAAN,CAAiBhC,IAAjB,CAAX,CAAf","names":["React","styles","Option","SelectableItem","getBaseProps","CheckboxIcon","Item","_a","ref","highlighted","selected","filteringValue","hasCheckbox","isKeyboard","virtualPosition","padBottom","isNextSelected","screenReaderContent","ariaPosinset","ariaSetsize","restProps","baseProps","isParent","option","type","isChild","wrappedOption","disabled","__assign","ariaSelected","className","item","checkbox","checked","label","value","highlightText","memo","forwardRef"],"sourceRoot":"","sources":["../../../../src/select/parts/item.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nimport Option from '../../internal/components/option';\nimport SelectableItem from '../../internal/components/selectable-item';\nimport { getBaseProps } from '../../internal/base-component';\nimport { DropdownOption, OptionDefinition } from '../../internal/components/option/interfaces';\nimport CheckboxIcon from '../../internal/components/checkbox-icon';\n\nexport interface ItemProps {\n  option: DropdownOption;\n  highlighted?: boolean;\n  selected?: boolean;\n  filteringValue?: string;\n  hasCheckbox?: boolean;\n  isKeyboard?: boolean;\n  virtualPosition?: number;\n  padBottom?: boolean;\n  isNextSelected?: boolean;\n  screenReaderContent?: string;\n  ariaPosinset?: number;\n  ariaSetsize?: number;\n}\n\nconst Item = (\n  {\n    option,\n    highlighted,\n    selected,\n    filteringValue,\n    hasCheckbox,\n    isKeyboard,\n    virtualPosition,\n    padBottom,\n    isNextSelected,\n    screenReaderContent,\n    ariaPosinset,\n    ariaSetsize,\n    ...restProps\n  }: ItemProps,\n  ref: React.Ref<HTMLDivElement>\n) => {\n  const baseProps = getBaseProps(restProps);\n\n  const isParent = option.type === 'parent';\n  const isChild = option.type === 'child';\n  const wrappedOption: OptionDefinition = option.option;\n  const disabled = option.disabled || wrappedOption.disabled;\n\n  return (\n    <SelectableItem\n      ariaSelected={selected}\n      selected={selected}\n      isNextSelected={isNextSelected}\n      highlighted={highlighted}\n      disabled={option.disabled}\n      isParent={isParent}\n      isChild={isChild}\n      isKeyboard={isKeyboard}\n      ref={ref}\n      virtualPosition={virtualPosition}\n      padBottom={padBottom}\n      screenReaderContent={screenReaderContent}\n      ariaPosinset={ariaPosinset}\n      ariaSetsize={ariaSetsize}\n      {...baseProps}\n    >\n      <div className={styles.item}>\n        {hasCheckbox && !isParent && (\n          <div className={styles.checkbox}>\n            <CheckboxIcon checked={selected || false} disabled={option.disabled} />\n          </div>\n        )}\n        {isParent ? (\n          wrappedOption.label || wrappedOption.value\n        ) : (\n          <Option option={{ ...wrappedOption, disabled }} highlightText={filteringValue} />\n        )}\n      </div>\n    </SelectableItem>\n  );\n};\n\nexport default React.memo(React.forwardRef(Item));\n"]},"metadata":{},"sourceType":"module"}