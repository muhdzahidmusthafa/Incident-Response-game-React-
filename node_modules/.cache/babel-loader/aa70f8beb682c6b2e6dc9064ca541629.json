{"ast":null,"code":"import { computePlotPoints, computeDomainX, computeDomainY } from './utils';\nimport { createXTicks, createYTicks, getXTickCount, getYTickCount } from '../../internal/components/cartesian-chart/ticks';\nimport { ChartScale, NumericChartScale } from '../../internal/components/cartesian-chart/scales';\nexport default function computeChartProps(_a) {\n  var series = _a.series,\n      externalXDomain = _a.xDomain,\n      externalYDomain = _a.yDomain,\n      xScaleType = _a.xScaleType,\n      yScaleType = _a.yScaleType,\n      height = _a.height,\n      width = _a.width;\n  var xDomain = externalXDomain || computeDomainX(series);\n  var xTickCount = getXTickCount(width);\n  var xScale = new ChartScale(xScaleType, xDomain, [0, width]);\n  var xTicks = xScale.domain.length > 0 ? createXTicks(xScale, xTickCount) : [];\n  var yDomain = externalYDomain || computeDomainY(series, yScaleType);\n  var yTickCount = getYTickCount(height);\n  var yScale = new NumericChartScale(yScaleType, yDomain, [height, 0], externalYDomain ? null : yTickCount);\n  var yTicks = createYTicks(yScale, yTickCount);\n  var plot = computePlotPoints(series, xScale, yScale);\n  return {\n    xDomain: xDomain,\n    yDomain: yDomain,\n    xScale: xScale,\n    yScale: yScale,\n    xTicks: xTicks,\n    yTicks: yTicks,\n    plot: plot\n  };\n}","map":{"version":3,"mappings":"AAGA,SAASA,iBAAT,EAA4BC,cAA5B,EAA4CC,cAA5C,QAAkE,SAAlE;AAGA,SACEC,YADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,aAJF,QAKO,iDALP;AAMA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,kDAA9C;AAEA,eAAc,SAAUC,iBAAV,CAAgEC,EAAhE,EAgBb;MAfCC,MAAM;MACGC,eAAe;MACfC,eAAe;MACxBC,UAAU;MACVC,UAAU;MACVC,MAAM;MACNC,KAAK;EAUL,IAAMC,OAAO,GAAGN,eAAe,IAAIX,cAAc,CAACU,MAAD,CAAjD;EACA,IAAMQ,UAAU,GAAGd,aAAa,CAACY,KAAD,CAAhC;EACA,IAAMG,MAAM,GAAG,IAAIb,UAAJ,CAAeO,UAAf,EAA2BI,OAA3B,EAAoC,CAAC,CAAD,EAAID,KAAJ,CAApC,CAAf;EACA,IAAMI,MAAM,GAAGD,MAAM,CAACE,MAAP,CAAcC,MAAd,GAAuB,CAAvB,GAA2BpB,YAAY,CAACiB,MAAD,EAASD,UAAT,CAAvC,GAA8D,EAA7E;EAEA,IAAMK,OAAO,GAAGX,eAAe,IAAIX,cAAc,CAACS,MAAD,EAASI,UAAT,CAAjD;EACA,IAAMU,UAAU,GAAGnB,aAAa,CAACU,MAAD,CAAhC;EACA,IAAMU,MAAM,GAAG,IAAIlB,iBAAJ,CAAsBO,UAAtB,EAAkCS,OAAlC,EAA2C,CAACR,MAAD,EAAS,CAAT,CAA3C,EAAwDH,eAAe,GAAG,IAAH,GAAUY,UAAjF,CAAf;EACA,IAAME,MAAM,GAAGvB,YAAY,CAACsB,MAAD,EAASD,UAAT,CAA3B;EAEA,IAAMG,IAAI,GAAG5B,iBAAiB,CAACW,MAAD,EAASS,MAAT,EAAiBM,MAAjB,CAA9B;EAEA,OAAO;IAAER,OAAO,SAAT;IAAWM,OAAO,SAAlB;IAAoBJ,MAAM,QAA1B;IAA4BM,MAAM,QAAlC;IAAoCL,MAAM,QAA1C;IAA4CM,MAAM,QAAlD;IAAoDC,IAAI;EAAxD,CAAP;AACD","names":["computePlotPoints","computeDomainX","computeDomainY","createXTicks","createYTicks","getXTickCount","getYTickCount","ChartScale","NumericChartScale","computeChartProps","_a","series","externalXDomain","externalYDomain","xScaleType","yScaleType","height","width","xDomain","xTickCount","xScale","xTicks","domain","length","yDomain","yTickCount","yScale","yTicks","plot"],"sourceRoot":"","sources":["../../../../src/area-chart/model/compute-chart-props.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AreaChartProps } from '../interfaces';\nimport { computePlotPoints, computeDomainX, computeDomainY } from './utils';\n\nimport { XDomain, XScaleType, YDomain, YScaleType } from '../../internal/components/cartesian-chart/interfaces';\nimport {\n  createXTicks,\n  createYTicks,\n  getXTickCount,\n  getYTickCount,\n} from '../../internal/components/cartesian-chart/ticks';\nimport { ChartScale, NumericChartScale } from '../../internal/components/cartesian-chart/scales';\n\nexport default function computeChartProps<T extends AreaChartProps.DataTypes>({\n  series,\n  xDomain: externalXDomain,\n  yDomain: externalYDomain,\n  xScaleType,\n  yScaleType,\n  height,\n  width,\n}: {\n  series: readonly AreaChartProps.Series<T>[];\n  xDomain?: XDomain<T>;\n  yDomain?: YDomain;\n  xScaleType: XScaleType;\n  yScaleType: YScaleType;\n  height: number;\n  width: number;\n}) {\n  const xDomain = externalXDomain || computeDomainX(series);\n  const xTickCount = getXTickCount(width);\n  const xScale = new ChartScale(xScaleType, xDomain, [0, width]);\n  const xTicks = xScale.domain.length > 0 ? createXTicks(xScale, xTickCount) : [];\n\n  const yDomain = externalYDomain || computeDomainY(series, yScaleType);\n  const yTickCount = getYTickCount(height);\n  const yScale = new NumericChartScale(yScaleType, yDomain, [height, 0], externalYDomain ? null : yTickCount);\n  const yTicks = createYTicks(yScale, yTickCount);\n\n  const plot = computePlotPoints(series, xScale, yScale);\n\n  return { xDomain, yDomain, xScale, yScale, xTicks, yTicks, plot };\n}\n"]},"metadata":{},"sourceType":"module"}