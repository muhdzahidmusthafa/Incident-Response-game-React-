{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport Legend from '../internal/components/chart-legend';\nimport Filter from '../internal/components/chart-filter';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalBox from '../box/internal';\nimport InternalPieChart from './pie-chart';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport createCategoryColorScale from '../internal/utils/create-category-color-scale';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { nodeContains } from '../internal/utils/dom';\n\nvar PieChart = function PieChart(_a) {\n  var _b;\n\n  var _c = _a.variant,\n      variant = _c === void 0 ? 'pie' : _c,\n      _d = _a.size,\n      size = _d === void 0 ? 'medium' : _d,\n      _e = _a.hideTitles,\n      hideTitles = _e === void 0 ? false : _e,\n      _f = _a.hideDescriptions,\n      hideDescriptions = _f === void 0 ? false : _f,\n      _g = _a.hideLegend,\n      hideLegend = _g === void 0 ? false : _g,\n      _h = _a.hideFilter,\n      hideFilter = _h === void 0 ? false : _h,\n      _j = _a.statusType,\n      statusType = _j === void 0 ? 'finished' : _j,\n      _k = _a.data,\n      externalData = _k === void 0 ? [] : _k,\n      _l = _a.i18nStrings,\n      i18nStrings = _l === void 0 ? {} : _l,\n      controlledHighlightedSegment = _a.highlightedSegment,\n      controlledVisibleSegments = _a.visibleSegments,\n      controlledOnHighlightChange = _a.onHighlightChange,\n      onFilterChange = _a.onFilterChange,\n      additionalFilters = _a.additionalFilters,\n      legendTitle = _a.legendTitle,\n      _m = _a.detailPopoverSize,\n      detailPopoverSize = _m === void 0 ? 'medium' : _m,\n      props = __rest(_a, [\"variant\", \"size\", \"hideTitles\", \"hideDescriptions\", \"hideLegend\", \"hideFilter\", \"statusType\", \"data\", \"i18nStrings\", \"highlightedSegment\", \"visibleSegments\", \"onHighlightChange\", \"onFilterChange\", \"additionalFilters\", \"legendTitle\", \"detailPopoverSize\"]);\n\n  var _o = useBaseComponent('PieChart').__internalRootRef,\n      __internalRootRef = _o === void 0 ? null : _o;\n\n  var baseProps = getBaseProps(props);\n  var isEmpty = !externalData || externalData.length === 0;\n\n  var containerAttr = __assign(__assign({}, baseProps), {\n    className: clsx(baseProps.className, styles.root)\n  });\n\n  var containerRef = useRef(null);\n\n  var _p = useContainerWidth(),\n      containerWidth = _p[0],\n      measureRef = _p[1];\n\n  var data = useMemo(function () {\n    var colors = createCategoryColorScale(externalData, undefined, function (it) {\n      return it.color || null;\n    });\n    return externalData.map(function (datum, i) {\n      return {\n        index: i,\n        color: colors[i],\n        datum: datum\n      };\n    });\n  }, [externalData]);\n\n  var _q = useControllable(controlledHighlightedSegment, controlledOnHighlightChange, null, {\n    componentName: 'PieChart',\n    controlledProp: 'highlightedSegment',\n    changeHandler: 'onHighlightChange'\n  }),\n      _r = _q[0],\n      highlightedSegment = _r === void 0 ? null : _r,\n      setHighlightedSegment = _q[1];\n\n  var _s = useState(highlightedSegment),\n      legendSegment = _s[0],\n      setLegendSegment = _s[1];\n\n  useEffect(function () {\n    setLegendSegment(controlledHighlightedSegment || null);\n  }, [controlledHighlightedSegment]);\n\n  var _t = useControllable(controlledVisibleSegments, onFilterChange, externalData, {\n    componentName: 'PieChart',\n    controlledProp: 'visibleSegments',\n    changeHandler: 'onFilterChange'\n  }),\n      visibleSegments = _t[0],\n      setVisibleSegments = _t[1];\n\n  var _u = useState(null),\n      pinnedSegment = _u[0],\n      setPinnedSegment = _u[1];\n\n  var visibleData = useMemo(function () {\n    return data.filter(function (d) {\n      return (visibleSegments === null || visibleSegments === void 0 ? void 0 : visibleSegments.indexOf(d.datum)) !== -1;\n    });\n  }, [data, visibleSegments]);\n  var filterItems = data === null || data === void 0 ? void 0 : data.map(function (data) {\n    return {\n      label: data.datum.title,\n      color: data.color,\n      type: 'rectangle',\n      datum: data.datum\n    };\n  });\n  var legendItems = filterItems.filter(function (d) {\n    return (visibleSegments === null || visibleSegments === void 0 ? void 0 : visibleSegments.indexOf(d.datum)) !== -1;\n  });\n  var filterChange = useCallback(function (selectedSeries) {\n    setVisibleSegments(selectedSeries);\n    fireNonCancelableEvent(onFilterChange, {\n      visibleSegments: selectedSeries\n    });\n  }, [setVisibleSegments, onFilterChange]);\n  var onHighlightChange = useCallback(function (segment) {\n    if (pinnedSegment !== null) {\n      return;\n    }\n\n    setLegendSegment(segment);\n    setHighlightedSegment(segment);\n    fireNonCancelableEvent(controlledOnHighlightChange, {\n      highlightedSegment: segment\n    });\n  }, [pinnedSegment, controlledOnHighlightChange, setHighlightedSegment]);\n\n  var onBlur = function (event) {\n    if (event.relatedTarget && !nodeContains(containerRef.current, event.relatedTarget)) {\n      highlightedSegment && onHighlightChange(null);\n      setLegendSegment(null);\n    }\n  };\n\n  var mergedRef = useMergeRefs(containerRef, measureRef, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, containerAttr, {\n    ref: mergedRef,\n    onBlur: onBlur\n  }), statusType === 'finished' && !isEmpty && React.createElement(InternalBox, {\n    className: styles['filter-container'],\n    margin: {\n      bottom: 'l'\n    }\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"l\",\n    direction: \"horizontal\",\n    className: clsx((_b = {}, _b[styles['has-default-filter']] = !hideFilter, _b))\n  }, !hideFilter && React.createElement(Filter, {\n    series: filterItems,\n    onChange: filterChange,\n    selectedSeries: visibleSegments,\n    i18nStrings: i18nStrings\n  }), additionalFilters)), React.createElement(InternalPieChart, __assign({}, props, {\n    variant: variant,\n    size: size,\n    data: externalData,\n    visibleData: visibleData,\n    width: containerWidth,\n    statusType: statusType,\n    hideTitles: hideTitles,\n    hideDescriptions: hideDescriptions,\n    hideLegend: hideLegend,\n    hideFilter: hideFilter,\n    additionalFilters: additionalFilters,\n    i18nStrings: i18nStrings,\n    onHighlightChange: onHighlightChange,\n    highlightedSegment: highlightedSegment,\n    legendSegment: legendSegment,\n    pinnedSegment: pinnedSegment,\n    setPinnedSegment: setPinnedSegment,\n    detailPopoverSize: detailPopoverSize\n  })), !hideLegend && !isEmpty && statusType === 'finished' && React.createElement(InternalBox, {\n    margin: {\n      top: 'm'\n    }\n  }, React.createElement(Legend, {\n    series: legendItems,\n    highlightedSeries: legendSegment,\n    legendTitle: legendTitle,\n    ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.legendAriaLabel,\n    onHighlightChange: onHighlightChange,\n    plotContainerRef: containerRef\n  })));\n};\n\napplyDisplayName(PieChart, 'PieChart');\nexport default PieChart;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useRef","useState","clsx","getBaseProps","useControllable","fireNonCancelableEvent","Legend","Filter","InternalSpaceBetween","InternalBox","InternalPieChart","styles","applyDisplayName","useBaseComponent","useMergeRefs","createCategoryColorScale","useContainerWidth","nodeContains","PieChart","_a","_c","_d","size","_e","hideTitles","_f","hideDescriptions","_g","hideLegend","_h","hideFilter","_j","statusType","_k","externalData","_l","i18nStrings","controlledHighlightedSegment","controlledVisibleSegments","controlledOnHighlightChange","onFilterChange","additionalFilters","legendTitle","_m","detailPopoverSize","props","__internalRootRef","_o","baseProps","isEmpty","length","containerAttr","className","root","containerRef","containerWidth","measureRef","data","colors","undefined","color","map","datum","i","index","componentName","controlledProp","changeHandler","_r","highlightedSegment","setHighlightedSegment","legendSegment","setLegendSegment","visibleSegments","setVisibleSegments","pinnedSegment","setPinnedSegment","visibleData","filter","indexOf","d","filterItems","label","title","type","legendItems","filterChange","selectedSeries","onHighlightChange","segment","onBlur","event","relatedTarget","current","mergedRef","ref","margin","bottom","direction","_b","series","onChange","__assign","variant","width","top","highlightedSeries","ariaLabel","legendAriaLabel","plotContainerRef"],"sourceRoot":"","sources":["../../../src/pie-chart/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport Legend, { ChartLegendProps } from '../internal/components/chart-legend';\nimport Filter, { ChartFilterProps } from '../internal/components/chart-filter';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalBox from '../box/internal';\n\nimport InternalPieChart, { InternalChartDatum } from './pie-chart';\nimport { PieChartProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport createCategoryColorScale from '../internal/utils/create-category-color-scale';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { nodeContains } from '../internal/utils/dom';\n\nexport { PieChartProps };\n\nconst PieChart = function PieChart<T extends PieChartProps.Datum = PieChartProps.Datum>({\n  variant = 'pie',\n  size = 'medium',\n  hideTitles = false,\n  hideDescriptions = false,\n  hideLegend = false,\n  hideFilter = false,\n  statusType = 'finished',\n  data: externalData = [],\n  i18nStrings = {},\n  highlightedSegment: controlledHighlightedSegment,\n  visibleSegments: controlledVisibleSegments,\n  onHighlightChange: controlledOnHighlightChange,\n  onFilterChange,\n  additionalFilters,\n  legendTitle,\n  detailPopoverSize = 'medium',\n  ...props\n}: PieChartProps<T>) {\n  const { __internalRootRef = null } = useBaseComponent('PieChart');\n  const baseProps = getBaseProps(props);\n  const isEmpty = !externalData || externalData.length === 0;\n  const containerAttr = {\n    ...baseProps,\n    className: clsx(baseProps.className, styles.root),\n  };\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [containerWidth, measureRef] = useContainerWidth();\n\n  const data: ReadonlyArray<InternalChartDatum<T>> = useMemo(() => {\n    const colors = createCategoryColorScale(externalData, undefined, it => it.color || null);\n\n    return externalData.map((datum, i) => ({\n      index: i,\n      color: colors[i],\n      datum,\n    }));\n  }, [externalData]);\n\n  const [highlightedSegment = null, setHighlightedSegment] = useControllable(\n    controlledHighlightedSegment,\n    controlledOnHighlightChange,\n    null,\n    {\n      componentName: 'PieChart',\n      controlledProp: 'highlightedSegment',\n      changeHandler: 'onHighlightChange',\n    }\n  );\n  const [legendSegment, setLegendSegment] = useState<null | T>(highlightedSegment);\n  useEffect(() => {\n    setLegendSegment(controlledHighlightedSegment || null);\n  }, [controlledHighlightedSegment]);\n\n  const [visibleSegments, setVisibleSegments] = useControllable(\n    controlledVisibleSegments,\n    onFilterChange,\n    externalData,\n    {\n      componentName: 'PieChart',\n      controlledProp: 'visibleSegments',\n      changeHandler: 'onFilterChange',\n    }\n  );\n\n  const [pinnedSegment, setPinnedSegment] = useState<T | null>(null);\n\n  const visibleData = useMemo(\n    () => data.filter(d => visibleSegments?.indexOf(d.datum) !== -1),\n    [data, visibleSegments]\n  );\n\n  const filterItems: ChartFilterProps<T>['series'] = data?.map(data => ({\n    label: data.datum.title,\n    color: data.color,\n    type: 'rectangle',\n    datum: data.datum,\n  }));\n\n  const legendItems: ChartLegendProps<T>['series'] = filterItems.filter(d => visibleSegments?.indexOf(d.datum) !== -1);\n\n  const filterChange = useCallback(\n    (selectedSeries: ReadonlyArray<T>) => {\n      setVisibleSegments(selectedSeries);\n      fireNonCancelableEvent(onFilterChange, {\n        visibleSegments: selectedSeries,\n      });\n    },\n    [setVisibleSegments, onFilterChange]\n  );\n\n  const onHighlightChange = useCallback(\n    (segment: T | null) => {\n      if (pinnedSegment !== null) {\n        return;\n      }\n      setLegendSegment(segment);\n      setHighlightedSegment(segment);\n      fireNonCancelableEvent(controlledOnHighlightChange, { highlightedSegment: segment });\n    },\n    [pinnedSegment, controlledOnHighlightChange, setHighlightedSegment]\n  );\n\n  const onBlur = (event: React.FocusEvent) => {\n    if (event.relatedTarget && !nodeContains(containerRef.current, event.relatedTarget)) {\n      highlightedSegment && onHighlightChange(null);\n      setLegendSegment(null);\n    }\n  };\n\n  const mergedRef = useMergeRefs(containerRef, measureRef, __internalRootRef);\n\n  return (\n    <div {...containerAttr} ref={mergedRef} onBlur={onBlur}>\n      {statusType === 'finished' && !isEmpty && (\n        <InternalBox className={styles['filter-container']} margin={{ bottom: 'l' }}>\n          <InternalSpaceBetween\n            size=\"l\"\n            direction=\"horizontal\"\n            className={clsx({\n              [styles['has-default-filter']]: !hideFilter,\n            })}\n          >\n            {!hideFilter && (\n              <Filter\n                series={filterItems}\n                onChange={filterChange}\n                selectedSeries={visibleSegments}\n                i18nStrings={i18nStrings}\n              />\n            )}\n            {additionalFilters}\n          </InternalSpaceBetween>\n        </InternalBox>\n      )}\n\n      <InternalPieChart\n        {...props}\n        variant={variant}\n        size={size}\n        data={externalData}\n        visibleData={visibleData}\n        width={containerWidth}\n        statusType={statusType}\n        hideTitles={hideTitles}\n        hideDescriptions={hideDescriptions}\n        hideLegend={hideLegend}\n        hideFilter={hideFilter}\n        additionalFilters={additionalFilters}\n        i18nStrings={i18nStrings}\n        onHighlightChange={onHighlightChange}\n        highlightedSegment={highlightedSegment}\n        legendSegment={legendSegment}\n        pinnedSegment={pinnedSegment}\n        setPinnedSegment={setPinnedSegment}\n        detailPopoverSize={detailPopoverSize}\n      />\n\n      {!hideLegend && !isEmpty && statusType === 'finished' && (\n        <InternalBox margin={{ top: 'm' }}>\n          <Legend<T>\n            series={legendItems}\n            highlightedSeries={legendSegment}\n            legendTitle={legendTitle}\n            ariaLabel={i18nStrings?.legendAriaLabel}\n            onHighlightChange={onHighlightChange}\n            plotContainerRef={containerRef}\n          />\n        </InternalBox>\n      )}\n    </div>\n  );\n};\n\napplyDisplayName(PieChart, 'PieChart');\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}