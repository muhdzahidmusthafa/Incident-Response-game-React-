{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { InternalButton } from '../button/internal';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport { KeyCode } from '../internal/keycode';\nimport { onPaginationClick, hasHorizontalOverflow, hasLeftOverflow, hasRightOverflow, scrollIntoView } from './scroll-utils';\nimport { isPlainLeftClick } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nexport function TabHeaderBar(_a) {\n  var _b, _c, _d;\n\n  var onChange = _a.onChange,\n      activeTabId = _a.activeTabId,\n      tabs = _a.tabs,\n      variant = _a.variant,\n      idNamespace = _a.idNamespace,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby;\n  var focusVisible = useFocusVisible();\n  var headerBarRef = useRef(null);\n  var activeTabHeaderRef = useRef(null);\n  var leftOverflowButton = useRef(null);\n  var isVisualRefresh = useVisualRefresh(headerBarRef);\n\n  var _e = useContainerQuery(function (rect) {\n    return rect.width;\n  }),\n      widthChange = _e[0],\n      containerRef = _e[1];\n\n  var tabRefs = useRef(new Map());\n\n  var _f = useState(false),\n      horizontalOverflow = _f[0],\n      setHorizontalOverflow = _f[1];\n\n  var _g = useState(false),\n      leftOverflow = _g[0],\n      setLeftOverflow = _g[1];\n\n  var _h = useState(false),\n      rightOverflow = _h[0],\n      setRightOverflow = _h[1];\n\n  useEffect(function () {\n    if (headerBarRef.current) {\n      setHorizontalOverflow(hasHorizontalOverflow(headerBarRef.current, leftOverflowButton));\n      setLeftOverflow(hasLeftOverflow(headerBarRef.current));\n      setRightOverflow(hasRightOverflow(headerBarRef.current));\n    }\n  }, [widthChange, tabs]);\n\n  var scrollIntoViewIfPossible = function (smooth) {\n    if (!activeTabId) {\n      return;\n    }\n\n    var activeTabRef = tabRefs.current.get(activeTabId);\n\n    if (activeTabRef && headerBarRef.current) {\n      scrollIntoView(activeTabRef, headerBarRef.current, smooth);\n    }\n  };\n\n  useEffect(function () {\n    // Delay scrollIntoView as the position is depending on parent elements\n    // (effects are called inside-out in the component tree).\n    // Wait one frame to allow parents to complete it's calculation.\n    requestAnimationFrame(function () {\n      scrollIntoViewIfPossible(false);\n    }); // Non-smooth scrolling should not be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [horizontalOverflow, widthChange, tabs.length]);\n  useEffect(function () {\n    scrollIntoViewIfPossible(true); // Smooth scrolling should only be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTabId]);\n  useEffect(function () {\n    var _a, _b;\n    /*\n     When the selected tab changes and we are currently already focused on a tab,\n     move the focus to the newly selected tab.\n    */\n\n\n    if ((_a = headerBarRef.current) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n      if (document.activeElement !== activeTabHeaderRef.current) {\n        (_b = activeTabHeaderRef.current) === null || _b === void 0 ? void 0 : _b.focus({\n          preventScroll: true\n        });\n      }\n    }\n  }, [activeTabId]);\n\n  var onScroll = function () {\n    if (headerBarRef.current) {\n      setLeftOverflow(hasLeftOverflow(headerBarRef.current));\n      setRightOverflow(hasRightOverflow(headerBarRef.current));\n    }\n  };\n\n  var classes = clsx((_b = {}, _b[styles['tabs-header']] = true, _b[styles['tabs-header-with-divider']] = variant === 'default' || isVisualRefresh, _b));\n  var leftButtonClasses = clsx((_c = {}, _c[styles['pagination-button']] = true, _c[styles['pagination-button-left']] = true, _c[styles['pagination-button-left-scrollable']] = leftOverflow, _c));\n  var rightButtonClasses = clsx((_d = {}, _d[styles['pagination-button']] = true, _d[styles['pagination-button-right']] = true, _d[styles['pagination-button-right-scrollable']] = rightOverflow, _d));\n  var paginationButtonAttributes = {\n    'aria-hidden': true,\n    tabIndex: -1\n  };\n  return (//converted span to div as list should not be a child of span for HTML validation\n    React.createElement(\"div\", {\n      className: classes,\n      ref: containerRef\n    }, horizontalOverflow && React.createElement(\"span\", {\n      ref: leftOverflowButton,\n      className: leftButtonClasses\n    }, React.createElement(InternalButton, {\n      variant: \"icon\",\n      iconName: \"angle-left\",\n      __nativeAttributes: paginationButtonAttributes,\n      disabled: !leftOverflow,\n      onClick: function () {\n        return onPaginationClick(headerBarRef, -1);\n      }\n    })), React.createElement(\"ul\", {\n      role: \"tablist\",\n      className: styles['tabs-header-list'],\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledby,\n      ref: headerBarRef,\n      onScroll: onScroll\n    }, tabs.map(renderTabHeader)), horizontalOverflow && React.createElement(\"span\", {\n      className: rightButtonClasses\n    }, React.createElement(InternalButton, {\n      variant: \"icon\",\n      iconName: \"angle-right\",\n      __nativeAttributes: paginationButtonAttributes,\n      disabled: !rightOverflow,\n      onClick: function () {\n        return onPaginationClick(headerBarRef, 1);\n      }\n    })))\n  );\n\n  function renderTabHeader(tab) {\n    var _a;\n\n    var enabledTabsWithCurrentTab = tabs.filter(function (tab) {\n      return !tab.disabled || tab.id === activeTabId;\n    });\n\n    var highlightTab = function (enabledTabIndex) {\n      var tab = enabledTabsWithCurrentTab[enabledTabIndex];\n\n      if (tab.id === activeTabId) {\n        return;\n      }\n\n      onChange({\n        activeTabId: tab.id,\n        activeTabHref: tab.href\n      });\n    };\n\n    var handleKeyDown = function (event) {\n      var keyCode = event.keyCode;\n      var specialKeys = [KeyCode.right, KeyCode.left, KeyCode.end, KeyCode.home, KeyCode.pageUp, KeyCode.pageDown];\n\n      if (specialKeys.indexOf(keyCode) === -1) {\n        return;\n      }\n\n      event.preventDefault();\n      var activeIndex = enabledTabsWithCurrentTab.indexOf(tab);\n\n      switch (keyCode) {\n        case KeyCode.right:\n          if (activeIndex + 1 === enabledTabsWithCurrentTab.length) {\n            highlightTab(0);\n          } else {\n            highlightTab(activeIndex + 1);\n          }\n\n          return;\n\n        case KeyCode.left:\n          if (activeIndex === 0) {\n            highlightTab(enabledTabsWithCurrentTab.length - 1);\n          } else {\n            highlightTab(activeIndex - 1);\n          }\n\n          return;\n\n        case KeyCode.end:\n          highlightTab(enabledTabsWithCurrentTab.length - 1);\n          return;\n\n        case KeyCode.home:\n          highlightTab(0);\n          return;\n\n        case KeyCode.pageDown:\n          if (rightOverflow) {\n            onPaginationClick(headerBarRef, 1);\n          }\n\n          return;\n\n        case KeyCode.pageUp:\n          if (leftOverflow) {\n            onPaginationClick(headerBarRef, -1);\n          }\n\n          return;\n      }\n    };\n\n    var clickTab = function (event) {\n      if (tab.disabled) {\n        event.preventDefault();\n        return;\n      } // if the primary mouse button is clicked with a modifier key, the browser will handle opening a new tab\n\n\n      var specialKey = !isPlainLeftClick(event);\n\n      if (specialKey && tab.href) {\n        return;\n      }\n\n      event.preventDefault(); // for browsers that do not focus buttons on button click\n\n      if (!tab.href) {\n        var clickedTabRef = tabRefs.current.get(tab.id);\n\n        if (clickedTabRef) {\n          var childElement = clickedTabRef.firstChild;\n\n          if (childElement && childElement !== document.activeElement) {\n            childElement.focus({\n              preventScroll: true\n            });\n          }\n        }\n      }\n\n      if (tab.id === activeTabId) {\n        return;\n      }\n\n      onChange({\n        activeTabId: tab.id,\n        activeTabHref: tab.href\n      });\n    };\n\n    var classes = clsx((_a = {}, _a[styles['tabs-tab-link']] = true, _a[styles.refresh] = isVisualRefresh, _a[styles['tabs-tab-active']] = activeTabId === tab.id && !tab.disabled, _a[styles['tabs-tab-disabled']] = tab.disabled, _a));\n\n    var commonProps = __assign(__assign({\n      className: classes\n    }, focusVisible), {\n      role: 'tab',\n      'aria-selected': tab.id === activeTabId,\n      'aria-controls': \"\".concat(idNamespace, \"-\").concat(tab.id, \"-panel\"),\n      'data-testid': tab.id,\n      children: React.createElement(\"span\", {\n        className: styles['tabs-tab-label']\n      }, tab.label)\n    });\n\n    if (tab.disabled) {\n      commonProps['aria-disabled'] = 'true';\n    } else {\n      commonProps.onClick = clickTab;\n    }\n\n    if (tab.id === activeTabId) {\n      commonProps.ref = activeTabHeaderRef;\n      commonProps.tabIndex = 0;\n\n      commonProps.onKeyDown = function (event) {\n        return handleKeyDown(event);\n      };\n    } else {\n      commonProps.tabIndex = -1;\n    }\n\n    var trigger = null;\n\n    if (tab.href) {\n      var anchorProps = commonProps;\n      anchorProps.href = tab.href;\n      trigger = React.createElement(\"a\", __assign({}, anchorProps));\n    } else {\n      var buttonProps = commonProps;\n      buttonProps.type = 'button';\n\n      if (tab.disabled) {\n        buttonProps.disabled = true;\n      }\n\n      trigger = React.createElement(\"button\", __assign({}, buttonProps));\n    }\n\n    return React.createElement(\"li\", {\n      ref: function (element) {\n        return tabRefs.current.set(tab.id, element);\n      },\n      className: styles['tabs-tab'],\n      role: \"presentation\",\n      key: tab.id\n    }, trigger);\n  }\n}","map":{"version":3,"mappings":"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","names":["React","useRef","useState","useEffect","clsx","styles","InternalButton","useFocusVisible","useContainerQuery","KeyCode","onPaginationClick","hasHorizontalOverflow","hasLeftOverflow","hasRightOverflow","scrollIntoView","isPlainLeftClick","useVisualRefresh","TabHeaderBar","_a","onChange","activeTabId","tabs","variant","idNamespace","ariaLabel","ariaLabelledby","focusVisible","headerBarRef","activeTabHeaderRef","leftOverflowButton","isVisualRefresh","width","widthChange","containerRef","tabRefs","Map","horizontalOverflow","setHorizontalOverflow","leftOverflow","setLeftOverflow","rightOverflow","setRightOverflow","current","scrollIntoViewIfPossible","smooth","activeTabRef","get","requestAnimationFrame","length","contains","document","activeElement","_b","focus","preventScroll","onScroll","classes","leftButtonClasses","_c","rightButtonClasses","_d","paginationButtonAttributes","tabIndex","className","ref","iconName","__nativeAttributes","disabled","onClick","role","map","renderTabHeader","tab","enabledTabsWithCurrentTab","filter","id","highlightTab","enabledTabIndex","activeTabHref","href","handleKeyDown","event","specialKeys","right","left","end","home","pageUp","pageDown","indexOf","keyCode","preventDefault","activeIndex","clickTab","specialKey","clickedTabRef","childElement","firstChild","refresh","commonProps","concat","children","label","onKeyDown","trigger","anchorProps","buttonProps","type","set","element","key"],"sourceRoot":"","sources":["../../../src/tabs/tab-header-bar.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState, useEffect } from 'react';\nimport { TabsProps } from './interfaces';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { InternalButton } from '../button/internal';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport { KeyCode } from '../internal/keycode';\nimport {\n  onPaginationClick,\n  hasHorizontalOverflow,\n  hasLeftOverflow,\n  hasRightOverflow,\n  scrollIntoView,\n} from './scroll-utils';\nimport { isPlainLeftClick } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\n\nexport interface TabHeaderBarProps {\n  onChange: (changeDetail: TabsProps.ChangeDetail) => void;\n  activeTabId: TabsProps['activeTabId'];\n  tabs: TabsProps['tabs'];\n  variant: TabsProps['variant'];\n  idNamespace: string;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n}\n\nexport function TabHeaderBar({\n  onChange,\n  activeTabId,\n  tabs,\n  variant,\n  idNamespace,\n  ariaLabel,\n  ariaLabelledby,\n}: TabHeaderBarProps) {\n  const focusVisible = useFocusVisible();\n\n  const headerBarRef = useRef<HTMLUListElement>(null);\n  const activeTabHeaderRef = useRef<HTMLAnchorElement>(null);\n  const leftOverflowButton = useRef<HTMLElement>(null);\n\n  const isVisualRefresh = useVisualRefresh(headerBarRef);\n\n  const [widthChange, containerRef] = useContainerQuery<number>(rect => rect.width);\n  const tabRefs = useRef<Map<string, HTMLElement>>(new Map());\n  const [horizontalOverflow, setHorizontalOverflow] = useState(false);\n  const [leftOverflow, setLeftOverflow] = useState(false);\n  const [rightOverflow, setRightOverflow] = useState(false);\n\n  useEffect(() => {\n    if (headerBarRef.current) {\n      setHorizontalOverflow(hasHorizontalOverflow(headerBarRef.current, leftOverflowButton));\n      setLeftOverflow(hasLeftOverflow(headerBarRef.current));\n      setRightOverflow(hasRightOverflow(headerBarRef.current));\n    }\n  }, [widthChange, tabs]);\n\n  const scrollIntoViewIfPossible = (smooth: boolean) => {\n    if (!activeTabId) {\n      return;\n    }\n    const activeTabRef = tabRefs.current.get(activeTabId);\n    if (activeTabRef && headerBarRef.current) {\n      scrollIntoView(activeTabRef, headerBarRef.current, smooth);\n    }\n  };\n\n  useEffect(() => {\n    // Delay scrollIntoView as the position is depending on parent elements\n    // (effects are called inside-out in the component tree).\n    // Wait one frame to allow parents to complete it's calculation.\n    requestAnimationFrame(() => {\n      scrollIntoViewIfPossible(false);\n    });\n    // Non-smooth scrolling should not be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [horizontalOverflow, widthChange, tabs.length]);\n\n  useEffect(() => {\n    scrollIntoViewIfPossible(true);\n    // Smooth scrolling should only be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTabId]);\n\n  useEffect(() => {\n    /*\n     When the selected tab changes and we are currently already focused on a tab,\n     move the focus to the newly selected tab.\n    */\n    if (headerBarRef.current?.contains(document.activeElement)) {\n      if (document.activeElement !== activeTabHeaderRef.current) {\n        activeTabHeaderRef.current?.focus({ preventScroll: true });\n      }\n    }\n  }, [activeTabId]);\n\n  const onScroll = () => {\n    if (headerBarRef.current) {\n      setLeftOverflow(hasLeftOverflow(headerBarRef.current));\n      setRightOverflow(hasRightOverflow(headerBarRef.current));\n    }\n  };\n\n  const classes = clsx({\n    [styles['tabs-header']]: true,\n    [styles['tabs-header-with-divider']]: variant === 'default' || isVisualRefresh,\n  });\n\n  const leftButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-left']]: true,\n    [styles['pagination-button-left-scrollable']]: leftOverflow,\n  });\n\n  const rightButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-right']]: true,\n    [styles['pagination-button-right-scrollable']]: rightOverflow,\n  });\n\n  const paginationButtonAttributes = {\n    'aria-hidden': true,\n    tabIndex: -1,\n  };\n\n  return (\n    //converted span to div as list should not be a child of span for HTML validation\n    <div className={classes} ref={containerRef}>\n      {horizontalOverflow && (\n        <span ref={leftOverflowButton} className={leftButtonClasses}>\n          <InternalButton\n            variant=\"icon\"\n            iconName=\"angle-left\"\n            __nativeAttributes={paginationButtonAttributes}\n            disabled={!leftOverflow}\n            onClick={() => onPaginationClick(headerBarRef, -1)}\n          />\n        </span>\n      )}\n      <ul\n        role=\"tablist\"\n        className={styles['tabs-header-list']}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledby}\n        ref={headerBarRef}\n        onScroll={onScroll}\n      >\n        {tabs.map(renderTabHeader)}\n      </ul>\n      {horizontalOverflow && (\n        <span className={rightButtonClasses}>\n          <InternalButton\n            variant=\"icon\"\n            iconName=\"angle-right\"\n            __nativeAttributes={paginationButtonAttributes}\n            disabled={!rightOverflow}\n            onClick={() => onPaginationClick(headerBarRef, 1)}\n          />\n        </span>\n      )}\n    </div>\n  );\n\n  function renderTabHeader(tab: TabsProps.Tab) {\n    const enabledTabsWithCurrentTab = tabs.filter(tab => !tab.disabled || tab.id === activeTabId);\n\n    const highlightTab = function (enabledTabIndex: number) {\n      const tab = enabledTabsWithCurrentTab[enabledTabIndex];\n      if (tab.id === activeTabId) {\n        return;\n      }\n\n      onChange({ activeTabId: tab.id, activeTabHref: tab.href });\n    };\n\n    const handleKeyDown = function (\n      event: React.KeyboardEvent<HTMLAnchorElement> | React.KeyboardEvent<HTMLButtonElement>\n    ) {\n      const { keyCode } = event;\n      const specialKeys = [KeyCode.right, KeyCode.left, KeyCode.end, KeyCode.home, KeyCode.pageUp, KeyCode.pageDown];\n      if (specialKeys.indexOf(keyCode) === -1) {\n        return;\n      }\n      event.preventDefault();\n      const activeIndex = enabledTabsWithCurrentTab.indexOf(tab);\n      switch (keyCode) {\n        case KeyCode.right:\n          if (activeIndex + 1 === enabledTabsWithCurrentTab.length) {\n            highlightTab(0);\n          } else {\n            highlightTab(activeIndex + 1);\n          }\n          return;\n        case KeyCode.left:\n          if (activeIndex === 0) {\n            highlightTab(enabledTabsWithCurrentTab.length - 1);\n          } else {\n            highlightTab(activeIndex - 1);\n          }\n          return;\n        case KeyCode.end:\n          highlightTab(enabledTabsWithCurrentTab.length - 1);\n          return;\n        case KeyCode.home:\n          highlightTab(0);\n          return;\n        case KeyCode.pageDown:\n          if (rightOverflow) {\n            onPaginationClick(headerBarRef, 1);\n          }\n          return;\n        case KeyCode.pageUp:\n          if (leftOverflow) {\n            onPaginationClick(headerBarRef, -1);\n          }\n          return;\n      }\n    };\n\n    const clickTab = (event: React.MouseEvent) => {\n      if (tab.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      // if the primary mouse button is clicked with a modifier key, the browser will handle opening a new tab\n      const specialKey = !isPlainLeftClick(event);\n      if (specialKey && tab.href) {\n        return;\n      }\n\n      event.preventDefault();\n      // for browsers that do not focus buttons on button click\n      if (!tab.href) {\n        const clickedTabRef = tabRefs.current.get(tab.id);\n        if (clickedTabRef) {\n          const childElement = clickedTabRef.firstChild as HTMLButtonElement;\n          if (childElement && childElement !== document.activeElement) {\n            childElement.focus({ preventScroll: true });\n          }\n        }\n      }\n\n      if (tab.id === activeTabId) {\n        return;\n      }\n\n      onChange({ activeTabId: tab.id, activeTabHref: tab.href });\n    };\n\n    const classes = clsx({\n      [styles['tabs-tab-link']]: true,\n      [styles.refresh]: isVisualRefresh,\n      [styles['tabs-tab-active']]: activeTabId === tab.id && !tab.disabled,\n      [styles['tabs-tab-disabled']]: tab.disabled,\n    });\n\n    const commonProps: (JSX.IntrinsicElements['a'] | JSX.IntrinsicElements['button']) & { 'data-testid': string } = {\n      className: classes,\n      ...focusVisible,\n      role: 'tab',\n      'aria-selected': tab.id === activeTabId,\n      'aria-controls': `${idNamespace}-${tab.id}-panel`,\n      'data-testid': tab.id,\n      children: <span className={styles['tabs-tab-label']}>{tab.label}</span>,\n    };\n\n    if (tab.disabled) {\n      commonProps['aria-disabled'] = 'true';\n    } else {\n      commonProps.onClick = clickTab;\n    }\n\n    if (tab.id === activeTabId) {\n      commonProps.ref = activeTabHeaderRef;\n      commonProps.tabIndex = 0;\n      commonProps.onKeyDown = (\n        event: React.KeyboardEvent<HTMLAnchorElement> | React.KeyboardEvent<HTMLButtonElement>\n      ) => handleKeyDown(event);\n    } else {\n      commonProps.tabIndex = -1;\n    }\n\n    let trigger = null;\n    if (tab.href) {\n      const anchorProps = commonProps as JSX.IntrinsicElements['a'];\n      anchorProps.href = tab.href;\n      trigger = <a {...anchorProps} />;\n    } else {\n      const buttonProps = commonProps as JSX.IntrinsicElements['button'];\n      buttonProps.type = 'button';\n      if (tab.disabled) {\n        buttonProps.disabled = true;\n      }\n      trigger = <button {...buttonProps} />;\n    }\n\n    return (\n      <li\n        ref={element => tabRefs.current.set(tab.id, element as HTMLElement)}\n        className={styles['tabs-tab']}\n        role=\"presentation\"\n        key={tab.id}\n      >\n        {trigger}\n      </li>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}