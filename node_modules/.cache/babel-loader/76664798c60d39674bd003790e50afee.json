{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef } from 'react';\nimport FocusLock from 'react-focus-lock';\nimport Header from '../header';\nimport { UtilityMenuItem } from '../menu-item';\nimport styles from '../../../styles.css.js';\nimport { useUniqueId } from '../../../../internal/hooks/use-unique-id';\n\nvar UtilitiesView = function (_a) {\n  var headerText = _a.headerText,\n      dismissIconAriaLabel = _a.dismissIconAriaLabel,\n      onClose = _a.onClose,\n      _b = _a.items,\n      items = _b === void 0 ? [] : _b,\n      focusIndex = _a.focusIndex;\n  var headerId = useUniqueId('overflow-menu-header');\n  var ref = useRef(null);\n  useEffect(function () {\n    var _a; // A focus index is used to set the focus back to the submenu trigger\n    // returning from a submenu.\n\n\n    if (typeof focusIndex === 'number') {\n      (_a = ref.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [focusIndex]);\n  return React.createElement(FocusLock, {\n    returnFocus: true\n  }, React.createElement(Header, {\n    dismissIconAriaLabel: dismissIconAriaLabel,\n    onClose: onClose\n  }, React.createElement(\"span\", {\n    id: headerId\n  }, headerText)), React.createElement(\"ul\", {\n    className: styles['overflow-menu-list'],\n    \"aria-labelledby\": headerId\n  }, items.map(function (utility, index) {\n    return React.createElement(UtilityMenuItem, __assign({\n      key: index,\n      index: index,\n      ref: index === focusIndex ? ref : undefined\n    }, utility));\n  })));\n};\n\nexport default UtilitiesView;","map":{"version":3,"mappings":"kCAAA;AACA;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,eAAT,QAAgC,cAAhC;AAKA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,WAAT,QAA4B,0CAA5B;;AAOA,IAAMC,aAAa,GAAG,UAACC,EAAD,EAA0F;MAAvFC,UAAU;MAAEC,oBAAoB;MAAEC,OAAO;MAAEC;MAAAC,KAAK,mBAAG,EAAH,GAAKD;MAAEE,UAAU;EACxF,IAAMC,QAAQ,GAAGT,WAAW,CAAC,sBAAD,CAA5B;EACA,IAAMU,GAAG,GAAGf,MAAM,CAAwC,IAAxC,CAAlB;EAEAD,SAAS,CAAC;WAAA,CACR;IACA;;;IACA,IAAI,OAAOc,UAAP,KAAsB,QAA1B,EAAoC;MAClC,SAAG,CAACG,OAAJ,MAAW,IAAX,IAAWT,aAAX,GAAW,MAAX,GAAWA,GAAEU,KAAF,EAAX;IACD;EACF,CANQ,EAMN,CAACJ,UAAD,CANM,CAAT;EAQA,OACEf,oBAACG,SAAD,EAAU;IAACiB,WAAW,EAAE;EAAd,CAAV,EACEpB,oBAACI,MAAD,EAAO;IAACO,oBAAoB,EAAEA,oBAAvB;IAA6CC,OAAO,EAAEA;EAAtD,CAAP,EACEZ;IAAMqB,EAAE,EAAEL;EAAV,GAAqBN,UAArB,CADF,CADF,EAIEV;IAAIsB,SAAS,EAAEhB,MAAM,CAAC,oBAAD,CAArB;IAA2C,mBAAmBU;EAA9D,GACGF,KAAK,CAACS,GAAN,CAAU,UAACC,OAAD,EAAUC,KAAV,EAAe;IAAK,OAC7BzB,oBAACK,eAAD,EAAgBqB;MAACC,GAAG,EAAEF,KAAN;MAAaA,KAAK,EAAEA,KAApB;MAA2BR,GAAG,EAAEQ,KAAK,KAAKV,UAAV,GAAuBE,GAAvB,GAA6BW;IAA7D,GAA4EJ,OAA5E,CAAhB,CAD6B;EAE9B,CAFA,CADH,CAJF,CADF;AAYD,CAxBD;;AA0BA,eAAehB,aAAf","names":["React","useEffect","useRef","FocusLock","Header","UtilityMenuItem","styles","useUniqueId","UtilitiesView","_a","headerText","dismissIconAriaLabel","onClose","_b","items","focusIndex","headerId","ref","current","focus","returnFocus","id","className","map","utility","index","__assign","key","undefined"],"sourceRoot":"","sources":["../../../../../../src/top-navigation/parts/overflow-menu/views/utilities.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport FocusLock from 'react-focus-lock';\n\nimport Header from '../header';\nimport { UtilityMenuItem } from '../menu-item';\n\nimport { TopNavigationProps } from '../../../interfaces';\n\nimport { View } from '..';\nimport styles from '../../../styles.css.js';\nimport { useUniqueId } from '../../../../internal/hooks/use-unique-id';\n\ninterface UtilitiesViewProps extends View {\n  items: TopNavigationProps['utilities'];\n  focusIndex?: number;\n}\n\nconst UtilitiesView = ({ headerText, dismissIconAriaLabel, onClose, items = [], focusIndex }: UtilitiesViewProps) => {\n  const headerId = useUniqueId('overflow-menu-header');\n  const ref = useRef<HTMLAnchorElement & HTMLButtonElement>(null);\n\n  useEffect(() => {\n    // A focus index is used to set the focus back to the submenu trigger\n    // returning from a submenu.\n    if (typeof focusIndex === 'number') {\n      ref.current?.focus();\n    }\n  }, [focusIndex]);\n\n  return (\n    <FocusLock returnFocus={true}>\n      <Header dismissIconAriaLabel={dismissIconAriaLabel} onClose={onClose}>\n        <span id={headerId}>{headerText}</span>\n      </Header>\n      <ul className={styles['overflow-menu-list']} aria-labelledby={headerId}>\n        {items.map((utility, index) => (\n          <UtilityMenuItem key={index} index={index} ref={index === focusIndex ? ref : undefined} {...utility} />\n        ))}\n      </ul>\n    </FocusLock>\n  );\n};\n\nexport default UtilitiesView;\n"]},"metadata":{},"sourceType":"module"}