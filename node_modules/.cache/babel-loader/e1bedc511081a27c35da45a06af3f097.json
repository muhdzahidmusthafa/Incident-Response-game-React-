{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useState } from 'react';\nexport function createHighlightedOptionHook(_a) {\n  var isHighlightable = _a.isHighlightable;\n  return function useHighlightedOption(options) {\n    var _a = useState(-1),\n        highlightedIndex = _a[0],\n        setHighlightedIndex = _a[1];\n\n    var highlightedOption = options[highlightedIndex] && isHighlightable(options[highlightedIndex]) ? options[highlightedIndex] : undefined;\n\n    var moveHighlightFrom = function (direction, startIndex) {\n      if (startIndex === void 0) {\n        startIndex = highlightedIndex;\n      }\n\n      var newIndex = startIndex;\n\n      do {\n        newIndex += direction;\n      } while (options[newIndex] && !isHighlightable(options[newIndex]));\n\n      if (options[newIndex]) {\n        setHighlightedIndex(newIndex);\n      }\n    };\n\n    var moveHighlight = function (direction) {\n      return moveHighlightFrom(direction);\n    };\n\n    var highlightOption = useCallback(function (option) {\n      var index = options.indexOf(option);\n      setHighlightedIndex(index);\n    }, [options]);\n    return {\n      setHighlightedIndex: setHighlightedIndex,\n      highlightedIndex: highlightedIndex,\n      highlightedOption: highlightedOption,\n      moveHighlight: moveHighlight,\n      resetHighlight: function () {\n        return setHighlightedIndex(-1);\n      },\n      goHome: function () {\n        return moveHighlightFrom(1, -1);\n      },\n      goEnd: function () {\n        return moveHighlightFrom(-1, options.length);\n      },\n      highlightOption: highlightOption\n    };\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,OAAM,SAAUC,2BAAV,CAAkDC,EAAlD,EAIL;MAHCC,eAAe;EAIf,OAAO,SAASC,oBAAT,CAA8BC,OAA9B,EAAgE;IAC/D,SAA0CL,QAAQ,CAAC,CAAC,CAAF,CAAlD;IAAA,IAACM,gBAAgB,QAAjB;IAAA,IAAmBC,mBAAmB,QAAtC;;IACN,IAAMC,iBAAiB,GACrBH,OAAO,CAACC,gBAAD,CAAP,IAA6BH,eAAe,CAACE,OAAO,CAACC,gBAAD,CAAR,CAA5C,GAA0ED,OAAO,CAACC,gBAAD,CAAjF,GAAsGG,SADxG;;IAGA,IAAMC,iBAAiB,GAAG,UAACC,SAAD,EAAoBC,UAApB,EAAiD;MAA7B;QAAAA;MAA6B;;MACzE,IAAIC,QAAQ,GAAGD,UAAf;;MACA,GAAG;QACDC,QAAQ,IAAIF,SAAZ;MACD,CAFD,QAESN,OAAO,CAACQ,QAAD,CAAP,IAAqB,CAACV,eAAe,CAACE,OAAO,CAACQ,QAAD,CAAR,CAF9C;;MAIA,IAAIR,OAAO,CAACQ,QAAD,CAAX,EAAuB;QACrBN,mBAAmB,CAACM,QAAD,CAAnB;MACD;IACF,CATD;;IAWA,IAAMC,aAAa,GAAG,UAACH,SAAD,EAAkB;MAAK,wBAAiB,CAACA,SAAD,CAAjB;IAA4B,CAAzE;;IAEA,IAAMI,eAAe,GAAGhB,WAAW,CACjC,UAACiB,MAAD,EAAmB;MACjB,IAAMC,KAAK,GAAGZ,OAAO,CAACa,OAAR,CAAgBF,MAAhB,CAAd;MACAT,mBAAmB,CAACU,KAAD,CAAnB;IACD,CAJgC,EAKjC,CAACZ,OAAD,CALiC,CAAnC;IAQA,OAAO;MACLE,mBAAmB,qBADd;MAELD,gBAAgB,kBAFX;MAGLE,iBAAiB,mBAHZ;MAILM,aAAa,eAJR;MAKLK,cAAc,EAAE;QAAM,0BAAmB,CAAC,CAAC,CAAF,CAAnB;MAAuB,CALxC;MAMLC,MAAM,EAAE;QAAM,wBAAiB,CAAC,CAAD,EAAI,CAAC,CAAL,CAAjB;MAAwB,CANjC;MAOLC,KAAK,EAAE;QAAM,wBAAiB,CAAC,CAAC,CAAF,EAAKhB,OAAO,CAACiB,MAAb,CAAjB;MAAqC,CAP7C;MAQLP,eAAe;IARV,CAAP;EAUD,CApCD;AAqCD","names":["useCallback","useState","createHighlightedOptionHook","_a","isHighlightable","useHighlightedOption","options","highlightedIndex","setHighlightedIndex","highlightedOption","undefined","moveHighlightFrom","direction","startIndex","newIndex","moveHighlight","highlightOption","option","index","indexOf","resetHighlight","goHome","goEnd","length"],"sourceRoot":"","sources":["../../../../../../src/internal/components/options-list/utils/use-highlight-option.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useState } from 'react';\n\nexport function createHighlightedOptionHook<OptionType>({\n  isHighlightable,\n}: {\n  isHighlightable: (option: OptionType) => boolean;\n}) {\n  return function useHighlightedOption(options: ReadonlyArray<OptionType>) {\n    const [highlightedIndex, setHighlightedIndex] = useState(-1);\n    const highlightedOption =\n      options[highlightedIndex] && isHighlightable(options[highlightedIndex]) ? options[highlightedIndex] : undefined;\n\n    const moveHighlightFrom = (direction: -1 | 1, startIndex = highlightedIndex) => {\n      let newIndex = startIndex;\n      do {\n        newIndex += direction;\n      } while (options[newIndex] && !isHighlightable(options[newIndex]));\n\n      if (options[newIndex]) {\n        setHighlightedIndex(newIndex);\n      }\n    };\n\n    const moveHighlight = (direction: -1 | 1) => moveHighlightFrom(direction);\n\n    const highlightOption = useCallback(\n      (option: OptionType) => {\n        const index = options.indexOf(option);\n        setHighlightedIndex(index);\n      },\n      [options]\n    );\n\n    return {\n      setHighlightedIndex,\n      highlightedIndex,\n      highlightedOption,\n      moveHighlight,\n      resetHighlight: () => setHighlightedIndex(-1),\n      goHome: () => moveHighlightFrom(1, -1),\n      goEnd: () => moveHighlightFrom(-1, options.length),\n      highlightOption,\n    };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}