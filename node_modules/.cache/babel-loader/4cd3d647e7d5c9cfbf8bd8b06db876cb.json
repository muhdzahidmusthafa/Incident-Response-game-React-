{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport InternalBox from '../../box/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalFormField from '../../form-field/internal';\nimport InternalSelect from '../../select/internal';\nimport InternalStatusIndicator from '../../status-indicator/internal';\nimport useForwardFocus from '../../internal/hooks/forward-focus';\nimport { useVersionsFetch } from './use-versions-fetch';\nimport { validate, getErrorText } from './validation';\nimport styles from './styles.css.js';\nimport { SearchInput } from './search-input';\nexport var S3InContext = React.forwardRef(function (_a, ref) {\n  var i18nStrings = _a.i18nStrings,\n      resource = _a.resource,\n      viewHref = _a.viewHref,\n      invalid = _a.invalid,\n      inputAriaDescribedby = _a.inputAriaDescribedby,\n      selectableItemsTypes = _a.selectableItemsTypes,\n      fetchVersions = _a.fetchVersions,\n      onChange = _a.onChange,\n      onBrowse = _a.onBrowse;\n  var isInputBlurredRef = useRef(true);\n\n  var _b = useState(false),\n      isInputTouched = _b[0],\n      setInputTouched = _b[1];\n\n  var _c = useVersionsFetch(fetchVersions),\n      versions = _c.versions,\n      loading = _c.loading,\n      loadVersions = _c.loadVersions,\n      resetVersions = _c.resetVersions;\n\n  var inputRef = useRef(null);\n  useForwardFocus(ref, inputRef);\n  var uri = resource.uri;\n  var supportsVersions = selectableItemsTypes && selectableItemsTypes.indexOf('versions') > -1;\n  var selectedVersion = versions.filter(function (version) {\n    return version.value === resource.versionId;\n  })[0] || null;\n\n  function handleUriChange(event) {\n    var uri = event.detail.value;\n    var errorCode = isInputTouched ? validate(uri) : undefined;\n    resetVersions();\n    onChange({\n      uri: uri\n    }, getErrorText(i18nStrings, errorCode));\n  }\n\n  function handleUriBlur() {\n    isInputBlurredRef.current = true;\n    setInputTouched(true);\n    var errorCode = validate(resource.uri);\n    onChange(resource, getErrorText(i18nStrings, errorCode));\n\n    if (supportsVersions) {\n      loadVersions(resource.uri);\n    }\n  }\n\n  useEffect(function () {\n    var _a;\n\n    if (!isInputBlurredRef.current || !supportsVersions) {\n      return;\n    }\n\n    var cancel = ((_a = loadVersions(uri)) !== null && _a !== void 0 ? _a : {}).cancel;\n    return cancel;\n  }, [uri, supportsVersions, loadVersions]);\n  return React.createElement(\"div\", {\n    className: styles.root\n  }, React.createElement(\"div\", {\n    className: styles.layout\n  }, React.createElement(InternalFormField, {\n    className: styles['layout-uri'],\n    label: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextUriLabel,\n    stretch: true\n  }, React.createElement(SearchInput, {\n    ref: inputRef,\n    value: uri,\n    ariaDescribedby: inputAriaDescribedby,\n    placeholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextInputPlaceholder,\n    onChange: handleUriChange,\n    invalid: invalid,\n    onFocus: function () {\n      return isInputBlurredRef.current = false;\n    },\n    onBlur: handleUriBlur\n  })), supportsVersions && React.createElement(InternalFormField, {\n    className: styles['layout-version'],\n    label: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextVersionSelectLabel,\n    stretch: true\n  }, React.createElement(InternalSelect, {\n    selectedOption: selectedVersion,\n    placeholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextSelectPlaceholder,\n    disabled: versions.length === 0,\n    options: versions,\n    onChange: function (event) {\n      return onChange(__assign(__assign({}, resource), {\n        versionId: event.detail.selectedOption.value\n      }), undefined);\n    },\n    invalid: false\n  })), React.createElement(\"div\", null, React.createElement(InternalButton, {\n    className: styles['view-button'],\n    disabled: !viewHref,\n    href: viewHref,\n    target: \"_blank\",\n    iconName: \"external\",\n    iconAlign: \"right\",\n    formAction: \"none\"\n  }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextViewButton)), React.createElement(\"div\", {\n    className: styles['layout-divider']\n  }), React.createElement(\"div\", null, React.createElement(InternalButton, {\n    className: styles['browse-button'],\n    disabled: loading,\n    formAction: \"none\",\n    onClick: onBrowse\n  }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextBrowseButton))), React.createElement(\"div\", {\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }, loading && React.createElement(InternalBox, {\n    margin: {\n      top: 's'\n    }\n  }, React.createElement(InternalStatusIndicator, {\n    type: \"loading\"\n  }, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextLoadingText))));\n});","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","useRef","InternalBox","InternalButton","InternalFormField","InternalSelect","InternalStatusIndicator","useForwardFocus","useVersionsFetch","validate","getErrorText","styles","SearchInput","S3InContext","forwardRef","_a","ref","i18nStrings","resource","viewHref","invalid","inputAriaDescribedby","selectableItemsTypes","fetchVersions","onChange","onBrowse","isInputBlurredRef","isInputTouched","setInputTouched","versions","loading","loadVersions","resetVersions","inputRef","uri","supportsVersions","indexOf","selectedVersion","filter","value","versionId","handleUriChange","event","detail","errorCode","undefined","handleUriBlur","current","cancel","className","root","layout","label","inContextUriLabel","stretch","ariaDescribedby","placeholder","inContextInputPlaceholder","onFocus","onBlur","inContextVersionSelectLabel","selectedOption","inContextSelectPlaceholder","disabled","length","options","href","target","iconName","iconAlign","formAction","inContextViewButton","onClick","inContextBrowseButton","role","margin","top","type","inContextLoadingText"],"sourceRoot":"","sources":["../../../../src/s3-resource-selector/s3-in-context/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useEffect, useRef } from 'react';\nimport InternalBox from '../../box/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalFormField from '../../form-field/internal';\nimport { InputProps } from '../../input/interfaces';\nimport InternalSelect from '../../select/internal';\nimport InternalStatusIndicator from '../../status-indicator/internal';\nimport { NonCancelableCustomEvent } from '../../internal/events';\nimport useForwardFocus from '../../internal/hooks/forward-focus';\nimport { useVersionsFetch } from './use-versions-fetch';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { validate, getErrorText } from './validation';\nimport styles from './styles.css.js';\nimport { SearchInput } from './search-input';\n\ninterface S3InContextProps {\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  resource: S3ResourceSelectorProps.Resource;\n  viewHref: string | undefined;\n  invalid: boolean | undefined;\n  inputAriaDescribedby: string | undefined;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchVersions: S3ResourceSelectorProps['fetchVersions'];\n  onBrowse: () => void;\n  onChange: (newResource: S3ResourceSelectorProps.Resource, errorText: string | undefined) => void;\n}\n\nexport interface S3InContextRef {\n  focus(): void;\n}\n\nexport const S3InContext = React.forwardRef(\n  (\n    {\n      i18nStrings,\n      resource,\n      viewHref,\n      invalid,\n      inputAriaDescribedby,\n      selectableItemsTypes,\n      fetchVersions,\n      onChange,\n      onBrowse,\n    }: S3InContextProps,\n    ref: React.Ref<S3InContextRef>\n  ) => {\n    const isInputBlurredRef = useRef(true);\n    const [isInputTouched, setInputTouched] = useState(false);\n    const { versions, loading, loadVersions, resetVersions } = useVersionsFetch(fetchVersions);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useForwardFocus(ref, inputRef);\n\n    const uri = resource.uri;\n    const supportsVersions = selectableItemsTypes && selectableItemsTypes.indexOf('versions') > -1;\n    const selectedVersion = versions.filter(version => version.value === resource.versionId)[0] || null;\n\n    function handleUriChange(event: NonCancelableCustomEvent<InputProps.ChangeDetail>) {\n      const uri = event.detail.value;\n      const errorCode = isInputTouched ? validate(uri) : undefined;\n      resetVersions();\n      onChange({ uri }, getErrorText(i18nStrings, errorCode));\n    }\n\n    function handleUriBlur() {\n      isInputBlurredRef.current = true;\n      setInputTouched(true);\n      const errorCode = validate(resource.uri);\n      onChange(resource, getErrorText(i18nStrings, errorCode));\n      if (supportsVersions) {\n        loadVersions(resource.uri);\n      }\n    }\n\n    useEffect(() => {\n      if (!isInputBlurredRef.current || !supportsVersions) {\n        return;\n      }\n      const { cancel } = loadVersions(uri) ?? {};\n      return cancel;\n    }, [uri, supportsVersions, loadVersions]);\n\n    return (\n      <div className={styles.root}>\n        <div className={styles.layout}>\n          <InternalFormField className={styles['layout-uri']} label={i18nStrings?.inContextUriLabel} stretch={true}>\n            <SearchInput\n              ref={inputRef}\n              value={uri}\n              ariaDescribedby={inputAriaDescribedby}\n              placeholder={i18nStrings?.inContextInputPlaceholder}\n              onChange={handleUriChange}\n              invalid={invalid}\n              onFocus={() => (isInputBlurredRef.current = false)}\n              onBlur={handleUriBlur}\n            />\n          </InternalFormField>\n          {supportsVersions && (\n            <InternalFormField\n              className={styles['layout-version']}\n              label={i18nStrings?.inContextVersionSelectLabel}\n              stretch={true}\n            >\n              <InternalSelect\n                selectedOption={selectedVersion}\n                placeholder={i18nStrings?.inContextSelectPlaceholder}\n                disabled={versions.length === 0}\n                options={versions}\n                onChange={event => onChange({ ...resource, versionId: event.detail.selectedOption.value }, undefined)}\n                invalid={false} // invalid state should not highlight the select, only the text input\n              />\n            </InternalFormField>\n          )}\n          <div>\n            <InternalButton\n              className={styles['view-button']}\n              disabled={!viewHref}\n              href={viewHref}\n              target=\"_blank\"\n              iconName=\"external\"\n              iconAlign=\"right\"\n              formAction=\"none\"\n            >\n              {i18nStrings?.inContextViewButton}\n            </InternalButton>\n          </div>\n          <div className={styles['layout-divider']} />\n          <div>\n            <InternalButton className={styles['browse-button']} disabled={loading} formAction=\"none\" onClick={onBrowse}>\n              {i18nStrings?.inContextBrowseButton}\n            </InternalButton>\n          </div>\n        </div>\n\n        <div role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n          {loading && (\n            <InternalBox margin={{ top: 's' }}>\n              <InternalStatusIndicator type=\"loading\">{i18nStrings?.inContextLoadingText}</InternalStatusIndicator>\n            </InternalBox>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}