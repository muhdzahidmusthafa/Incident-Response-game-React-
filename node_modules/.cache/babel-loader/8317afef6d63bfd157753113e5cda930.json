{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Calendar from './calendar';\nimport { InternalButton } from '../button/internal';\nimport FocusLock from '../internal/components/focus-lock';\nimport InternalBox from '../box/internal';\nimport SpaceBetween from '../space-between/index.js';\nimport styles from './styles.css.js';\nimport RelativeRangePicker from './relative-range';\nimport ModeSwitcher from './mode-switcher';\nimport clsx from 'clsx';\nimport InternalAlert from '../alert/internal';\nimport LiveRegion from '../internal/components/live-region';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nvar VALID_RANGE = {\n  valid: true\n};\n/**\n * This function fills in a start and end time if they are missing.\n */\n\nfunction fillMissingTime(value) {\n  if (!value) {\n    return value;\n  }\n\n  var _a = value.startDate.split('T'),\n      startDate = _a[0],\n      startTime = _a[1];\n\n  var _b = value.endDate.split('T'),\n      endDate = _b[0],\n      endTime = _b[1];\n\n  return __assign(__assign({}, value), {\n    startDate: startTime ? value.startDate : \"\".concat(startDate, \"T00:00:00\"),\n    endDate: endTime ? value.endDate : \"\".concat(endDate, \"T23:59:59\")\n  });\n}\n\nfunction getDefaultMode(value, relativeOptions, rangeSelectorMode) {\n  if (value && value.type) {\n    return value.type;\n  }\n\n  if (rangeSelectorMode === 'relative-only') {\n    return 'relative';\n  }\n\n  if (rangeSelectorMode === 'absolute-only') {\n    return 'absolute';\n  }\n\n  return relativeOptions.length > 0 ? 'relative' : 'absolute';\n}\n\nexport function DateRangePickerDropdown(_a) {\n  var _b, _c;\n\n  var _d = _a.locale,\n      locale = _d === void 0 ? '' : _d,\n      startOfWeek = _a.startOfWeek,\n      isDateEnabled = _a.isDateEnabled,\n      isValidRange = _a.isValidRange,\n      value = _a.value,\n      clearValue = _a.onClear,\n      applyValue = _a.onApply,\n      onDropdownClose = _a.onDropdownClose,\n      relativeOptions = _a.relativeOptions,\n      showClearButton = _a.showClearButton,\n      isSingleGrid = _a.isSingleGrid,\n      i18nStrings = _a.i18nStrings,\n      dateOnly = _a.dateOnly,\n      timeInputFormat = _a.timeInputFormat,\n      rangeSelectorMode = _a.rangeSelectorMode,\n      ariaLabelledby = _a.ariaLabelledby,\n      ariaDescribedby = _a.ariaDescribedby;\n  var focusVisible = useFocusVisible();\n  var scrollableContainerRef = useRef(null);\n  var applyButtonRef = useRef(null);\n\n  var _e = useState(getDefaultMode(value, relativeOptions, rangeSelectorMode)),\n      rangeSelectionMode = _e[0],\n      setRangeSelectionMode = _e[1];\n\n  var _f = useState((value === null || value === void 0 ? void 0 : value.type) === 'absolute' ? value : null),\n      selectedAbsoluteRange = _f[0],\n      setSelectedAbsoluteRange = _f[1];\n\n  var _g = useState((value === null || value === void 0 ? void 0 : value.type) === 'relative' ? value : null),\n      selectedRelativeRange = _g[0],\n      setSelectedRelativeRange = _g[1];\n\n  var _h = useState(false),\n      applyClicked = _h[0],\n      setApplyClicked = _h[1];\n\n  var _j = useState(VALID_RANGE),\n      validationResult = _j[0],\n      setValidationResult = _j[1];\n\n  var closeDropdown = function () {\n    setApplyClicked(false);\n    onDropdownClose();\n  };\n\n  var onClear = function () {\n    closeDropdown();\n    clearValue();\n  };\n\n  var onApply = function () {\n    var newValue = rangeSelectionMode === 'relative' ? selectedRelativeRange : fillMissingTime(selectedAbsoluteRange);\n    var newValidationResult = applyValue(newValue);\n\n    if (newValidationResult.valid === false) {\n      setApplyClicked(true);\n      setValidationResult(newValidationResult);\n    } else {\n      setApplyClicked(false);\n      closeDropdown();\n    }\n  };\n\n  useEffect(function () {\n    if (applyClicked) {\n      var visibleRange = rangeSelectionMode === 'relative' ? selectedRelativeRange : fillMissingTime(selectedAbsoluteRange);\n      var newValidationResult = isValidRange(visibleRange);\n      setValidationResult(newValidationResult || VALID_RANGE);\n    }\n  }, [applyClicked, isValidRange, rangeSelectionMode, selectedRelativeRange, selectedAbsoluteRange]);\n  var focusRefs = {\n    \"default\": useRef(null),\n    'absolute-only': useRef(null),\n    'relative-only': useRef(null)\n  };\n  useEffect(function () {\n    var _a;\n\n    return (_a = scrollableContainerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  }, [scrollableContainerRef]);\n  return React.createElement(React.Fragment, null, React.createElement(FocusLock, {\n    autoFocus: true\n  }, React.createElement(\"div\", __assign({}, focusVisible, {\n    ref: scrollableContainerRef,\n    className: styles.dropdown,\n    tabIndex: 0,\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": i18nStrings.ariaLabel,\n    \"aria-labelledby\": ariaLabelledby !== null && ariaLabelledby !== void 0 ? ariaLabelledby : i18nStrings.ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby !== null && ariaDescribedby !== void 0 ? ariaDescribedby : i18nStrings.ariaDescribedby\n  }), React.createElement(\"div\", {\n    className: clsx(styles['dropdown-content'], (_b = {}, _b[styles['one-grid']] = isSingleGrid, _b))\n  }, React.createElement(SpaceBetween, {\n    size: \"l\"\n  }, React.createElement(InternalBox, {\n    padding: {\n      top: 'm',\n      horizontal: 'l'\n    }\n  }, React.createElement(SpaceBetween, {\n    direction: \"vertical\",\n    size: \"s\"\n  }, rangeSelectorMode === 'default' && React.createElement(ModeSwitcher, {\n    ref: focusRefs[\"default\"],\n    mode: rangeSelectionMode,\n    onChange: function (mode) {\n      setRangeSelectionMode(mode);\n      setApplyClicked(false);\n      setValidationResult(VALID_RANGE);\n    },\n    i18nStrings: i18nStrings\n  }), rangeSelectionMode === 'absolute' && React.createElement(Calendar, {\n    ref: focusRefs['absolute-only'],\n    isSingleGrid: isSingleGrid,\n    initialEndDate: selectedAbsoluteRange === null || selectedAbsoluteRange === void 0 ? void 0 : selectedAbsoluteRange.endDate,\n    initialStartDate: selectedAbsoluteRange === null || selectedAbsoluteRange === void 0 ? void 0 : selectedAbsoluteRange.startDate,\n    locale: locale,\n    startOfWeek: startOfWeek,\n    isDateEnabled: isDateEnabled,\n    i18nStrings: i18nStrings,\n    onSelectDateRange: setSelectedAbsoluteRange,\n    dateOnly: dateOnly,\n    timeInputFormat: timeInputFormat\n  }), rangeSelectionMode === 'relative' && React.createElement(RelativeRangePicker, {\n    ref: focusRefs['relative-only'],\n    isSingleGrid: isSingleGrid,\n    options: relativeOptions,\n    dateOnly: dateOnly,\n    initialSelection: selectedRelativeRange,\n    onChange: function (range) {\n      return setSelectedRelativeRange(range);\n    },\n    i18nStrings: i18nStrings\n  })), React.createElement(InternalBox, {\n    className: styles['validation-section'],\n    margin: !validationResult.valid ? {\n      top: 's'\n    } : undefined\n  }, !validationResult.valid && React.createElement(React.Fragment, null, React.createElement(InternalAlert, {\n    type: \"error\"\n  }, React.createElement(\"span\", {\n    className: styles['validation-error']\n  }, validationResult.errorMessage)), React.createElement(LiveRegion, null, validationResult.errorMessage)))), React.createElement(\"div\", {\n    className: clsx(styles.footer, (_c = {}, _c[styles['one-grid']] = isSingleGrid, _c[styles['has-clear-button']] = showClearButton, _c))\n  }, showClearButton && React.createElement(\"div\", {\n    className: styles['footer-button-wrapper']\n  }, React.createElement(InternalButton, {\n    onClick: onClear,\n    className: styles['clear-button'],\n    variant: \"link\",\n    formAction: \"none\"\n  }, i18nStrings.clearButtonLabel)), React.createElement(\"div\", {\n    className: styles['footer-button-wrapper']\n  }, React.createElement(SpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\"\n  }, React.createElement(InternalButton, {\n    onClick: closeDropdown,\n    className: styles['cancel-button'],\n    variant: \"link\",\n    formAction: \"none\"\n  }, i18nStrings.cancelButtonLabel), React.createElement(InternalButton, {\n    onClick: onApply,\n    className: styles['apply-button'],\n    ref: applyButtonRef,\n    formAction: \"none\"\n  }, i18nStrings.applyButtonLabel)))))))));\n}","map":{"version":3,"mappings":"kCAAA;AACA;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,mBAAP,MAAgC,kBAAhC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAEA,IAAMC,WAAW,GAA0C;EAAEC,KAAK,EAAE;AAAT,CAA3D;AAEA;;;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAAyE;EACvE,IAAI,CAACA,KAAL,EAAY;IACV,OAAOA,KAAP;EACD;;EACK,SAAyBA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsB,GAAtB,CAAzB;EAAA,IAACD,SAAS,QAAV;EAAA,IAAYE,SAAS,QAArB;;EACA,SAAqBH,KAAK,CAACI,OAAN,CAAcF,KAAd,CAAoB,GAApB,CAArB;EAAA,IAACE,OAAO,QAAR;EAAA,IAAUC,OAAO,QAAjB;;EACN,6BACKL,KADL,GACU;IACRC,SAAS,EAAEE,SAAS,GAAGH,KAAK,CAACC,SAAT,GAAqB,UAAGA,SAAH,EAAY,WAAZ,CADjC;IAERG,OAAO,EAAEC,OAAO,GAAGL,KAAK,CAACI,OAAT,GAAmB,UAAGA,OAAH,EAAU,WAAV;EAF3B,CADV;AAKD;;AA0BD,SAASE,cAAT,CACEN,KADF,EAEEO,eAFF,EAGEC,iBAHF,EAG2D;EAEzD,IAAIR,KAAK,IAAIA,KAAK,CAACS,IAAnB,EAAyB;IACvB,OAAOT,KAAK,CAACS,IAAb;EACD;;EACD,IAAID,iBAAiB,KAAK,eAA1B,EAA2C;IACzC,OAAO,UAAP;EACD;;EACD,IAAIA,iBAAiB,KAAK,eAA1B,EAA2C;IACzC,OAAO,UAAP;EACD;;EACD,OAAOD,eAAe,CAACG,MAAhB,GAAyB,CAAzB,GAA6B,UAA7B,GAA0C,UAAjD;AACD;;AAED,OAAM,SAAUC,uBAAV,CAAkCC,EAAlC,EAkByB;;;MAjB7BC;MAAAC,MAAM,mBAAG,EAAH,GAAKD;MACXE,WAAW;MACXC,aAAa;MACbC,YAAY;MACZjB,KAAK;MACIkB,UAAU;MACVC,UAAU;MACnBC,eAAe;MACfb,eAAe;MACfc,eAAe;MACfC,YAAY;MACZC,WAAW;MACXC,QAAQ;MACRC,eAAe;MACfjB,iBAAiB;MACjBkB,cAAc;MACdC,eAAe;EAEf,IAAMC,YAAY,GAAGhC,eAAe,EAApC;EACA,IAAMiC,sBAAsB,GAAG9C,MAAM,CAAwB,IAAxB,CAArC;EACA,IAAM+C,cAAc,GAAG/C,MAAM,CAAkB,IAAlB,CAA7B;;EAEM,SAA8CC,QAAQ,CAC1DsB,cAAc,CAACN,KAAD,EAAQO,eAAR,EAAyBC,iBAAzB,CAD4C,CAAtD;EAAA,IAACuB,kBAAkB,QAAnB;EAAA,IAAqBC,qBAAqB,QAA1C;;EAIA,SAAoDhD,QAAQ,CAChE,MAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEyB,IAAP,MAAgB,UAAhB,GAA6BT,KAA7B,GAAqC,IAD2B,CAA5D;EAAA,IAACiC,qBAAqB,QAAtB;EAAA,IAAwBC,wBAAwB,QAAhD;;EAIA,SAAoDlD,QAAQ,CAChE,MAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEyB,IAAP,MAAgB,UAAhB,GAA6BT,KAA7B,GAAqC,IAD2B,CAA5D;EAAA,IAACmC,qBAAqB,QAAtB;EAAA,IAAwBC,wBAAwB,QAAhD;;EAIA,SAAkCpD,QAAQ,CAAU,KAAV,CAA1C;EAAA,IAACqD,YAAY,QAAb;EAAA,IAAeC,eAAe,QAA9B;;EAEA,SAA0CtD,QAAQ,CAEtDa,WAFsD,CAAlD;EAAA,IAAC0C,gBAAgB,QAAjB;EAAA,IAAmBC,mBAAmB,QAAtC;;EAIN,IAAMC,aAAa,GAAG;IACpBH,eAAe,CAAC,KAAD,CAAf;IACAlB,eAAe;EAChB,CAHD;;EAKA,IAAMsB,OAAO,GAAG;IACdD,aAAa;IACbvB,UAAU;EACX,CAHD;;EAKA,IAAMyB,OAAO,GAAG;IACd,IAAMC,QAAQ,GAAGb,kBAAkB,KAAK,UAAvB,GAAoCI,qBAApC,GAA4DpC,eAAe,CAACkC,qBAAD,CAA5F;IACA,IAAMY,mBAAmB,GAAG1B,UAAU,CAACyB,QAAD,CAAtC;;IACA,IAAIC,mBAAmB,CAAC/C,KAApB,KAA8B,KAAlC,EAAyC;MACvCwC,eAAe,CAAC,IAAD,CAAf;MACAE,mBAAmB,CAACK,mBAAD,CAAnB;IACD,CAHD,MAGO;MACLP,eAAe,CAAC,KAAD,CAAf;MACAG,aAAa;IACd;EACF,CAVD;;EAYA3D,SAAS,CAAC;IACR,IAAIuD,YAAJ,EAAkB;MAChB,IAAMS,YAAY,GAChBf,kBAAkB,KAAK,UAAvB,GAAoCI,qBAApC,GAA4DpC,eAAe,CAACkC,qBAAD,CAD7E;MAGA,IAAMY,mBAAmB,GAAG5B,YAAY,CAAC6B,YAAD,CAAxC;MACAN,mBAAmB,CAACK,mBAAmB,IAAIhD,WAAxB,CAAnB;IACD;EACF,CARQ,EAQN,CAACwC,YAAD,EAAepB,YAAf,EAA6Bc,kBAA7B,EAAiDI,qBAAjD,EAAwEF,qBAAxE,CARM,CAAT;EAUA,IAAMc,SAAS,GAAG;IAChB,WAAShE,MAAM,CAAY,IAAZ,CADC;IAEhB,iBAAiBA,MAAM,CAAY,IAAZ,CAFP;IAGhB,iBAAiBA,MAAM,CAAY,IAAZ;EAHP,CAAlB;EAMAD,SAAS,CAAC;IAAA;;IAAM,mCAAsB,CAACkE,OAAvB,MAA8B,IAA9B,IAA8BpC,aAA9B,GAA8B,MAA9B,GAA8BA,GAAEqC,KAAF,EAA9B;EAAuC,CAA9C,EAAgD,CAACpB,sBAAD,CAAhD,CAAT;EAEA,OACEhD,0CACEA,oBAACM,SAAD,EAAU;IAAC+D,SAAS,EAAE;EAAZ,CAAV,EACErE,wCACM+C,YADN,EACkB;IAChBuB,GAAG,EAAEtB,sBADW;IAEhBuB,SAAS,EAAE9D,MAAM,CAAC+D,QAFF;IAGhBC,QAAQ,EAAE,CAHM;IAIhBC,IAAI,EAAC,QAJW;IAIH,cACF,MALK;IAKC,cACLhC,WAAW,CAACiC,SANR;IAMiB,mBAChB9B,cAAc,SAAd,kBAAc,WAAd,oBAAkBH,WAAW,CAACG,cAP/B;IAO6C,oBAC3CC,eAAe,SAAf,mBAAe,WAAf,qBAAmBJ,WAAW,CAACI;EARjC,CADlB,GAWE9C;IACEuE,SAAS,EAAE3D,IAAI,CAACH,MAAM,CAAC,kBAAD,CAAP,GAA2BmE,SACxCA,GAACnE,MAAM,CAAC,UAAD,CAAP,IAAsBgC,YADkB,IAA3B;EADjB,GAKEzC,oBAACQ,YAAD,EAAa;IAACqE,IAAI,EAAC;EAAN,CAAb,EACE7E,oBAACO,WAAD,EAAY;IAACuE,OAAO,EAAE;MAAEC,GAAG,EAAE,GAAP;MAAYC,UAAU,EAAE;IAAxB;EAAV,CAAZ,EACEhF,oBAACQ,YAAD,EAAa;IAACyE,SAAS,EAAC,UAAX;IAAsBJ,IAAI,EAAC;EAA3B,CAAb,EACGlD,iBAAiB,KAAK,SAAtB,IACC3B,oBAACW,YAAD,EAAa;IACX2D,GAAG,EAAEJ,SAAS,CAAC,SAAD,CADH;IAEXgB,IAAI,EAAEhC,kBAFK;IAGXiC,QAAQ,EAAE,UAACD,IAAD,EAA8B;MACtC/B,qBAAqB,CAAC+B,IAAD,CAArB;MACAzB,eAAe,CAAC,KAAD,CAAf;MACAE,mBAAmB,CAAC3C,WAAD,CAAnB;IACD,CAPU;IAQX0B,WAAW,EAAEA;EARF,CAAb,CAFJ,EAcGQ,kBAAkB,KAAK,UAAvB,IACClD,oBAACI,QAAD,EAAS;IACPkE,GAAG,EAAEJ,SAAS,CAAC,eAAD,CADP;IAEPzB,YAAY,EAAEA,YAFP;IAGP2C,cAAc,EAAEhC,qBAAqB,SAArB,yBAAqB,WAArB,GAAqB,MAArB,wBAAqB,CAAE7B,OAHhC;IAIP8D,gBAAgB,EAAEjC,qBAAqB,SAArB,yBAAqB,WAArB,GAAqB,MAArB,wBAAqB,CAAEhC,SAJlC;IAKPa,MAAM,EAAEA,MALD;IAMPC,WAAW,EAAEA,WANN;IAOPC,aAAa,EAAEA,aAPR;IAQPO,WAAW,EAAEA,WARN;IASP4C,iBAAiB,EAAEjC,wBATZ;IAUPV,QAAQ,EAAEA,QAVH;IAWPC,eAAe,EAAEA;EAXV,CAAT,CAfJ,EA8BGM,kBAAkB,KAAK,UAAvB,IACClD,oBAACU,mBAAD,EAAoB;IAClB4D,GAAG,EAAEJ,SAAS,CAAC,eAAD,CADI;IAElBzB,YAAY,EAAEA,YAFI;IAGlB8C,OAAO,EAAE7D,eAHS;IAIlBiB,QAAQ,EAAEA,QAJQ;IAKlB6C,gBAAgB,EAAElC,qBALA;IAMlB6B,QAAQ,EAAE,iBAAK;MAAI,+BAAwB,CAACM,KAAD,CAAxB;IAA+B,CANhC;IAOlB/C,WAAW,EAAEA;EAPK,CAApB,CA/BJ,CADF,EA4CE1C,oBAACO,WAAD,EAAY;IACVgE,SAAS,EAAE9D,MAAM,CAAC,oBAAD,CADP;IAEViF,MAAM,EAAE,CAAChC,gBAAgB,CAACzC,KAAlB,GAA0B;MAAE8D,GAAG,EAAE;IAAP,CAA1B,GAAyCY;EAFvC,CAAZ,EAIG,CAACjC,gBAAgB,CAACzC,KAAlB,IACCjB,0CACEA,oBAACa,aAAD,EAAc;IAACe,IAAI,EAAC;EAAN,CAAd,EACE5B;IAAMuE,SAAS,EAAE9D,MAAM,CAAC,kBAAD;EAAvB,GAA8CiD,gBAAgB,CAACkC,YAA/D,CADF,CADF,EAIE5F,oBAACc,UAAD,EAAW,IAAX,EAAa4C,gBAAgB,CAACkC,YAA9B,CAJF,CALJ,CA5CF,CADF,EA4DE5F;IACEuE,SAAS,EAAE3D,IAAI,CAACH,MAAM,CAACoF,MAAR,GAAcC,SAC3BA,GAACrF,MAAM,CAAC,UAAD,CAAP,IAAsBgC,YADK,EAE3BqD,GAACrF,MAAM,CAAC,kBAAD,CAAP,IAA8B+B,eAFH,IAAd;EADjB,GAMGA,eAAe,IACdxC;IAAKuE,SAAS,EAAE9D,MAAM,CAAC,uBAAD;EAAtB,GACET,oBAACK,cAAD,EAAe;IACb0F,OAAO,EAAElC,OADI;IAEbU,SAAS,EAAE9D,MAAM,CAAC,cAAD,CAFJ;IAGbuF,OAAO,EAAC,MAHK;IAIbC,UAAU,EAAC;EAJE,CAAf,EAMGvD,WAAW,CAACwD,gBANf,CADF,CAPJ,EAkBElG;IAAKuE,SAAS,EAAE9D,MAAM,CAAC,uBAAD;EAAtB,GACET,oBAACQ,YAAD,EAAa;IAACqE,IAAI,EAAC,IAAN;IAAWI,SAAS,EAAC;EAArB,CAAb,EACEjF,oBAACK,cAAD,EAAe;IACb0F,OAAO,EAAEnC,aADI;IAEbW,SAAS,EAAE9D,MAAM,CAAC,eAAD,CAFJ;IAGbuF,OAAO,EAAC,MAHK;IAIbC,UAAU,EAAC;EAJE,CAAf,EAMGvD,WAAW,CAACyD,iBANf,CADF,EAUEnG,oBAACK,cAAD,EAAe;IACb0F,OAAO,EAAEjC,OADI;IAEbS,SAAS,EAAE9D,MAAM,CAAC,cAAD,CAFJ;IAGb6D,GAAG,EAAErB,cAHQ;IAIbgD,UAAU,EAAC;EAJE,CAAf,EAMGvD,WAAW,CAAC0D,gBANf,CAVF,CADF,CAlBF,CA5DF,CALF,CAXF,CADF,CADF,CADF;AA6HD","names":["React","useEffect","useRef","useState","Calendar","InternalButton","FocusLock","InternalBox","SpaceBetween","styles","RelativeRangePicker","ModeSwitcher","clsx","InternalAlert","LiveRegion","useFocusVisible","VALID_RANGE","valid","fillMissingTime","value","startDate","split","startTime","endDate","endTime","getDefaultMode","relativeOptions","rangeSelectorMode","type","length","DateRangePickerDropdown","_a","_d","locale","startOfWeek","isDateEnabled","isValidRange","clearValue","applyValue","onDropdownClose","showClearButton","isSingleGrid","i18nStrings","dateOnly","timeInputFormat","ariaLabelledby","ariaDescribedby","focusVisible","scrollableContainerRef","applyButtonRef","rangeSelectionMode","setRangeSelectionMode","selectedAbsoluteRange","setSelectedAbsoluteRange","selectedRelativeRange","setSelectedRelativeRange","applyClicked","setApplyClicked","validationResult","setValidationResult","closeDropdown","onClear","onApply","newValue","newValidationResult","visibleRange","focusRefs","current","focus","autoFocus","ref","className","dropdown","tabIndex","role","ariaLabel","_b","size","padding","top","horizontal","direction","mode","onChange","initialEndDate","initialStartDate","onSelectDateRange","options","initialSelection","range","margin","undefined","errorMessage","footer","_c","onClick","variant","formAction","clearButtonLabel","cancelButtonLabel","applyButtonLabel"],"sourceRoot":"","sources":["../../../src/date-range-picker/dropdown.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport { DateRangePickerProps, Focusable } from './interfaces';\nimport Calendar from './calendar';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport FocusLock from '../internal/components/focus-lock';\nimport InternalBox from '../box/internal';\nimport SpaceBetween from '../space-between/index.js';\n\nimport styles from './styles.css.js';\nimport RelativeRangePicker from './relative-range';\nimport ModeSwitcher from './mode-switcher';\nimport clsx from 'clsx';\nimport InternalAlert from '../alert/internal';\nimport LiveRegion from '../internal/components/live-region';\nimport useFocusVisible from '../internal/hooks/focus-visible';\n\nconst VALID_RANGE: DateRangePickerProps.ValidRangeResult = { valid: true };\n\n/**\n * This function fills in a start and end time if they are missing.\n */\nfunction fillMissingTime(value: DateRangePickerProps.AbsoluteValue | null) {\n  if (!value) {\n    return value;\n  }\n  const [startDate, startTime] = value.startDate.split('T');\n  const [endDate, endTime] = value.endDate.split('T');\n  return {\n    ...value,\n    startDate: startTime ? value.startDate : `${startDate}T00:00:00`,\n    endDate: endTime ? value.endDate : `${endDate}T23:59:59`,\n  };\n}\n\nexport interface DateRangePickerDropdownProps\n  extends Pick<\n    Required<DateRangePickerProps>,\n    | 'locale'\n    | 'isDateEnabled'\n    | 'isValidRange'\n    | 'value'\n    | 'relativeOptions'\n    | 'showClearButton'\n    | 'i18nStrings'\n    | 'dateOnly'\n    | 'timeInputFormat'\n    | 'rangeSelectorMode'\n  > {\n  onClear: () => void;\n  onApply: (value: null | DateRangePickerProps.Value) => DateRangePickerProps.ValidationResult;\n  startOfWeek: number | undefined;\n  onDropdownClose: () => void;\n  isSingleGrid: boolean;\n\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n}\n\nfunction getDefaultMode(\n  value: null | DateRangePickerProps.Value,\n  relativeOptions: readonly DateRangePickerProps.RelativeOption[],\n  rangeSelectorMode: DateRangePickerProps.RangeSelectorMode\n) {\n  if (value && value.type) {\n    return value.type;\n  }\n  if (rangeSelectorMode === 'relative-only') {\n    return 'relative';\n  }\n  if (rangeSelectorMode === 'absolute-only') {\n    return 'absolute';\n  }\n  return relativeOptions.length > 0 ? 'relative' : 'absolute';\n}\n\nexport function DateRangePickerDropdown({\n  locale = '',\n  startOfWeek,\n  isDateEnabled,\n  isValidRange,\n  value,\n  onClear: clearValue,\n  onApply: applyValue,\n  onDropdownClose,\n  relativeOptions,\n  showClearButton,\n  isSingleGrid,\n  i18nStrings,\n  dateOnly,\n  timeInputFormat,\n  rangeSelectorMode,\n  ariaLabelledby,\n  ariaDescribedby,\n}: DateRangePickerDropdownProps) {\n  const focusVisible = useFocusVisible();\n  const scrollableContainerRef = useRef<HTMLDivElement | null>(null);\n  const applyButtonRef = useRef<ButtonProps.Ref>(null);\n\n  const [rangeSelectionMode, setRangeSelectionMode] = useState<'absolute' | 'relative'>(\n    getDefaultMode(value, relativeOptions, rangeSelectorMode)\n  );\n\n  const [selectedAbsoluteRange, setSelectedAbsoluteRange] = useState<DateRangePickerProps.AbsoluteValue | null>(\n    value?.type === 'absolute' ? value : null\n  );\n\n  const [selectedRelativeRange, setSelectedRelativeRange] = useState<DateRangePickerProps.RelativeValue | null>(\n    value?.type === 'relative' ? value : null\n  );\n\n  const [applyClicked, setApplyClicked] = useState<boolean>(false);\n\n  const [validationResult, setValidationResult] = useState<\n    DateRangePickerProps.ValidRangeResult | DateRangePickerProps.InvalidRangeResult\n  >(VALID_RANGE);\n\n  const closeDropdown = () => {\n    setApplyClicked(false);\n    onDropdownClose();\n  };\n\n  const onClear = () => {\n    closeDropdown();\n    clearValue();\n  };\n\n  const onApply = () => {\n    const newValue = rangeSelectionMode === 'relative' ? selectedRelativeRange : fillMissingTime(selectedAbsoluteRange);\n    const newValidationResult = applyValue(newValue);\n    if (newValidationResult.valid === false) {\n      setApplyClicked(true);\n      setValidationResult(newValidationResult);\n    } else {\n      setApplyClicked(false);\n      closeDropdown();\n    }\n  };\n\n  useEffect(() => {\n    if (applyClicked) {\n      const visibleRange =\n        rangeSelectionMode === 'relative' ? selectedRelativeRange : fillMissingTime(selectedAbsoluteRange);\n\n      const newValidationResult = isValidRange(visibleRange);\n      setValidationResult(newValidationResult || VALID_RANGE);\n    }\n  }, [applyClicked, isValidRange, rangeSelectionMode, selectedRelativeRange, selectedAbsoluteRange]);\n\n  const focusRefs = {\n    default: useRef<Focusable>(null),\n    'absolute-only': useRef<Focusable>(null),\n    'relative-only': useRef<Focusable>(null),\n  };\n\n  useEffect(() => scrollableContainerRef.current?.focus(), [scrollableContainerRef]);\n\n  return (\n    <>\n      <FocusLock autoFocus={true}>\n        <div\n          {...focusVisible}\n          ref={scrollableContainerRef}\n          className={styles.dropdown}\n          tabIndex={0}\n          role=\"dialog\"\n          aria-modal=\"true\"\n          aria-label={i18nStrings.ariaLabel}\n          aria-labelledby={ariaLabelledby ?? i18nStrings.ariaLabelledby}\n          aria-describedby={ariaDescribedby ?? i18nStrings.ariaDescribedby}\n        >\n          <div\n            className={clsx(styles['dropdown-content'], {\n              [styles['one-grid']]: isSingleGrid,\n            })}\n          >\n            <SpaceBetween size=\"l\">\n              <InternalBox padding={{ top: 'm', horizontal: 'l' }}>\n                <SpaceBetween direction=\"vertical\" size=\"s\">\n                  {rangeSelectorMode === 'default' && (\n                    <ModeSwitcher\n                      ref={focusRefs.default}\n                      mode={rangeSelectionMode}\n                      onChange={(mode: 'absolute' | 'relative') => {\n                        setRangeSelectionMode(mode);\n                        setApplyClicked(false);\n                        setValidationResult(VALID_RANGE);\n                      }}\n                      i18nStrings={i18nStrings}\n                    />\n                  )}\n\n                  {rangeSelectionMode === 'absolute' && (\n                    <Calendar\n                      ref={focusRefs['absolute-only']}\n                      isSingleGrid={isSingleGrid}\n                      initialEndDate={selectedAbsoluteRange?.endDate}\n                      initialStartDate={selectedAbsoluteRange?.startDate}\n                      locale={locale}\n                      startOfWeek={startOfWeek}\n                      isDateEnabled={isDateEnabled}\n                      i18nStrings={i18nStrings}\n                      onSelectDateRange={setSelectedAbsoluteRange}\n                      dateOnly={dateOnly}\n                      timeInputFormat={timeInputFormat}\n                    />\n                  )}\n\n                  {rangeSelectionMode === 'relative' && (\n                    <RelativeRangePicker\n                      ref={focusRefs['relative-only']}\n                      isSingleGrid={isSingleGrid}\n                      options={relativeOptions}\n                      dateOnly={dateOnly}\n                      initialSelection={selectedRelativeRange}\n                      onChange={range => setSelectedRelativeRange(range)}\n                      i18nStrings={i18nStrings}\n                    />\n                  )}\n                </SpaceBetween>\n\n                <InternalBox\n                  className={styles['validation-section']}\n                  margin={!validationResult.valid ? { top: 's' } : undefined}\n                >\n                  {!validationResult.valid && (\n                    <>\n                      <InternalAlert type=\"error\">\n                        <span className={styles['validation-error']}>{validationResult.errorMessage}</span>\n                      </InternalAlert>\n                      <LiveRegion>{validationResult.errorMessage}</LiveRegion>\n                    </>\n                  )}\n                </InternalBox>\n              </InternalBox>\n\n              <div\n                className={clsx(styles.footer, {\n                  [styles['one-grid']]: isSingleGrid,\n                  [styles['has-clear-button']]: showClearButton,\n                })}\n              >\n                {showClearButton && (\n                  <div className={styles['footer-button-wrapper']}>\n                    <InternalButton\n                      onClick={onClear}\n                      className={styles['clear-button']}\n                      variant=\"link\"\n                      formAction=\"none\"\n                    >\n                      {i18nStrings.clearButtonLabel}\n                    </InternalButton>\n                  </div>\n                )}\n                <div className={styles['footer-button-wrapper']}>\n                  <SpaceBetween size=\"xs\" direction=\"horizontal\">\n                    <InternalButton\n                      onClick={closeDropdown}\n                      className={styles['cancel-button']}\n                      variant=\"link\"\n                      formAction=\"none\"\n                    >\n                      {i18nStrings.cancelButtonLabel}\n                    </InternalButton>\n\n                    <InternalButton\n                      onClick={onApply}\n                      className={styles['apply-button']}\n                      ref={applyButtonRef}\n                      formAction=\"none\"\n                    >\n                      {i18nStrings.applyButtonLabel}\n                    </InternalButton>\n                  </SpaceBetween>\n                </div>\n              </div>\n            </SpaceBetween>\n          </div>\n        </div>\n      </FocusLock>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}