{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React, { useContext } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport TutorialList from './components/tutorial-list';\nimport TutorialDetailView from './components/tutorial-detail-view';\nimport { hotspotContext } from '../annotation-context/context';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nvar defaultFilteringFunction = function (tutorial, searchTerm) {\n  var _a;\n\n  if (searchTerm === '') {\n    return true;\n  }\n\n  return ((_a = tutorial.title) === null || _a === void 0 ? void 0 : _a.toLowerCase().indexOf(searchTerm.toLowerCase())) !== -1;\n};\n\nexport default function TutorialPanel(_a) {\n  var i18nStrings = _a.i18nStrings,\n      loading = _a.loading,\n      tutorials = _a.tutorials,\n      onFeedbackClick = _a.onFeedbackClick,\n      downloadUrl = _a.downloadUrl,\n      // Filtering is not available in the Beta release.\n  //filteringFunction: customFilteringFunction,\n  restProps = __rest(_a, [\"i18nStrings\", \"loading\", \"tutorials\", \"onFeedbackClick\", \"downloadUrl\"]);\n\n  var __internalRootRef = useBaseComponent('TutorialPanel').__internalRootRef;\n\n  var baseProps = getBaseProps(restProps);\n  var context = useContext(hotspotContext); //const filteringFunction = customFilteringFunction ?? defaultFilteringFunction;\n\n  var filteringFunction = defaultFilteringFunction;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles['tutorial-panel']),\n    ref: __internalRootRef\n  }), context.currentTutorial ? React.createElement(TutorialDetailView, {\n    i18nStrings: i18nStrings,\n    tutorial: context.currentTutorial,\n    onExitTutorial: context.onExitTutorial,\n    currentStepIndex: context.currentStepIndex,\n    onFeedbackClick: onFeedbackClick\n  }) : React.createElement(TutorialList, {\n    i18nStrings: i18nStrings,\n    tutorials: tutorials,\n    loading: loading,\n    onStartTutorial: context.onStartTutorial,\n    filteringFunction: filteringFunction,\n    downloadUrl: downloadUrl\n  })));\n}\napplyDisplayName(TutorialPanel, 'TutorialPanel');","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;;AAIA,IAAMC,wBAAwB,GAAG,UAACC,QAAD,EAAwCC,UAAxC,EAA0D;;;EACzF,IAAIA,UAAU,KAAK,EAAnB,EAAuB;IACrB,OAAO,IAAP;EACD;;EACD,OAAO,eAAQ,CAACC,KAAT,MAAc,IAAd,IAAcC,aAAd,GAAc,MAAd,GAAcA,GAAEC,WAAF,GAAgBC,OAAhB,CAAwBJ,UAAU,CAACG,WAAX,EAAxB,CAAd,MAAoE,CAAC,CAA5E;AACD,CALD;;AAOA,eAAc,SAAUE,aAAV,CAAwBH,EAAxB,EASO;EARnB,eAAW,iBAAX;EAAA,IACAI,OAAO,aADP;EAAA,IAEAC,SAAS,eAFT;EAAA,IAGAC,eAAe,qBAHf;EAAA,IAIAC,WAAW,iBAJX;EAAA,IAKA;EACA;EACGC,SAAS,cARwB,yEAQxB,CAPZ;;EASQ,qBAAiB,GAAKb,gBAAgB,CAAC,eAAD,CAAhB,CAAiCc,iBAAvD;;EAER,IAAMC,SAAS,GAAGrB,YAAY,CAACmB,SAAD,CAA9B;EACA,IAAMG,OAAO,GAAGvB,UAAU,CAACK,cAAD,CAA1B,CAJmB,CAMnB;;EACA,IAAMmB,iBAAiB,GAAGhB,wBAA1B;EAEA,OACET,0CACEA,wCAASuB,SAAT,EAAkB;IAAEG,SAAS,EAAE3B,IAAI,CAACwB,SAAS,CAACG,SAAX,EAAsBvB,MAAM,CAAC,gBAAD,CAA5B,CAAjB;IAAkEwB,GAAG,EAAEL;EAAvE,CAAlB,GACGE,OAAO,CAACI,eAAR,GACC5B,oBAACK,kBAAD,EAAmB;IACjBwB,WAAW,EAAEA,WADI;IAEjBnB,QAAQ,EAAEc,OAAO,CAACI,eAFD;IAGjBE,cAAc,EAAEN,OAAO,CAACM,cAHP;IAIjBC,gBAAgB,EAAEP,OAAO,CAACO,gBAJT;IAKjBZ,eAAe,EAAEA;EALA,CAAnB,CADD,GASCnB,oBAACI,YAAD,EAAa;IACXyB,WAAW,EAAEA,WADF;IAEXX,SAAS,EAAEA,SAFA;IAGXD,OAAO,EAAEA,OAHE;IAIXe,eAAe,EAAER,OAAO,CAACQ,eAJd;IAKXP,iBAAiB,EAAEA,iBALR;IAMXL,WAAW,EAAEA;EANF,CAAb,CAVJ,CADF,CADF;AAwBD;AAEDb,gBAAgB,CAACS,aAAD,EAAgB,eAAhB,CAAhB","names":["clsx","React","useContext","getBaseProps","styles","TutorialList","TutorialDetailView","hotspotContext","applyDisplayName","useBaseComponent","defaultFilteringFunction","tutorial","searchTerm","title","_a","toLowerCase","indexOf","TutorialPanel","loading","tutorials","onFeedbackClick","downloadUrl","restProps","__internalRootRef","baseProps","context","filteringFunction","className","ref","currentTutorial","i18nStrings","onExitTutorial","currentStepIndex","onStartTutorial"],"sourceRoot":"","sources":["../../../src/tutorial-panel/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useContext } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\n\nimport { TutorialPanelProps } from './interfaces';\nimport TutorialList from './components/tutorial-list';\nimport TutorialDetailView from './components/tutorial-detail-view';\nimport { hotspotContext } from '../annotation-context/context';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { TutorialPanelProps };\n\nconst defaultFilteringFunction = (tutorial: TutorialPanelProps.Tutorial, searchTerm: string) => {\n  if (searchTerm === '') {\n    return true;\n  }\n  return tutorial.title?.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1;\n};\n\nexport default function TutorialPanel({\n  i18nStrings,\n  loading,\n  tutorials,\n  onFeedbackClick,\n  downloadUrl,\n  // Filtering is not available in the Beta release.\n  //filteringFunction: customFilteringFunction,\n  ...restProps\n}: TutorialPanelProps) {\n  const { __internalRootRef } = useBaseComponent('TutorialPanel');\n\n  const baseProps = getBaseProps(restProps);\n  const context = useContext(hotspotContext);\n\n  //const filteringFunction = customFilteringFunction ?? defaultFilteringFunction;\n  const filteringFunction = defaultFilteringFunction;\n\n  return (\n    <>\n      <div {...baseProps} className={clsx(baseProps.className, styles['tutorial-panel'])} ref={__internalRootRef}>\n        {context.currentTutorial ? (\n          <TutorialDetailView\n            i18nStrings={i18nStrings}\n            tutorial={context.currentTutorial}\n            onExitTutorial={context.onExitTutorial}\n            currentStepIndex={context.currentStepIndex}\n            onFeedbackClick={onFeedbackClick}\n          />\n        ) : (\n          <TutorialList\n            i18nStrings={i18nStrings}\n            tutorials={tutorials}\n            loading={loading}\n            onStartTutorial={context.onStartTutorial}\n            filteringFunction={filteringFunction}\n            downloadUrl={downloadUrl}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\napplyDisplayName(TutorialPanel, 'TutorialPanel');\n"]},"metadata":{},"sourceType":"module"}