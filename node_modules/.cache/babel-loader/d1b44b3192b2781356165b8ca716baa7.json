{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport InternalIcon from '../icon/internal';\nimport styles from './styles.css.js';\nimport { fireNonCancelableEvent, fireKeyboardEvent, getBlurEventRelatedTarget } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport { useSearchProps, convertAutoComplete } from './utils';\nimport { useDebounceCallback } from '../internal/hooks/use-debounce-callback';\n\nvar iconClassName = function (position, hasHandler) {\n  var _a;\n\n  return clsx(styles['input-icon'], styles[\"input-icon-\".concat(position)], (_a = {}, _a[styles['input-icon-hoverable']] = hasHandler, _a));\n};\n\nvar preventMouseDown = function (e) {\n  return e.preventDefault();\n};\n\nfunction InternalInput(_a, ref) {\n  var _b;\n\n  var _c = _a.type,\n      type = _c === void 0 ? 'text' : _c,\n      step = _a.step,\n      inputMode = _a.inputMode,\n      _d = _a.autoComplete,\n      autoComplete = _d === void 0 ? true : _d,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby,\n      ariaDescribedby = _a.ariaDescribedby,\n      name = _a.name,\n      value = _a.value,\n      controlId = _a.controlId,\n      placeholder = _a.placeholder,\n      autoFocus = _a.autoFocus,\n      disabled = _a.disabled,\n      readOnly = _a.readOnly,\n      disableBrowserAutocorrect = _a.disableBrowserAutocorrect,\n      __noBorderRadius = _a.__noBorderRadius,\n      __leftIcon = _a.__leftIcon,\n      _e = _a.__leftIconVariant,\n      __leftIconVariant = _e === void 0 ? 'subtle' : _e,\n      __onLeftIconClick = _a.__onLeftIconClick,\n      invalid = _a.invalid,\n      ariaRequired = _a.ariaRequired,\n      __rightIcon = _a.__rightIcon,\n      _f = _a.__rightIconVariant,\n      __rightIconVariant = _f === void 0 ? 'normal' : _f,\n      __onRightIconClick = _a.__onRightIconClick,\n      onKeyDown = _a.onKeyDown,\n      onKeyUp = _a.onKeyUp,\n      onChange = _a.onChange,\n      __onDelayedInput = _a.__onDelayedInput,\n      __onBlurWithDetail = _a.__onBlurWithDetail,\n      onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      __nativeAttributes = _a.__nativeAttributes,\n      __internalRootRef = _a.__internalRootRef,\n      rest = __rest(_a, [\"type\", \"step\", \"inputMode\", \"autoComplete\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescribedby\", \"name\", \"value\", \"controlId\", \"placeholder\", \"autoFocus\", \"disabled\", \"readOnly\", \"disableBrowserAutocorrect\", \"__noBorderRadius\", \"__leftIcon\", \"__leftIconVariant\", \"__onLeftIconClick\", \"invalid\", \"ariaRequired\", \"__rightIcon\", \"__rightIconVariant\", \"__onRightIconClick\", \"onKeyDown\", \"onKeyUp\", \"onChange\", \"__onDelayedInput\", \"__onBlurWithDetail\", \"onBlur\", \"onFocus\", \"__nativeAttributes\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(rest);\n  var fireDelayedInput = useDebounceCallback(function (value) {\n    return fireNonCancelableEvent(__onDelayedInput, {\n      value: value\n    });\n  });\n\n  var handleChange = function (value) {\n    fireDelayedInput(value);\n    fireNonCancelableEvent(onChange, {\n      value: value\n    });\n  };\n\n  var inputRef = useRef(null);\n  var searchProps = useSearchProps(type, disabled, readOnly, value, inputRef, handleChange);\n  __leftIcon = __leftIcon !== null && __leftIcon !== void 0 ? __leftIcon : searchProps.__leftIcon;\n  __rightIcon = __rightIcon !== null && __rightIcon !== void 0 ? __rightIcon : searchProps.__rightIcon;\n  __onRightIconClick = __onRightIconClick !== null && __onRightIconClick !== void 0 ? __onRightIconClick : searchProps.__onRightIconClick;\n\n  var attributes = __assign({\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    name: name,\n    placeholder: placeholder,\n    autoFocus: autoFocus,\n    id: controlId,\n    className: clsx(styles.input, type && styles[\"input-type-\".concat(type)], __rightIcon && styles['input-has-icon-right'], __leftIcon && styles['input-has-icon-left'], __noBorderRadius && styles['input-has-no-border-radius'], (_b = {}, _b[styles['input-readonly']] = readOnly, _b[styles['input-invalid']] = invalid, _b)),\n    autoComplete: convertAutoComplete(autoComplete),\n    disabled: disabled,\n    readOnly: readOnly,\n    type: type,\n    step: step,\n    inputMode: inputMode,\n    onKeyDown: onKeyDown && function (event) {\n      return fireKeyboardEvent(onKeyDown, event);\n    },\n    onKeyUp: onKeyUp && function (event) {\n      return fireKeyboardEvent(onKeyUp, event);\n    },\n    // We set a default value on the component in order to force it into the controlled mode.\n    value: value !== null && value !== void 0 ? value : '',\n    onChange: onChange && function (event) {\n      return handleChange(event.target.value);\n    },\n    onBlur: function (e) {\n      onBlur && fireNonCancelableEvent(onBlur);\n      __onBlurWithDetail && fireNonCancelableEvent(__onBlurWithDetail, {\n        relatedTarget: getBlurEventRelatedTarget(e.nativeEvent)\n      });\n    },\n    onFocus: onFocus && function () {\n      return fireNonCancelableEvent(onFocus);\n    }\n  }, __nativeAttributes);\n\n  if (disableBrowserAutocorrect) {\n    attributes.autoCorrect = 'off';\n    attributes.autoCapitalize = 'off';\n  } // ensure aria properties are string literal \"true\"\n\n\n  if (ariaRequired) {\n    attributes['aria-required'] = 'true';\n  }\n\n  if (invalid) {\n    attributes['aria-invalid'] = 'true';\n  }\n\n  var mergedRef = useMergeRefs(ref, inputRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles['input-container']),\n    ref: __internalRootRef\n  }), __leftIcon && React.createElement(\"span\", {\n    onClick: __onLeftIconClick,\n    className: iconClassName('left', !!__onLeftIconClick)\n  }, React.createElement(InternalIcon, {\n    name: __leftIcon,\n    variant: disabled ? 'disabled' : __leftIconVariant\n  })), React.createElement(\"input\", __assign({\n    ref: mergedRef\n  }, attributes)), __rightIcon && React.createElement(\"span\", {\n    onClick: __onRightIconClick,\n    onMouseDown: preventMouseDown,\n    className: iconClassName('right', !!__onRightIconClick)\n  }, React.createElement(InternalIcon, {\n    name: __rightIcon,\n    variant: disabled ? 'disabled' : __rightIconVariant\n  })));\n}\n\nexport default React.forwardRef(InternalInput);","map":{"version":3,"mappings":"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","names":["React","useRef","clsx","useMergeRefs","InternalIcon","styles","fireNonCancelableEvent","fireKeyboardEvent","getBlurEventRelatedTarget","getBaseProps","useSearchProps","convertAutoComplete","useDebounceCallback","iconClassName","position","hasHandler","_a","preventMouseDown","preventDefault","InternalInput","ref","_c","step","inputMode","_d","autoComplete","ariaLabel","ariaLabelledby","ariaDescribedby","name","value","controlId","placeholder","autoFocus","disabled","readOnly","disableBrowserAutocorrect","__noBorderRadius","__leftIcon","_e","__leftIconVariant","__onLeftIconClick","invalid","ariaRequired","__rightIcon","_f","__rightIconVariant","__onRightIconClick","onKeyDown","onKeyUp","onChange","__onDelayedInput","__onBlurWithDetail","onBlur","onFocus","__nativeAttributes","__internalRootRef","rest","baseProps","fireDelayedInput","handleChange","inputRef","searchProps","type","attributes","id","className","input","_b","event","target","relatedTarget","e","nativeEvent","autoCorrect","autoCapitalize","mergedRef","onClick","variant","onMouseDown","forwardRef"],"sourceRoot":"","sources":["../../../src/input/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { MouseEventHandler, Ref, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { IconProps } from '../icon/interfaces';\nimport InternalIcon from '../icon/internal';\nimport styles from './styles.css.js';\nimport {\n  fireNonCancelableEvent,\n  fireKeyboardEvent,\n  NonCancelableEventHandler,\n  getBlurEventRelatedTarget,\n} from '../internal/events';\nimport { InputProps, BaseInputProps, BaseChangeDetail } from './interfaces';\nimport { BaseComponentProps, getBaseProps } from '../internal/base-component';\nimport { useSearchProps, convertAutoComplete } from './utils';\nimport { useDebounceCallback } from '../internal/hooks/use-debounce-callback';\nimport { FormFieldValidationControlProps } from '../internal/context/form-field-context';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\n\nexport interface InternalInputProps\n  extends BaseComponentProps,\n    BaseInputProps,\n    InputProps,\n    FormFieldValidationControlProps,\n    InternalBaseComponentProps {\n  __leftIcon?: IconProps['name'];\n  __leftIconVariant?: IconProps['variant'];\n  __onLeftIconClick?: () => void;\n\n  __rightIcon?: IconProps['name'];\n  __rightIconVariant?: IconProps['variant'];\n  __onRightIconClick?: () => void;\n\n  __nativeAttributes?: Record<string, any>;\n  __noBorderRadius?: boolean;\n\n  __onDelayedInput?: NonCancelableEventHandler<BaseChangeDetail>;\n  __onBlurWithDetail?: NonCancelableEventHandler<{ relatedTarget: Node | null }>;\n}\n\nconst iconClassName = (position: string, hasHandler: boolean) =>\n  clsx(styles['input-icon'], styles[`input-icon-${position}`], { [styles['input-icon-hoverable']]: hasHandler });\nconst preventMouseDown: MouseEventHandler = e => e.preventDefault();\n\nfunction InternalInput(\n  {\n    type = 'text',\n    step,\n    inputMode,\n    autoComplete = true,\n    ariaLabel,\n    ariaLabelledby,\n    ariaDescribedby,\n    name,\n    value,\n    controlId,\n    placeholder,\n    autoFocus,\n    disabled,\n    readOnly,\n    disableBrowserAutocorrect,\n    __noBorderRadius,\n\n    __leftIcon,\n    __leftIconVariant = 'subtle',\n    __onLeftIconClick,\n\n    invalid,\n    ariaRequired,\n\n    __rightIcon,\n    __rightIconVariant = 'normal',\n    __onRightIconClick,\n\n    onKeyDown,\n    onKeyUp,\n    onChange,\n    __onDelayedInput,\n    __onBlurWithDetail,\n    onBlur,\n    onFocus,\n    __nativeAttributes,\n    __internalRootRef,\n    ...rest\n  }: InternalInputProps,\n  ref: Ref<HTMLInputElement>\n) {\n  const baseProps = getBaseProps(rest);\n  const fireDelayedInput = useDebounceCallback((value: string) => fireNonCancelableEvent(__onDelayedInput, { value }));\n\n  const handleChange = (value: string) => {\n    fireDelayedInput(value);\n    fireNonCancelableEvent(onChange, { value });\n  };\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const searchProps = useSearchProps(type, disabled, readOnly, value, inputRef, handleChange);\n  __leftIcon = __leftIcon ?? searchProps.__leftIcon;\n  __rightIcon = __rightIcon ?? searchProps.__rightIcon;\n  __onRightIconClick = __onRightIconClick ?? searchProps.__onRightIconClick;\n\n  const attributes: React.InputHTMLAttributes<HTMLInputElement> = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    name,\n    placeholder,\n    autoFocus,\n    id: controlId,\n    className: clsx(\n      styles.input,\n      type && styles[`input-type-${type}`],\n      __rightIcon && styles['input-has-icon-right'],\n      __leftIcon && styles['input-has-icon-left'],\n      __noBorderRadius && styles['input-has-no-border-radius'],\n      {\n        [styles['input-readonly']]: readOnly,\n        [styles['input-invalid']]: invalid,\n      }\n    ),\n    autoComplete: convertAutoComplete(autoComplete),\n    disabled,\n    readOnly,\n    type,\n    step,\n    inputMode,\n    onKeyDown: onKeyDown && (event => fireKeyboardEvent(onKeyDown, event)),\n    onKeyUp: onKeyUp && (event => fireKeyboardEvent(onKeyUp, event)),\n    // We set a default value on the component in order to force it into the controlled mode.\n    value: value ?? '',\n    onChange: onChange && (event => handleChange(event.target.value)),\n    onBlur: e => {\n      onBlur && fireNonCancelableEvent(onBlur);\n      __onBlurWithDetail &&\n        fireNonCancelableEvent(__onBlurWithDetail, { relatedTarget: getBlurEventRelatedTarget(e.nativeEvent) });\n    },\n    onFocus: onFocus && (() => fireNonCancelableEvent(onFocus)),\n    ...__nativeAttributes,\n  };\n\n  if (disableBrowserAutocorrect) {\n    attributes.autoCorrect = 'off';\n    attributes.autoCapitalize = 'off';\n  }\n\n  // ensure aria properties are string literal \"true\"\n  if (ariaRequired) {\n    attributes['aria-required'] = 'true';\n  }\n  if (invalid) {\n    attributes['aria-invalid'] = 'true';\n  }\n\n  const mergedRef = useMergeRefs(ref, inputRef);\n\n  return (\n    <div {...baseProps} className={clsx(baseProps.className, styles['input-container'])} ref={__internalRootRef}>\n      {__leftIcon && (\n        <span onClick={__onLeftIconClick} className={iconClassName('left', !!__onLeftIconClick)}>\n          <InternalIcon name={__leftIcon} variant={disabled ? 'disabled' : __leftIconVariant} />\n        </span>\n      )}\n      <input ref={mergedRef} {...attributes} />\n      {__rightIcon && (\n        <span\n          onClick={__onRightIconClick}\n          onMouseDown={preventMouseDown}\n          className={iconClassName('right', !!__onRightIconClick)}\n        >\n          <InternalIcon name={__rightIcon} variant={disabled ? 'disabled' : __rightIconVariant} />\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default React.forwardRef(InternalInput);\n"]},"metadata":{},"sourceType":"module"}