{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef, memo, useState } from 'react';\nimport LiveRegion from '../live-region';\nimport InternalBox from '../../../box/internal';\nimport { KeyCode } from '../../keycode';\nimport SeriesMarker from '../chart-series-marker';\nimport styles from './styles.css.js';\nexport default memo(ChartLegend);\n\nfunction ChartLegend(_a) {\n  var series = _a.series,\n      onHighlightChange = _a.onHighlightChange,\n      highlightedSeries = _a.highlightedSeries,\n      legendTitle = _a.legendTitle,\n      ariaLabel = _a.ariaLabel,\n      plotContainerRef = _a.plotContainerRef;\n\n  var _b = useState(false),\n      isFocused = _b[0],\n      setIsFocused = _b[1];\n\n  var containerRef = useRef(null);\n\n  var highlightLeft = function () {\n    var currentIndex = findSeriesIndex(series, highlightedSeries) || 0;\n    var nextIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : series.length - 1;\n    onHighlightChange(series[nextIndex].datum);\n  };\n\n  var highlightRight = function () {\n    var currentIndex = findSeriesIndex(series, highlightedSeries) || 0;\n    var nextIndex = currentIndex + 1 < series.length ? currentIndex + 1 : 0;\n    onHighlightChange(series[nextIndex].datum);\n  };\n\n  var handleKeyPress = function (event) {\n    if (event.keyCode === KeyCode.right || event.keyCode === KeyCode.left) {\n      // Preventing default fixes an issue in Safari+VO when VO additionally interprets arrow keys as its commands.\n      event.preventDefault();\n\n      switch (event.keyCode) {\n        case KeyCode.left:\n          return highlightLeft();\n\n        case KeyCode.right:\n          return highlightRight();\n\n        default:\n          return;\n      }\n    }\n  };\n\n  var handleFocus = function () {\n    setIsFocused(true);\n    onHighlightChange(highlightedSeries || series[0].datum);\n  };\n\n  var handleBlur = function (event) {\n    var _a;\n\n    setIsFocused(false); // We need to check if the next element to be focused inside the plot container or not\n    // so we don't clear the selected legend in case we are still focusing elements ( legend elements )\n    // inside the plot container\n\n    if (event.relatedTarget === null || !(event.relatedTarget instanceof Element) || containerRef.current && !containerRef.current.contains(event.relatedTarget) && !((_a = plotContainerRef === null || plotContainerRef === void 0 ? void 0 : plotContainerRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.relatedTarget))) {\n      onHighlightChange(null);\n    }\n  };\n\n  var handleMouseOver = function (s) {\n    if (s !== highlightedSeries) {\n      onHighlightChange(s);\n    }\n  };\n\n  var handleMouseLeave = function () {\n    onHighlightChange(null);\n  };\n\n  var highlightedSeriesLabel = findSeriesLabel(series, highlightedSeries);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    tabIndex: 0,\n    className: styles.root,\n    ref: containerRef,\n    role: \"application\",\n    \"aria-label\": legendTitle || ariaLabel,\n    onKeyDown: handleKeyPress,\n    onFocus: handleFocus,\n    onBlur: handleBlur\n  }, legendTitle && React.createElement(InternalBox, {\n    fontWeight: \"bold\",\n    className: styles.title\n  }, legendTitle), React.createElement(\"ul\", {\n    className: styles.list\n  }, series.map(function (s, index) {\n    var _a;\n\n    var someHighlighted = highlightedSeries !== null;\n    var isHighlighted = highlightedSeries === s.datum;\n    var isDimmed = someHighlighted && !isHighlighted;\n    return React.createElement(\"li\", {\n      key: index,\n      onMouseOver: handleMouseOver.bind(null, s.datum),\n      onMouseLeave: handleMouseLeave,\n      className: clsx(styles.marker, (_a = {}, _a[styles['marker--dimmed']] = isDimmed, _a[styles['marker--highlighted']] = isHighlighted, _a[styles['marker--focused']] = isHighlighted && isFocused, _a)),\n      \"aria-disabled\": isDimmed ? true : undefined\n    }, React.createElement(SeriesMarker, {\n      color: s.color,\n      type: s.type\n    }), \" \", s.label);\n  }))), React.createElement(LiveRegion, null, isFocused ? highlightedSeriesLabel : null));\n}\n\nfunction findSeriesIndex(series, targetSeries) {\n  for (var index = 0; index < series.length; index++) {\n    if (series[index].datum === targetSeries) {\n      return index;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findSeriesLabel(series, targetSeries) {\n  for (var _i = 0, series_1 = series; _i < series_1.length; _i++) {\n    var s = series_1[_i];\n\n    if (s.datum === targetSeries) {\n      return s.label;\n    }\n  }\n\n  return null;\n}","map":{"version":3,"mappings":"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","names":["clsx","React","useRef","memo","useState","LiveRegion","InternalBox","KeyCode","SeriesMarker","styles","ChartLegend","_a","series","onHighlightChange","highlightedSeries","legendTitle","ariaLabel","plotContainerRef","isFocused","setIsFocused","containerRef","highlightLeft","currentIndex","findSeriesIndex","nextIndex","length","datum","highlightRight","handleKeyPress","event","keyCode","right","left","preventDefault","handleFocus","handleBlur","relatedTarget","Element","current","contains","handleMouseOver","s","handleMouseLeave","highlightedSeriesLabel","findSeriesLabel","tabIndex","className","root","ref","role","onKeyDown","onFocus","onBlur","fontWeight","title","list","map","index","someHighlighted","isHighlighted","isDimmed","key","onMouseOver","bind","onMouseLeave","marker","undefined","color","type","label","targetSeries","_i"],"sourceRoot":"","sources":["../../../../../src/internal/components/chart-legend/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef, memo, useState } from 'react';\n\nimport LiveRegion from '../live-region';\nimport InternalBox from '../../../box/internal';\nimport { KeyCode } from '../../keycode';\nimport SeriesMarker, { ChartSeriesMarkerType } from '../chart-series-marker';\nimport styles from './styles.css.js';\n\nexport interface ChartLegendItem<T> {\n  label: string;\n  color: string;\n  type: ChartSeriesMarkerType;\n  datum: T;\n}\n\nexport interface ChartLegendProps<T> {\n  series: ReadonlyArray<ChartLegendItem<T>>;\n  highlightedSeries: T | null;\n  legendTitle?: string;\n  ariaLabel?: string;\n  plotContainerRef?: React.RefObject<HTMLDivElement>;\n  onHighlightChange: (series: T | null) => void;\n}\n\nexport default memo(ChartLegend) as typeof ChartLegend;\n\nfunction ChartLegend<T>({\n  series,\n  onHighlightChange,\n  highlightedSeries,\n  legendTitle,\n  ariaLabel,\n  plotContainerRef,\n}: ChartLegendProps<T>) {\n  const [isFocused, setIsFocused] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const highlightLeft = () => {\n    const currentIndex = findSeriesIndex(series, highlightedSeries) || 0;\n    const nextIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : series.length - 1;\n    onHighlightChange(series[nextIndex].datum);\n  };\n\n  const highlightRight = () => {\n    const currentIndex = findSeriesIndex(series, highlightedSeries) || 0;\n    const nextIndex = currentIndex + 1 < series.length ? currentIndex + 1 : 0;\n    onHighlightChange(series[nextIndex].datum);\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.keyCode === KeyCode.right || event.keyCode === KeyCode.left) {\n      // Preventing default fixes an issue in Safari+VO when VO additionally interprets arrow keys as its commands.\n      event.preventDefault();\n\n      switch (event.keyCode) {\n        case KeyCode.left:\n          return highlightLeft();\n\n        case KeyCode.right:\n          return highlightRight();\n\n        default:\n          return;\n      }\n    }\n  };\n\n  const handleFocus = () => {\n    setIsFocused(true);\n    onHighlightChange(highlightedSeries || series[0].datum);\n  };\n\n  const handleBlur = (event: React.FocusEvent<Element>) => {\n    setIsFocused(false);\n\n    // We need to check if the next element to be focused inside the plot container or not\n    // so we don't clear the selected legend in case we are still focusing elements ( legend elements )\n    // inside the plot container\n    if (\n      event.relatedTarget === null ||\n      !(event.relatedTarget instanceof Element) ||\n      (containerRef.current &&\n        !containerRef.current.contains(event.relatedTarget) &&\n        !plotContainerRef?.current?.contains(event.relatedTarget))\n    ) {\n      onHighlightChange(null);\n    }\n  };\n\n  const handleMouseOver = (s: T) => {\n    if (s !== highlightedSeries) {\n      onHighlightChange(s);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    onHighlightChange(null);\n  };\n\n  const highlightedSeriesLabel = findSeriesLabel(series, highlightedSeries);\n\n  return (\n    <>\n      <div\n        tabIndex={0}\n        className={styles.root}\n        ref={containerRef}\n        role=\"application\"\n        aria-label={legendTitle || ariaLabel}\n        onKeyDown={handleKeyPress}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n      >\n        {legendTitle && (\n          <InternalBox fontWeight=\"bold\" className={styles.title}>\n            {legendTitle}\n          </InternalBox>\n        )}\n\n        <ul className={styles.list}>\n          {series.map((s, index) => {\n            const someHighlighted = highlightedSeries !== null;\n            const isHighlighted = highlightedSeries === s.datum;\n            const isDimmed = someHighlighted && !isHighlighted;\n            return (\n              <li\n                key={index}\n                onMouseOver={handleMouseOver.bind(null, s.datum)}\n                onMouseLeave={handleMouseLeave}\n                className={clsx(styles.marker, {\n                  [styles['marker--dimmed']]: isDimmed,\n                  [styles['marker--highlighted']]: isHighlighted,\n                  [styles['marker--focused']]: isHighlighted && isFocused,\n                })}\n                aria-disabled={isDimmed ? true : undefined}\n              >\n                <SeriesMarker color={s.color} type={s.type} /> {s.label}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <LiveRegion>{isFocused ? highlightedSeriesLabel : null}</LiveRegion>\n    </>\n  );\n}\n\nfunction findSeriesIndex<T>(series: ReadonlyArray<ChartLegendItem<T>>, targetSeries: null | T): undefined | number {\n  for (let index = 0; index < series.length; index++) {\n    if (series[index].datum === targetSeries) {\n      return index;\n    }\n  }\n  return undefined;\n}\n\nfunction findSeriesLabel<T>(series: ReadonlyArray<ChartLegendItem<T>>, targetSeries: null | T): null | string {\n  for (const s of series) {\n    if (s.datum === targetSeries) {\n      return s.label;\n    }\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}