{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalRadioGroup from '../radio-group/internal';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport styles from './styles.css.js';\nexport var copyPreferences = function (_a) {\n  var pageSize = _a.pageSize,\n      wrapLines = _a.wrapLines,\n      visibleContent = _a.visibleContent,\n      custom = _a.custom;\n  return {\n    pageSize: pageSize,\n    wrapLines: wrapLines,\n    visibleContent: visibleContent,\n    custom: custom\n  };\n};\nexport var mergePreferences = function (newPref, oldPref) {\n  return {\n    pageSize: newPref.pageSize !== undefined ? newPref.pageSize : oldPref.pageSize,\n    wrapLines: newPref.wrapLines !== undefined ? newPref.wrapLines : oldPref.wrapLines,\n    visibleContent: newPref.visibleContent !== undefined ? newPref.visibleContent : oldPref.visibleContent,\n    custom: newPref.custom !== undefined ? newPref.custom : oldPref.custom\n  };\n};\nexport var ModalContentLayout = function (_a) {\n  var left = _a.left,\n      right = _a.right;\n\n  var _b = useContainerBreakpoints(['xs']),\n      breakpoint = _b[0],\n      ref = _b[1];\n\n  var smallContainer = breakpoint === 'default';\n\n  if (smallContainer) {\n    return React.createElement(\"div\", {\n      ref: ref\n    }, React.createElement(\"div\", null, left), right && React.createElement(\"div\", {\n      className: styles['second-column-small']\n    }, right));\n  }\n\n  var columns = right ? 2 : 1;\n  return React.createElement(\"div\", {\n    ref: ref\n  }, React.createElement(InternalColumnLayout, {\n    columns: columns,\n    variant: \"text-grid\"\n  }, React.createElement(\"div\", null, left), right && React.createElement(\"div\", null, right)));\n};\nexport var PageSizePreference = function (_a) {\n  var title = _a.title,\n      options = _a.options,\n      value = _a.value,\n      onChange = _a.onChange;\n  return React.createElement(\"div\", {\n    className: styles['page-size']\n  }, React.createElement(InternalFormField, {\n    label: title,\n    stretch: true,\n    className: styles['page-size-form-field']\n  }, React.createElement(InternalRadioGroup, {\n    className: styles['page-size-radio-group'],\n    value: \"\".concat(value),\n    items: options.map(function (_a) {\n      var label = _a.label,\n          value = _a.value;\n      return {\n        label: label,\n        value: \"\".concat(value)\n      };\n    }),\n    onChange: function (_a) {\n      var detail = _a.detail;\n      return onChange(parseInt(detail.value, 10));\n    }\n  })));\n};\nexport var WrapLinesPreference = function (_a) {\n  var label = _a.label,\n      description = _a.description,\n      value = _a.value,\n      onChange = _a.onChange;\n  return React.createElement(InternalCheckbox, {\n    checked: !!value,\n    description: description,\n    onChange: function (_a) {\n      var detail = _a.detail;\n      return onChange(detail.checked);\n    },\n    className: styles['wrap-lines']\n  }, label);\n};\nexport var CustomPreference = function (_a) {\n  var value = _a.value,\n      customPreference = _a.customPreference,\n      onChange = _a.onChange;\n\n  var _b = useState(value),\n      customState = _b[0],\n      setCustomState = _b[1];\n\n  if (customPreference) {\n    return React.createElement(\"div\", {\n      className: styles.custom\n    }, customPreference(customState, function (value) {\n      // prevent value to be treated as a functional callback\n      setCustomState(function () {\n        return value;\n      });\n      onChange(value);\n    }));\n  }\n\n  return null;\n};","map":{"version":3,"mappings":"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","names":["React","useState","InternalCheckbox","InternalColumnLayout","InternalFormField","InternalRadioGroup","useContainerBreakpoints","styles","copyPreferences","_a","pageSize","wrapLines","visibleContent","custom","mergePreferences","newPref","oldPref","undefined","ModalContentLayout","left","right","breakpoint","ref","smallContainer","className","columns","variant","PageSizePreference","title","options","value","onChange","label","stretch","items","map","detail","parseInt","WrapLinesPreference","description","checked","CustomPreference","customPreference","customState","setCustomState"],"sourceRoot":"","sources":["../../../src/collection-preferences/utils.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalRadioGroup from '../radio-group/internal';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { CollectionPreferencesProps } from './interfaces';\nimport styles from './styles.css.js';\n\nexport const copyPreferences = ({\n  pageSize,\n  wrapLines,\n  visibleContent,\n  custom,\n}: CollectionPreferencesProps.Preferences): CollectionPreferencesProps.Preferences => ({\n  pageSize,\n  wrapLines,\n  visibleContent,\n  custom,\n});\n\nexport const mergePreferences = (\n  newPref: CollectionPreferencesProps.Preferences,\n  oldPref: CollectionPreferencesProps.Preferences\n): CollectionPreferencesProps.Preferences => ({\n  pageSize: newPref.pageSize !== undefined ? newPref.pageSize : oldPref.pageSize,\n  wrapLines: newPref.wrapLines !== undefined ? newPref.wrapLines : oldPref.wrapLines,\n  visibleContent: newPref.visibleContent !== undefined ? newPref.visibleContent : oldPref.visibleContent,\n  custom: newPref.custom !== undefined ? newPref.custom : oldPref.custom,\n});\n\ninterface ModalContentLayoutProps {\n  left: React.ReactNode;\n  right: React.ReactNode;\n}\n\nexport const ModalContentLayout = ({ left, right }: ModalContentLayoutProps) => {\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const smallContainer = breakpoint === 'default';\n\n  if (smallContainer) {\n    return (\n      <div ref={ref}>\n        <div>{left}</div>\n        {right && <div className={styles['second-column-small']}>{right}</div>}\n      </div>\n    );\n  }\n\n  const columns = right ? 2 : 1;\n  return (\n    <div ref={ref}>\n      <InternalColumnLayout columns={columns} variant=\"text-grid\">\n        <div>{left}</div>\n        {right && <div>{right}</div>}\n      </InternalColumnLayout>\n    </div>\n  );\n};\n\ninterface PageSizePreferenceProps extends CollectionPreferencesProps.PageSizePreference {\n  onChange: (value: number) => void;\n  value?: number;\n}\n\nexport const PageSizePreference = ({ title, options, value, onChange }: PageSizePreferenceProps) => (\n  <div className={styles['page-size']}>\n    <InternalFormField label={title} stretch={true} className={styles['page-size-form-field']}>\n      <InternalRadioGroup\n        className={styles['page-size-radio-group']}\n        value={`${value}`}\n        items={options.map(({ label, value }) => ({ label, value: `${value}` }))}\n        onChange={({ detail }) => onChange(parseInt(detail.value, 10))}\n      />\n    </InternalFormField>\n  </div>\n);\n\ninterface WrapLinesPreferenceProps extends CollectionPreferencesProps.WrapLinesPreference {\n  onChange: (value: boolean) => void;\n  value?: boolean;\n}\n\nexport const WrapLinesPreference = ({ label, description, value, onChange }: WrapLinesPreferenceProps) => (\n  <InternalCheckbox\n    checked={!!value}\n    description={description}\n    onChange={({ detail }) => onChange(detail.checked)}\n    className={styles['wrap-lines']}\n  >\n    {label}\n  </InternalCheckbox>\n);\n\ninterface CustomPreferenceProps<T = any> extends Pick<CollectionPreferencesProps<T>, 'customPreference'> {\n  onChange: (value: T) => void;\n  value: T;\n}\nexport const CustomPreference = ({ value, customPreference, onChange }: CustomPreferenceProps) => {\n  const [customState, setCustomState] = useState(value);\n  if (customPreference) {\n    return (\n      <div className={styles.custom}>\n        {customPreference(customState, value => {\n          // prevent value to be treated as a functional callback\n          setCustomState(() => value);\n          onChange(value);\n        })}\n      </div>\n    );\n  }\n  return null;\n};\n"]},"metadata":{},"sourceType":"module"}