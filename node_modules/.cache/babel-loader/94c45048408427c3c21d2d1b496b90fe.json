{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport RadioButton from './radio-button';\nimport styles from './styles.css.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nexport default function InternalRadioGroup(_a) {\n  var name = _a.name,\n      value = _a.value,\n      items = _a.items,\n      ariaLabel = _a.ariaLabel,\n      ariaRequired = _a.ariaRequired,\n      onChange = _a.onChange,\n      _b = _a.__internalRootRef,\n      __internalRootRef = _b === void 0 ? null : _b,\n      props = __rest(_a, [\"name\", \"value\", \"items\", \"ariaLabel\", \"ariaRequired\", \"onChange\", \"__internalRootRef\"]);\n\n  var _c = useFormFieldContext(props),\n      ariaDescribedby = _c.ariaDescribedby,\n      ariaLabelledby = _c.ariaLabelledby;\n\n  var baseProps = getBaseProps(props);\n  var generatedName = useUniqueId('awsui-radio-');\n  return React.createElement(\"div\", __assign({\n    role: \"radiogroup\",\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-label\": ariaLabel,\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-required\": ariaRequired\n  }, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), items && items.map(function (item) {\n    return React.createElement(RadioButton, {\n      key: item.value,\n      checked: item.value === value,\n      name: name || generatedName,\n      value: item.value,\n      label: item.label,\n      description: item.description,\n      disabled: item.disabled,\n      onChange: onChange,\n      controlId: item.controlId\n    });\n  }));\n}","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,mBAAT,QAAoC,wCAApC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAKA,eAAc,SAAUC,kBAAV,CAA6BC,EAA7B,EASY;EARxB,QAAI,UAAJ;EAAA,IACAC,KAAK,WADL;EAAA,IAEAC,KAAK,WAFL;EAAA,IAGAC,SAAS,eAHT;EAAA,IAIAC,YAAY,kBAJZ;EAAA,IAKAC,QAAQ,cALR;EAAA,IAMAC,yBANA;EAAA,IAMAC,iBAAiB,mBAAG,IAAH,GAAOD,EANxB;EAAA,IAOGE,KAAK,cARiC,wFAQjC,CAPR;;EASM,SAAsCX,mBAAmB,CAACW,KAAD,CAAzD;EAAA,IAAEC,eAAe,qBAAjB;EAAA,IAAmBC,cAAc,oBAAjC;;EACN,IAAMC,SAAS,GAAGjB,YAAY,CAACc,KAAD,CAA9B;EACA,IAAMI,aAAa,GAAGd,WAAW,CAAC,cAAD,CAAjC;EACA,OACEL;IACEoB,IAAI,EAAC,YADP;IACmB,mBACAH,cAFnB;IAEiC,cACnBP,SAHd;IAGuB,oBACHM,eAJpB;IAImC,iBAClBL;EALjB,GAMMO,SANN,EAMe;IACbG,SAAS,EAAEtB,IAAI,CAACmB,SAAS,CAACG,SAAX,EAAsBlB,MAAM,CAACmB,IAA7B,CADF;IAEbC,GAAG,EAAET;EAFQ,CANf,GAUGL,KAAK,IACJA,KAAK,CAACe,GAAN,CAAU,gBAAI;IAAI,OAChBxB,oBAACE,WAAD,EAAY;MACVuB,GAAG,EAAEC,IAAI,CAAClB,KADA;MAEVmB,OAAO,EAAED,IAAI,CAAClB,KAAL,KAAeA,KAFd;MAGVoB,IAAI,EAAEA,IAAI,IAAIT,aAHJ;MAIVX,KAAK,EAAEkB,IAAI,CAAClB,KAJF;MAKVqB,KAAK,EAAEH,IAAI,CAACG,KALF;MAMVC,WAAW,EAAEJ,IAAI,CAACI,WANR;MAOVC,QAAQ,EAAEL,IAAI,CAACK,QAPL;MAQVnB,QAAQ,EAAEA,QARA;MASVoB,SAAS,EAAEN,IAAI,CAACM;IATN,CAAZ,CADgB;EAYjB,CAZD,CAXJ,CADF;AA2BD","names":["clsx","React","getBaseProps","RadioButton","styles","useFormFieldContext","useUniqueId","InternalRadioGroup","_a","value","items","ariaLabel","ariaRequired","onChange","_b","__internalRootRef","props","ariaDescribedby","ariaLabelledby","baseProps","generatedName","role","className","root","ref","map","key","item","checked","name","label","description","disabled","controlId"],"sourceRoot":"","sources":["../../../src/radio-group/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { RadioGroupProps } from './interfaces';\nimport RadioButton from './radio-button';\nimport styles from './styles.css.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\n\ntype InternalRadioGroupProps = RadioGroupProps & InternalBaseComponentProps;\n\nexport default function InternalRadioGroup({\n  name,\n  value,\n  items,\n  ariaLabel,\n  ariaRequired,\n  onChange,\n  __internalRootRef = null,\n  ...props\n}: InternalRadioGroupProps) {\n  const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(props);\n  const baseProps = getBaseProps(props);\n  const generatedName = useUniqueId('awsui-radio-');\n  return (\n    <div\n      role=\"radiogroup\"\n      aria-labelledby={ariaLabelledby}\n      aria-label={ariaLabel}\n      aria-describedby={ariaDescribedby}\n      aria-required={ariaRequired}\n      {...baseProps}\n      className={clsx(baseProps.className, styles.root)}\n      ref={__internalRootRef}\n    >\n      {items &&\n        items.map(item => (\n          <RadioButton\n            key={item.value}\n            checked={item.value === value}\n            name={name || generatedName}\n            value={item.value}\n            label={item.label}\n            description={item.description}\n            disabled={item.disabled}\n            onChange={onChange}\n            controlId={item.controlId}\n          />\n        ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}