{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalSelect from '../select/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalSegmentedControlComponent from './internal-segmented-control';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nexport default function InternalSegmentedControl(_a) {\n  var selectedId = _a.selectedId,\n      options = _a.options,\n      label = _a.label,\n      ariaLabelledby = _a.ariaLabelledby,\n      onChange = _a.onChange,\n      _b = _a.__internalRootRef,\n      __internalRootRef = _b === void 0 ? null : _b,\n      props = __rest(_a, [\"selectedId\", \"options\", \"label\", \"ariaLabelledby\", \"onChange\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(props);\n  var selectOptions = (options || []).map(function (option) {\n    var label = option.text || option.iconAlt;\n    return __assign(__assign({}, option), {\n      label: label,\n      value: option.id\n    });\n  });\n  var selectedOptions = selectOptions.filter(function (option) {\n    return option.value === selectedId;\n  });\n  var currentSelectedOption = selectedOptions.length ? selectedOptions[0] : null;\n  var selectProps = {\n    options: selectOptions,\n    selectedOption: currentSelectedOption,\n    triggerVariant: 'option',\n    onChange: function (event) {\n      return fireNonCancelableEvent(onChange, {\n        selectedId: event.detail.selectedOption.value\n      });\n    }\n  };\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), React.createElement(InternalSegmentedControlComponent, {\n    selectedId: selectedId,\n    options: options,\n    label: label,\n    ariaLabelledby: ariaLabelledby,\n    onChange: onChange\n  }), React.createElement(\"div\", {\n    className: styles.select\n  }, ariaLabelledby && React.createElement(InternalSelect, __assign({}, selectProps, {\n    ariaLabelledby: ariaLabelledby\n  })), !ariaLabelledby && label && React.createElement(InternalFormField, {\n    label: label,\n    stretch: true\n  }, React.createElement(InternalSelect, __assign({}, selectProps))), !ariaLabelledby && !label && React.createElement(InternalSelect, __assign({}, selectProps))));\n}","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAAoD,oBAApD;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AAEA,OAAOC,iCAAP,MAA8C,8BAA9C;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAKA,eAAc,SAAUC,wBAAV,CAAmCC,EAAnC,EAQkB;EAP9B,cAAU,gBAAV;EAAA,IACAC,OAAO,aADP;EAAA,IAEAC,KAAK,WAFL;EAAA,IAGAC,cAAc,oBAHd;EAAA,IAIAC,QAAQ,cAJR;EAAA,IAKAC,yBALA;EAAA,IAKAC,iBAAiB,mBAAG,IAAH,GAAOD,EALxB;EAAA,IAMGE,KAAK,cAPuC,qFAOvC,CANR;;EAQA,IAAMC,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;EAEA,IAAME,aAAa,GAAG,CAACR,OAAO,IAAI,EAAZ,EAAgBS,GAAhB,CAAoB,kBAAM;IAC9C,IAAMR,KAAK,GAAGS,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACE,OAApC;IACA,6BAAYF,MAAZ,GAAkB;MAAET,KAAK,OAAP;MAASY,KAAK,EAAEH,MAAM,CAACI;IAAvB,CAAlB;EACD,CAHqB,CAAtB;EAKA,IAAMC,eAAe,GAAGP,aAAa,CAACQ,MAAd,CAAqB,kBAAM;IACjD,OAAON,MAAM,CAACG,KAAP,KAAiBI,UAAxB;EACD,CAFuB,CAAxB;EAGA,IAAMC,qBAAqB,GAAGH,eAAe,CAACI,MAAhB,GAAyBJ,eAAe,CAAC,CAAD,CAAxC,GAA8C,IAA5E;EAEA,IAAMK,WAAW,GAAwB;IACvCpB,OAAO,EAAEQ,aAD8B;IAEvCa,cAAc,EAAEH,qBAFuB;IAGvCI,cAAc,EAAE,QAHuB;IAIvCnB,QAAQ,EAAE,iBAAK;MAAI,6BAAsB,CAACA,QAAD,EAAW;QAAEc,UAAU,EAAEM,KAAK,CAACC,MAAN,CAAaH,cAAb,CAA4BR;MAA1C,CAAX,CAAtB;IAAoF;EAJhE,CAAzC;EAOA,OACEvB,wCAASiB,SAAT,EAAkB;IAAEkB,SAAS,EAAElC,IAAI,CAACgB,SAAS,CAACkB,SAAX,EAAsB5B,MAAM,CAAC6B,IAA7B,CAAjB;IAAqDC,GAAG,EAAEtB;EAA1D,CAAlB,GACEf,oBAACI,iCAAD,EAAkC;IAChCuB,UAAU,EAAEA,UADoB;IAEhCjB,OAAO,EAAEA,OAFuB;IAGhCC,KAAK,EAAEA,KAHyB;IAIhCC,cAAc,EAAEA,cAJgB;IAKhCC,QAAQ,EAAEA;EALsB,CAAlC,CADF,EAQEb;IAAKmC,SAAS,EAAE5B,MAAM,CAAC+B;EAAvB,GACG1B,cAAc,IAAIZ,oBAACE,cAAD,EAAeqC,aAAKT,WAAL,EAAgB;IAAElB,cAAc,EAAEA;EAAlB,CAAhB,CAAf,CADrB,EAEG,CAACA,cAAD,IAAmBD,KAAnB,IACCX,oBAACG,iBAAD,EAAkB;IAACQ,KAAK,EAAEA,KAAR;IAAe6B,OAAO,EAAE;EAAxB,CAAlB,EACExC,oBAACE,cAAD,EAAeqC,aAAKT,WAAL,CAAf,CADF,CAHJ,EAOG,CAAClB,cAAD,IAAmB,CAACD,KAApB,IAA6BX,oBAACE,cAAD,EAAeqC,aAAKT,WAAL,CAAf,CAPhC,CARF,CADF;AAoBD","names":["React","clsx","InternalSelect","InternalFormField","InternalSegmentedControlComponent","getBaseProps","fireNonCancelableEvent","styles","InternalSegmentedControl","_a","options","label","ariaLabelledby","onChange","_b","__internalRootRef","props","baseProps","selectOptions","map","option","text","iconAlt","value","id","selectedOptions","filter","selectedId","currentSelectedOption","length","selectProps","selectedOption","triggerVariant","event","detail","className","root","ref","select","__assign","stretch"],"sourceRoot":"","sources":["../../../src/segmented-control/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalSelect, { InternalSelectProps } from '../select/internal';\nimport InternalFormField from '../form-field/internal';\nimport { SegmentedControlProps } from './interfaces';\nimport InternalSegmentedControlComponent from './internal-segmented-control';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\n\ntype InternalSegmentedControlProps = SegmentedControlProps & InternalBaseComponentProps;\n\nexport default function InternalSegmentedControl({\n  selectedId,\n  options,\n  label,\n  ariaLabelledby,\n  onChange,\n  __internalRootRef = null,\n  ...props\n}: InternalSegmentedControlProps) {\n  const baseProps = getBaseProps(props);\n\n  const selectOptions = (options || []).map(option => {\n    const label = option.text || option.iconAlt;\n    return { ...option, label, value: option.id };\n  });\n\n  const selectedOptions = selectOptions.filter(option => {\n    return option.value === selectedId;\n  });\n  const currentSelectedOption = selectedOptions.length ? selectedOptions[0] : null;\n\n  const selectProps: InternalSelectProps = {\n    options: selectOptions,\n    selectedOption: currentSelectedOption,\n    triggerVariant: 'option',\n    onChange: event => fireNonCancelableEvent(onChange, { selectedId: event.detail.selectedOption.value! }),\n  };\n\n  return (\n    <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={__internalRootRef}>\n      <InternalSegmentedControlComponent\n        selectedId={selectedId}\n        options={options}\n        label={label}\n        ariaLabelledby={ariaLabelledby}\n        onChange={onChange}\n      />\n      <div className={styles.select}>\n        {ariaLabelledby && <InternalSelect {...selectProps} ariaLabelledby={ariaLabelledby} />}\n        {!ariaLabelledby && label && (\n          <InternalFormField label={label} stretch={true}>\n            <InternalSelect {...selectProps} />\n          </InternalFormField>\n        )}\n        {!ariaLabelledby && !label && <InternalSelect {...selectProps} />}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}