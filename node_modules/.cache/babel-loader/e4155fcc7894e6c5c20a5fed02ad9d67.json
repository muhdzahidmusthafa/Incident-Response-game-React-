{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getOverflowParents, getOverflowParentDimensions } from '../../utils/scrollable-containers';\nimport styles from './styles.css.js';\nvar AVAILABLE_SPACE_RESERVE_DEFAULT = 50;\nvar AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL = 19; // 50 - 31\n\nvar AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL = 20;\n\nvar getClosestParentDimensions = function (element) {\n  var parents = getOverflowParents(element).map(function (el) {\n    var _a = el.getBoundingClientRect(),\n        height = _a.height,\n        width = _a.width,\n        top = _a.top,\n        left = _a.left;\n\n    return {\n      height: height,\n      width: width,\n      top: top,\n      left: left\n    };\n  });\n  return parents.shift();\n};\n\nexport var getAvailableSpace = function (trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile) {\n  if (stretchWidth === void 0) {\n    stretchWidth = false;\n  }\n\n  if (stretchHeight === void 0) {\n    stretchHeight = false;\n  }\n\n  var availableSpaceReserveVertical = stretchHeight ? 0 : isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  var availableSpaceReserveHorizontal = stretchWidth ? 0 : isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n\n  var _a = trigger.getBoundingClientRect(),\n      triggerBottom = _a.bottom,\n      triggerLeft = _a.left,\n      triggerRight = _a.right;\n\n  return overflowParents.reduce(function (_a, overflowParent) {\n    var above = _a.above,\n        below = _a.below,\n        left = _a.left,\n        right = _a.right;\n    var offsetTop = triggerBottom - overflowParent.top;\n    var currentAbove = offsetTop - trigger.offsetHeight - availableSpaceReserveVertical;\n    var currentBelow = overflowParent.height - offsetTop - availableSpaceReserveVertical;\n    var currentLeft = triggerRight - overflowParent.left - availableSpaceReserveHorizontal;\n    var currentRight = overflowParent.left + overflowParent.width - triggerLeft - availableSpaceReserveHorizontal;\n    return {\n      above: Math.min(above, currentAbove),\n      below: Math.min(below, currentBelow),\n      left: Math.min(left, currentLeft),\n      right: Math.min(right, currentRight)\n    };\n  }, {\n    above: Number.MAX_VALUE,\n    below: Number.MAX_VALUE,\n    left: Number.MAX_VALUE,\n    right: Number.MAX_VALUE\n  });\n};\nexport var getInteriorAvailableSpace = function (trigger, dropdown, overflowParents, isMobile) {\n  var AVAILABLE_SPACE_RESERVE_VERTICAL = isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  var AVAILABLE_SPACE_RESERVE_HORIZONTAL = isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL : AVAILABLE_SPACE_RESERVE_DEFAULT;\n\n  var _a = trigger.getBoundingClientRect(),\n      triggerBottom = _a.bottom,\n      triggerTop = _a.top,\n      triggerLeft = _a.left,\n      triggerRight = _a.right;\n\n  return overflowParents.reduce(function (_a, overflowParent) {\n    var above = _a.above,\n        below = _a.below,\n        left = _a.left,\n        right = _a.right;\n    var currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n    var currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n    var currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n    var currentRight = overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n    return {\n      above: Math.min(above, currentAbove),\n      below: Math.min(below, currentBelow),\n      left: Math.min(left, currentLeft),\n      right: Math.min(right, currentRight)\n    };\n  }, {\n    above: Number.MAX_VALUE,\n    below: Number.MAX_VALUE,\n    left: Number.MAX_VALUE,\n    right: Number.MAX_VALUE\n  });\n};\nexport var getDropdownPosition = function (trigger, dropdown, overflowParents, minWidth, preferCenter, stretchWidth, stretchHeight, isMobile) {\n  if (preferCenter === void 0) {\n    preferCenter = false;\n  }\n\n  if (stretchWidth === void 0) {\n    stretchWidth = false;\n  }\n\n  if (stretchHeight === void 0) {\n    stretchHeight = false;\n  }\n\n  var availableSpace = getAvailableSpace(trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile);\n  var triggerWidth = trigger.getBoundingClientRect().width;\n  minWidth = minWidth ? Math.min(triggerWidth, minWidth) : triggerWidth;\n  var requiredWidth = dropdown.getBoundingClientRect().width; // dropdown should not be smaller than the trigger\n\n  var idealWidth = Math.max(requiredWidth, minWidth);\n  var dropLeft;\n  var left = null;\n  var width = idealWidth; //1. Can it be positioned with ideal width to the right?\n\n  if (idealWidth <= availableSpace.right) {\n    dropLeft = false; //2. Can it be positioned with ideal width to the left?\n  } else if (idealWidth <= availableSpace.left) {\n    dropLeft = true; //3. Fit into biggest available space either on left or right\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right, minWidth);\n  }\n\n  if (preferCenter) {\n    var spillOver = (idealWidth - triggerWidth) / 2; // availableSpace always includes the trigger width, but we want to exclude that\n\n    var availableOutsideLeft = availableSpace.left - triggerWidth;\n    var availableOutsideRight = availableSpace.right - triggerWidth;\n    var fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;\n\n    if (fitsInCenter) {\n      left = -spillOver;\n    }\n  }\n\n  var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  var availableHeight = dropUp ? availableSpace.above : availableSpace.below; // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n\n  var croppedHeight = stretchHeight ? availableHeight : Math.floor(availableHeight / 31) * 31 + 16;\n  return {\n    dropUp: dropUp,\n    dropLeft: dropLeft,\n    left: left === null ? 'auto' : \"\".concat(left, \"px\"),\n    height: \"\".concat(croppedHeight, \"px\"),\n    width: \"\".concat(width, \"px\")\n  };\n};\nexport var getInteriorDropdownPosition = function (trigger, dropdown, overflowParents, isMobile) {\n  var availableSpace = getInteriorAvailableSpace(trigger, dropdown, overflowParents, isMobile);\n\n  var _a = trigger.getBoundingClientRect(),\n      triggerBottom = _a.bottom,\n      triggerTop = _a.top,\n      triggerWidth = _a.width;\n\n  var _b = getClosestParentDimensions(trigger),\n      parentDropdownTop = _b.top,\n      parentDropdownHeight = _b.height;\n\n  var dropLeft;\n  var width = dropdown.getBoundingClientRect().width;\n  var top = triggerTop - parentDropdownTop;\n\n  if (width <= availableSpace.right) {\n    dropLeft = false;\n  } else if (width <= availableSpace.left) {\n    dropLeft = true;\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right);\n  }\n\n  var left = dropLeft ? 0 - width : triggerWidth;\n  var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  var bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;\n  var availableHeight = dropUp ? availableSpace.above : availableSpace.below; // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n\n  var croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;\n  return {\n    dropUp: dropUp,\n    dropLeft: dropLeft,\n    height: \"\".concat(croppedHeight, \"px\"),\n    width: \"\".concat(width, \"px\"),\n    top: \"\".concat(top, \"px\"),\n    bottom: \"\".concat(bottom, \"px\"),\n    left: \"\".concat(left, \"px\")\n  };\n};\nexport var calculatePosition = function (dropdownElement, triggerElement, verticalContainerElement, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth) {\n  // cleaning previously assigned values,\n  // so that they are not reused in case of screen resize and similar events\n  verticalContainerElement.style.maxHeight = '';\n  dropdownElement.style.width = '';\n  dropdownElement.style.top = '';\n  dropdownElement.style.bottom = '';\n  dropdownElement.style.left = '';\n  dropdownElement.classList.remove(styles['dropdown-drop-left']);\n  dropdownElement.classList.remove(styles['dropdown-drop-right']);\n  dropdownElement.classList.remove(styles['dropdown-drop-up']);\n  var overflowParents = getOverflowParentDimensions(dropdownElement, interior, expandToViewport, stretchHeight);\n  var position = interior ? getInteriorDropdownPosition(triggerElement, dropdownElement, overflowParents, isMobile) : getDropdownPosition(triggerElement, dropdownElement, overflowParents, minWidth, preferCenter, stretchWidth, stretchHeight, isMobile);\n  var triggerBox = triggerElement.getBoundingClientRect();\n  return [position, triggerBox];\n};","map":{"version":3,"mappings":"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","names":["getOverflowParents","getOverflowParentDimensions","styles","AVAILABLE_SPACE_RESERVE_DEFAULT","AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL","AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL","getClosestParentDimensions","element","parents","map","el","getBoundingClientRect","height","width","top","left","shift","getAvailableSpace","trigger","dropdown","overflowParents","stretchWidth","stretchHeight","isMobile","availableSpaceReserveVertical","availableSpaceReserveHorizontal","triggerBottom","triggerLeft","triggerRight","reduce","_a","overflowParent","above","below","right","offsetTop","currentAbove","offsetHeight","currentBelow","currentLeft","currentRight","Math","min","Number","MAX_VALUE","getInteriorAvailableSpace","AVAILABLE_SPACE_RESERVE_VERTICAL","AVAILABLE_SPACE_RESERVE_HORIZONTAL","triggerTop","getDropdownPosition","minWidth","preferCenter","availableSpace","triggerWidth","requiredWidth","idealWidth","max","dropLeft","spillOver","availableOutsideLeft","availableOutsideRight","fitsInCenter","dropUp","availableHeight","croppedHeight","floor","getInteriorDropdownPosition","parentDropdownTop","parentDropdownHeight","bottom","calculatePosition","dropdownElement","triggerElement","verticalContainerElement","interior","expandToViewport","style","maxHeight","classList","remove","position","triggerBox"],"sourceRoot":"","sources":["../../../../../src/internal/components/dropdown/dropdown-fit-handler.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Dimensions, getOverflowParents, getOverflowParentDimensions } from '../../utils/scrollable-containers';\nimport styles from './styles.css.js';\n\nconst AVAILABLE_SPACE_RESERVE_DEFAULT = 50;\nconst AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL = 19; // 50 - 31\nconst AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL = 20;\n\ninterface AvailableSpace {\n  above: number;\n  below: number;\n  left: number;\n  right: number;\n}\nexport interface DropdownPosition {\n  height: string;\n  width: string;\n  dropUp: boolean;\n  dropLeft: boolean;\n  left: string;\n}\nexport interface InteriorDropdownPosition extends DropdownPosition {\n  bottom: string;\n  top: string;\n}\n\nconst getClosestParentDimensions = (element: HTMLElement): any => {\n  const parents = getOverflowParents(element).map(el => {\n    const { height, width, top, left } = el.getBoundingClientRect();\n    return {\n      height,\n      width,\n      top,\n      left,\n    };\n  });\n\n  return parents.shift();\n};\n\nexport const getAvailableSpace = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  stretchWidth = false,\n  stretchHeight = false,\n  isMobile?: boolean\n): AvailableSpace => {\n  const availableSpaceReserveVertical = stretchHeight\n    ? 0\n    : isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const availableSpaceReserveHorizontal = stretchWidth\n    ? 0\n    : isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const { bottom: triggerBottom, left: triggerLeft, right: triggerRight } = trigger.getBoundingClientRect();\n\n  return overflowParents.reduce(\n    ({ above, below, left, right }, overflowParent) => {\n      const offsetTop = triggerBottom - overflowParent.top;\n      const currentAbove = offsetTop - trigger.offsetHeight - availableSpaceReserveVertical;\n      const currentBelow = overflowParent.height - offsetTop - availableSpaceReserveVertical;\n      const currentLeft = triggerRight - overflowParent.left - availableSpaceReserveHorizontal;\n      const currentRight = overflowParent.left + overflowParent.width - triggerLeft - availableSpaceReserveHorizontal;\n\n      return {\n        above: Math.min(above, currentAbove),\n        below: Math.min(below, currentBelow),\n        left: Math.min(left, currentLeft),\n        right: Math.min(right, currentRight),\n      };\n    },\n    { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE }\n  );\n};\n\nexport const getInteriorAvailableSpace = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  isMobile?: boolean\n): AvailableSpace => {\n  const AVAILABLE_SPACE_RESERVE_VERTICAL = isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const AVAILABLE_SPACE_RESERVE_HORIZONTAL = isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const {\n    bottom: triggerBottom,\n    top: triggerTop,\n    left: triggerLeft,\n    right: triggerRight,\n  } = trigger.getBoundingClientRect();\n\n  return overflowParents.reduce(\n    ({ above, below, left, right }, overflowParent) => {\n      const currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n      const currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n      const currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n      const currentRight =\n        overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n\n      return {\n        above: Math.min(above, currentAbove),\n        below: Math.min(below, currentBelow),\n        left: Math.min(left, currentLeft),\n        right: Math.min(right, currentRight),\n      };\n    },\n    { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE }\n  );\n};\n\nexport const getDropdownPosition = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  minWidth?: number,\n  preferCenter = false,\n  stretchWidth = false,\n  stretchHeight = false,\n  isMobile?: boolean\n): DropdownPosition => {\n  const availableSpace = getAvailableSpace(trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile);\n  const triggerWidth = trigger.getBoundingClientRect().width;\n  minWidth = minWidth ? Math.min(triggerWidth, minWidth) : triggerWidth;\n  const requiredWidth = dropdown.getBoundingClientRect().width;\n  // dropdown should not be smaller than the trigger\n  const idealWidth = Math.max(requiredWidth, minWidth);\n\n  let dropLeft: boolean;\n  let left: number | null = null;\n  let width = idealWidth;\n\n  //1. Can it be positioned with ideal width to the right?\n  if (idealWidth <= availableSpace.right) {\n    dropLeft = false;\n    //2. Can it be positioned with ideal width to the left?\n  } else if (idealWidth <= availableSpace.left) {\n    dropLeft = true;\n    //3. Fit into biggest available space either on left or right\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right, minWidth);\n  }\n\n  if (preferCenter) {\n    const spillOver = (idealWidth - triggerWidth) / 2;\n\n    // availableSpace always includes the trigger width, but we want to exclude that\n    const availableOutsideLeft = availableSpace.left - triggerWidth;\n    const availableOutsideRight = availableSpace.right - triggerWidth;\n\n    const fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;\n    if (fitsInCenter) {\n      left = -spillOver;\n    }\n  }\n\n  const dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  const croppedHeight = stretchHeight ? availableHeight : Math.floor(availableHeight / 31) * 31 + 16;\n\n  return {\n    dropUp,\n    dropLeft,\n    left: left === null ? 'auto' : `${left}px`,\n    height: `${croppedHeight}px`,\n    width: `${width}px`,\n  };\n};\n\nexport const getInteriorDropdownPosition = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  isMobile?: boolean\n): InteriorDropdownPosition => {\n  const availableSpace = getInteriorAvailableSpace(trigger, dropdown, overflowParents, isMobile);\n  const { bottom: triggerBottom, top: triggerTop, width: triggerWidth } = trigger.getBoundingClientRect();\n  const { top: parentDropdownTop, height: parentDropdownHeight } = getClosestParentDimensions(trigger);\n\n  let dropLeft;\n\n  let width = dropdown.getBoundingClientRect().width;\n  const top = triggerTop - parentDropdownTop;\n  if (width <= availableSpace.right) {\n    dropLeft = false;\n  } else if (width <= availableSpace.left) {\n    dropLeft = true;\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right);\n  }\n\n  const left = dropLeft ? 0 - width : triggerWidth;\n\n  const dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  const bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;\n  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  const croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;\n\n  return {\n    dropUp,\n    dropLeft,\n    height: `${croppedHeight}px`,\n    width: `${width}px`,\n    top: `${top}px`,\n    bottom: `${bottom}px`,\n    left: `${left}px`,\n  };\n};\n\nexport const calculatePosition = (\n  dropdownElement: HTMLDivElement,\n  triggerElement: HTMLDivElement,\n  verticalContainerElement: HTMLDivElement,\n  interior: boolean,\n  expandToViewport: boolean,\n  preferCenter: boolean,\n  stretchWidth: boolean,\n  stretchHeight: boolean,\n  isMobile: boolean,\n  minWidth?: number\n): [DropdownPosition, DOMRect] => {\n  // cleaning previously assigned values,\n  // so that they are not reused in case of screen resize and similar events\n  verticalContainerElement.style.maxHeight = '';\n  dropdownElement.style.width = '';\n  dropdownElement.style.top = '';\n  dropdownElement.style.bottom = '';\n  dropdownElement.style.left = '';\n\n  dropdownElement.classList.remove(styles['dropdown-drop-left']);\n  dropdownElement.classList.remove(styles['dropdown-drop-right']);\n  dropdownElement.classList.remove(styles['dropdown-drop-up']);\n\n  const overflowParents = getOverflowParentDimensions(dropdownElement, interior, expandToViewport, stretchHeight);\n  const position = interior\n    ? getInteriorDropdownPosition(triggerElement, dropdownElement, overflowParents, isMobile)\n    : getDropdownPosition(\n        triggerElement,\n        dropdownElement,\n        overflowParents,\n        minWidth,\n        preferCenter,\n        stretchWidth,\n        stretchHeight,\n        isMobile\n      );\n  const triggerBox = triggerElement.getBoundingClientRect();\n  return [position, triggerBox];\n};\n"]},"metadata":{},"sourceType":"module"}