{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport InternalMixedLineBarChart from '../mixed-line-bar-chart/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nfunction BarChart(_a) {\n  var _b = _a.series,\n      series = _b === void 0 ? [] : _b,\n      _c = _a.height,\n      height = _c === void 0 ? 500 : _c,\n      _d = _a.xScaleType,\n      xScaleType = _d === void 0 ? 'linear' : _d,\n      _e = _a.yScaleType,\n      yScaleType = _e === void 0 ? 'linear' : _e,\n      _f = _a.stackedBars,\n      stackedBars = _f === void 0 ? false : _f,\n      _g = _a.horizontalBars,\n      horizontalBars = _g === void 0 ? false : _g,\n      _h = _a.detailPopoverSize,\n      detailPopoverSize = _h === void 0 ? 'medium' : _h,\n      _j = _a.statusType,\n      statusType = _j === void 0 ? 'finished' : _j,\n      _k = _a.emphasizeBaselineAxis,\n      emphasizeBaselineAxis = _k === void 0 ? true : _k,\n      props = __rest(_a, [\"series\", \"height\", \"xScaleType\", \"yScaleType\", \"stackedBars\", \"horizontalBars\", \"detailPopoverSize\", \"statusType\", \"emphasizeBaselineAxis\"]);\n\n  var baseComponentProps = useBaseComponent('BarChart');\n  var baseProps = getBaseProps(props);\n  var className = clsx(baseProps.className, styles.root);\n  return React.createElement(InternalMixedLineBarChart, __assign({}, props, baseComponentProps, {\n    className: className,\n    height: height,\n    xScaleType: xScaleType,\n    yScaleType: yScaleType,\n    stackedBars: stackedBars,\n    horizontalBars: horizontalBars,\n    series: series,\n    detailPopoverSize: detailPopoverSize,\n    statusType: statusType,\n    emphasizeBaselineAxis: emphasizeBaselineAxis\n  }));\n}\n\napplyDisplayName(BarChart, 'BarChart');\nexport default BarChart;","map":{"version":3,"mappings":"0CAAA;AACA;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,yBAAP,MAAsC,kCAAtC;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;;AAIA,SAASC,QAAT,CAAoDC,EAApD,EAWmB;EAVjB;EAAA,UAAM,mBAAG,EAAH,GAAKC,EAAX;EAAA,IACAC,cADA;EAAA,IACAC,MAAM,mBAAG,GAAH,GAAMD,EADZ;EAAA,IAEAE,kBAFA;EAAA,IAEAC,UAAU,mBAAG,QAAH,GAAWD,EAFrB;EAAA,IAGAE,kBAHA;EAAA,IAGAC,UAAU,mBAAG,QAAH,GAAWD,EAHrB;EAAA,IAIAE,mBAJA;EAAA,IAIAC,WAAW,mBAAG,KAAH,GAAQD,EAJnB;EAAA,IAKAE,sBALA;EAAA,IAKAC,cAAc,mBAAG,KAAH,GAAQD,EALtB;EAAA,IAMAE,yBANA;EAAA,IAMAC,iBAAiB,mBAAG,QAAH,GAAWD,EAN5B;EAAA,IAOAE,kBAPA;EAAA,IAOAC,UAAU,mBAAG,UAAH,GAAaD,EAPvB;EAAA,IAQAE,6BARA;EAAA,IAQAC,qBAAqB,mBAAG,IAAH,GAAOD,EAR5B;EAAA,IASGE,KAAK,cAV0C,6IAU1C,CATR;;EAWA,IAAMC,kBAAkB,GAAGrB,gBAAgB,CAAC,UAAD,CAA3C;EACA,IAAMsB,SAAS,GAAGzB,YAAY,CAACuB,KAAD,CAA9B;EACA,IAAMG,SAAS,GAAG5B,IAAI,CAAC2B,SAAS,CAACC,SAAX,EAAsBzB,MAAM,CAAC0B,IAA7B,CAAtB;EAEA,OACE9B,oBAACK,yBAAD,EAA0B0B,aACpBL,KADoB,EAEpBC,kBAFoB,EAEF;IACtBE,SAAS,EAAEA,SADW;IAEtBlB,MAAM,EAAEA,MAFc;IAGtBE,UAAU,EAAEA,UAHU;IAItBE,UAAU,EAAEA,UAJU;IAKtBE,WAAW,EAAEA,WALS;IAMtBE,cAAc,EAAEA,cANM;IAOtBa,MAAM,EAAEA,MAPc;IAQtBX,iBAAiB,EAAEA,iBARG;IAStBE,UAAU,EAAEA,UATU;IAUtBE,qBAAqB,EAAEA;EAVD,CAFE,CAA1B,CADF;AAgBD;;AAEDvB,gBAAgB,CAACK,QAAD,EAAW,UAAX,CAAhB;AAEA,eAAeA,QAAf","names":["React","clsx","applyDisplayName","getBaseProps","styles","InternalMixedLineBarChart","useBaseComponent","BarChart","_a","_b","_c","height","_d","xScaleType","_e","yScaleType","_f","stackedBars","_g","horizontalBars","_h","detailPopoverSize","_j","statusType","_k","emphasizeBaselineAxis","props","baseComponentProps","baseProps","className","root","__assign","series"],"sourceRoot":"","sources":["../../../src/bar-chart/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { BarChartProps } from './interfaces';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport InternalMixedLineBarChart from '../mixed-line-bar-chart/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { BarChartProps };\n\nfunction BarChart<T extends number | string | Date>({\n  series = [],\n  height = 500,\n  xScaleType = 'linear',\n  yScaleType = 'linear',\n  stackedBars = false,\n  horizontalBars = false,\n  detailPopoverSize = 'medium',\n  statusType = 'finished',\n  emphasizeBaselineAxis = true,\n  ...props\n}: BarChartProps<T>) {\n  const baseComponentProps = useBaseComponent('BarChart');\n  const baseProps = getBaseProps(props);\n  const className = clsx(baseProps.className, styles.root);\n\n  return (\n    <InternalMixedLineBarChart\n      {...props}\n      {...baseComponentProps}\n      className={className}\n      height={height}\n      xScaleType={xScaleType}\n      yScaleType={yScaleType}\n      stackedBars={stackedBars}\n      horizontalBars={horizontalBars}\n      series={series}\n      detailPopoverSize={detailPopoverSize}\n      statusType={statusType}\n      emphasizeBaselineAxis={emphasizeBaselineAxis}\n    />\n  );\n}\n\napplyDisplayName(BarChart, 'BarChart');\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}