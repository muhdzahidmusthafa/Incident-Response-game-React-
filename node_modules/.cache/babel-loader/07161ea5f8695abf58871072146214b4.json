{"ast":null,"code":"import constants from\"../globals/constants\";export function checkIfGameOver(currentNodeKey){return currentNodeKey===constants.FAIL_KEY||currentNodeKey===constants.END_KEY;}export function checkIfGameEnded(currentNodeKey){if(currentNodeKey===constants.END_KEY){if(localStorage.getItem(\"LEADERBOARDDATA\")){JSON.parse(localStorage.getItem(\"LEADERBOARDDATA\")).push({name:localStorage.getItem(\"LOGINDATA\"),Score:localStorage.getItem(\"start_second\")});}else{localStorage.setItem(\"LEADERBOARDDATA\",JSON.stringify([{name:localStorage.getItem(\"LOGINDATA\"),score:localStorage.getItem(\"start_second\")}]));}}return currentNodeKey===constants.END_KEY;}export function checkIfGameFail(currentNodeKey){return currentNodeKey===constants.FAIL_KEY;}","map":{"version":3,"names":["constants","checkIfGameOver","currentNodeKey","FAIL_KEY","END_KEY","checkIfGameEnded","localStorage","getItem","JSON","parse","push","name","Score","setItem","stringify","score","checkIfGameFail"],"sources":["/Users/igostu/test/project/src/mechanics/helpers.js"],"sourcesContent":["import constants from \"../globals/constants\";\r\n\r\nexport function checkIfGameOver(currentNodeKey) {\r\n  return (\r\n    currentNodeKey === constants.FAIL_KEY ||\r\n    currentNodeKey === constants.END_KEY\r\n  );\r\n}\r\n\r\nexport function checkIfGameEnded(currentNodeKey) {\r\n  if (currentNodeKey === constants.END_KEY) {\r\n    if (localStorage.getItem(\"LEADERBOARDDATA\")) {\r\n      JSON.parse(localStorage.getItem(\"LEADERBOARDDATA\")).push({\r\n        name: localStorage.getItem(\"LOGINDATA\"),\r\n        Score: localStorage.getItem(\"start_second\"),\r\n      });\r\n    } else {\r\n      localStorage.setItem(\r\n        \"LEADERBOARDDATA\",\r\n        JSON.stringify([\r\n          {\r\n            name: localStorage.getItem(\"LOGINDATA\"),\r\n            score: localStorage.getItem(\"start_second\"),\r\n          },\r\n        ])\r\n      );\r\n    }\r\n  }\r\n  return currentNodeKey === constants.END_KEY;\r\n}\r\n\r\nexport function checkIfGameFail(currentNodeKey) {\r\n  return currentNodeKey === constants.FAIL_KEY;\r\n}\r\n"],"mappings":"AAAA,MAAOA,UAAP,KAAsB,sBAAtB,CAEA,MAAO,SAASC,gBAAT,CAAyBC,cAAzB,CAAyC,CAC9C,MACEA,eAAc,GAAKF,SAAS,CAACG,QAA7B,EACAD,cAAc,GAAKF,SAAS,CAACI,OAF/B,CAID,CAED,MAAO,SAASC,iBAAT,CAA0BH,cAA1B,CAA0C,CAC/C,GAAIA,cAAc,GAAKF,SAAS,CAACI,OAAjC,CAA0C,CACxC,GAAIE,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAJ,CAA6C,CAC3CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,EAAoDG,IAApD,CAAyD,CACvDC,IAAI,CAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,CADiD,CAEvDK,KAAK,CAAEN,YAAY,CAACC,OAAb,CAAqB,cAArB,CAFgD,CAAzD,EAID,CALD,IAKO,CACLD,YAAY,CAACO,OAAb,CACE,iBADF,CAEEL,IAAI,CAACM,SAAL,CAAe,CACb,CACEH,IAAI,CAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,CADR,CAEEQ,KAAK,CAAET,YAAY,CAACC,OAAb,CAAqB,cAArB,CAFT,CADa,CAAf,CAFF,EASD,CACF,CACD,MAAOL,eAAc,GAAKF,SAAS,CAACI,OAApC,CACD,CAED,MAAO,SAASY,gBAAT,CAAyBd,cAAzB,CAAyC,CAC9C,MAAOA,eAAc,GAAKF,SAAS,CAACG,QAApC,CACD"},"metadata":{},"sourceType":"module"}