{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef, useEffect } from 'react';\n/**\n * This hook gives the value of any variable from the previous render invocation\n */\n\nexport var usePrevious = function (value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AAEA;;;;AAGA,OAAO,IAAMC,WAAW,GAAG,UAAIC,KAAJ,EAAY;EACrC,IAAMC,GAAG,GAAGJ,MAAM,EAAlB;EACAC,SAAS,CAAC;IACRG,GAAG,CAACC,OAAJ,GAAcF,KAAd;EACD,CAFQ,CAAT;EAGA,OAAOC,GAAG,CAACC,OAAX;AACD,CANM","names":["useRef","useEffect","usePrevious","value","ref","current"],"sourceRoot":"","sources":["../../../../../src/internal/hooks/use-previous/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef, useEffect } from 'react';\n\n/**\n * This hook gives the value of any variable from the previous render invocation\n */\nexport const usePrevious = <T>(value: T) => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n"]},"metadata":{},"sourceType":"module"}