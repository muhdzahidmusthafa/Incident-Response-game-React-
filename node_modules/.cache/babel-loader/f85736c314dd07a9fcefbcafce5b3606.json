{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getBaseProps } from '../internal/base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport Dropdown from '../internal/components/dropdown';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { InternalButton } from '../button/internal';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport InternalBox from '../box/internal';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nvar InternalButtonDropdown = React.forwardRef(function (_a, ref) {\n  var items = _a.items,\n      _b = _a.variant,\n      variant = _b === void 0 ? 'normal' : _b,\n      _c = _a.loading,\n      loading = _c === void 0 ? false : _c,\n      _d = _a.disabled,\n      disabled = _d === void 0 ? false : _d,\n      _e = _a.expandableGroups,\n      expandableGroups = _e === void 0 ? false : _e,\n      children = _a.children,\n      onItemClick = _a.onItemClick,\n      onItemFollow = _a.onItemFollow,\n      customTriggerBuilder = _a.customTriggerBuilder,\n      expandToViewport = _a.expandToViewport,\n      ariaLabel = _a.ariaLabel,\n      title = _a.title,\n      description = _a.description,\n      preferCenter = _a.preferCenter,\n      __internalRootRef = _a.__internalRootRef,\n      props = __rest(_a, [\"items\", \"variant\", \"loading\", \"disabled\", \"expandableGroups\", \"children\", \"onItemClick\", \"onItemFollow\", \"customTriggerBuilder\", \"expandToViewport\", \"ariaLabel\", \"title\", \"description\", \"preferCenter\", \"__internalRootRef\"]);\n\n  var isInRestrictedView = useMobile();\n  var usingMouse = useRef(true);\n  var dropdownId = useUniqueId('dropdown');\n\n  for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n    var item = items_1[_i];\n    checkSafeUrl('ButtonDropdown', item.href);\n  }\n\n  var _f = useButtonDropdown({\n    items: items,\n    onItemClick: onItemClick,\n    onItemFollow: onItemFollow,\n    hasExpandableGroups: expandableGroups,\n    isInRestrictedView: isInRestrictedView,\n    usingMouse: usingMouse\n  }),\n      isOpen = _f.isOpen,\n      targetItem = _f.targetItem,\n      isHighlighted = _f.isHighlighted,\n      isExpanded = _f.isExpanded,\n      highlightItem = _f.highlightItem,\n      onKeyDown = _f.onKeyDown,\n      onKeyUp = _f.onKeyUp,\n      onItemActivate = _f.onItemActivate,\n      onGroupToggle = _f.onGroupToggle,\n      toggleDropdown = _f.toggleDropdown;\n\n  var handleMouseEvent = function () {\n    usingMouse.current = true;\n  };\n\n  var baseProps = getBaseProps(props);\n  var dropdownRef = useRef(null);\n  useForwardFocus(ref, dropdownRef);\n\n  var clickHandler = function () {\n    if (!usingMouse.current) {\n      return;\n    }\n\n    if (!loading && !disabled) {\n      toggleDropdown();\n\n      if (dropdownRef.current) {\n        dropdownRef.current.focus();\n      }\n    }\n  };\n\n  var canBeOpened = !loading && !disabled;\n  var wasOpen = usePrevious(isOpen);\n  useEffect(function () {\n    if (!isOpen && dropdownRef.current && wasOpen) {\n      dropdownRef.current.focus();\n    }\n  }, [isOpen, wasOpen]);\n  var triggerVariant = variant === 'navigation' ? undefined : variant;\n  var iconProps = variant === 'icon' ? {\n    iconName: 'ellipsis'\n  } : {\n    iconName: 'caret-down-filled',\n    iconAlign: 'right',\n    __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down']\n  };\n  var trigger = customTriggerBuilder ? customTriggerBuilder(clickHandler, dropdownRef, disabled, isOpen) : React.createElement(InternalButton, __assign({\n    ref: dropdownRef\n  }, iconProps, {\n    variant: triggerVariant,\n    loading: loading,\n    disabled: disabled,\n    onClick: function (event) {\n      event.preventDefault();\n      clickHandler();\n    },\n    ariaLabel: ariaLabel,\n    \"aria-haspopup\": true,\n    ariaExpanded: canBeOpened && isOpen,\n    formAction: \"none\"\n  }), children);\n  var hasHeader = title || description;\n  var headerId = useUniqueId('awsui-button-dropdown__header');\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onMouseDown: handleMouseEvent,\n    className: clsx(styles['button-dropdown'], styles[\"variant-\".concat(variant)], baseProps.className),\n    \"aria-owns\": expandToViewport && isOpen ? dropdownId : undefined,\n    ref: __internalRootRef\n  }), React.createElement(Dropdown, {\n    open: canBeOpened && isOpen,\n    stretchWidth: false,\n    stretchTriggerHeight: variant === 'navigation',\n    expandToViewport: expandToViewport,\n    preferCenter: preferCenter,\n    onDropdownClose: function () {\n      toggleDropdown();\n    },\n    trigger: trigger,\n    dropdownId: dropdownId\n  }, hasHeader && React.createElement(\"div\", {\n    className: styles.header,\n    id: headerId\n  }, title && React.createElement(InternalBox, {\n    fontSize: \"heading-s\",\n    fontWeight: \"bold\"\n  }, React.createElement(\"span\", {\n    className: styles.title\n  }, title)), description && React.createElement(InternalBox, {\n    fontSize: \"body-s\"\n  }, React.createElement(\"span\", {\n    className: styles.description\n  }, description))), React.createElement(OptionsList, {\n    open: canBeOpened && isOpen,\n    position: \"static\",\n    role: \"menu\",\n    decreaseTopMargin: true,\n    ariaLabelledby: hasHeader ? headerId : undefined\n  }, React.createElement(ItemsList, {\n    items: items,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    hasExpandableGroups: expandableGroups,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isExpanded: isExpanded,\n    highlightItem: highlightItem,\n    expandToViewport: expandToViewport,\n    variant: variant\n  }))));\n});\nexport default InternalButtonDropdown;","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","clsx","styles","getBaseProps","useUniqueId","Dropdown","ItemsList","useButtonDropdown","OptionsList","InternalButton","useMobile","useForwardFocus","usePrevious","InternalBox","checkSafeUrl","InternalButtonDropdown","forwardRef","_a","ref","_b","variant","_c","loading","_d","disabled","_e","expandableGroups","children","onItemClick","onItemFollow","customTriggerBuilder","expandToViewport","ariaLabel","title","description","preferCenter","__internalRootRef","props","isInRestrictedView","usingMouse","dropdownId","_i","item","href","items","hasExpandableGroups","isOpen","targetItem","isHighlighted","isExpanded","highlightItem","onKeyDown","onKeyUp","onItemActivate","onGroupToggle","toggleDropdown","handleMouseEvent","current","baseProps","dropdownRef","clickHandler","focus","canBeOpened","wasOpen","triggerVariant","undefined","iconProps","iconName","iconAlign","__iconClass","trigger","__assign","onClick","event","preventDefault","ariaExpanded","formAction","hasHeader","headerId","onMouseDown","className","open","stretchWidth","stretchTriggerHeight","onDropdownClose","header","id","fontSize","fontWeight","position","role","decreaseTopMargin","ariaLabelledby"],"sourceRoot":"","sources":["../../../src/button-dropdown/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { ButtonDropdownProps, InternalButtonDropdownProps } from './interfaces';\nimport { getBaseProps } from '../internal/base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport Dropdown from '../internal/components/dropdown';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { InternalButton } from '../button/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport InternalBox from '../box/internal';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\n\nconst InternalButtonDropdown = React.forwardRef(\n  (\n    {\n      items,\n      variant = 'normal',\n      loading = false,\n      disabled = false,\n      expandableGroups = false,\n      children,\n      onItemClick,\n      onItemFollow,\n      customTriggerBuilder,\n      expandToViewport,\n      ariaLabel,\n      title,\n      description,\n      preferCenter,\n      __internalRootRef,\n      ...props\n    }: InternalButtonDropdownProps,\n    ref: React.Ref<ButtonDropdownProps.Ref>\n  ) => {\n    const isInRestrictedView = useMobile();\n    const usingMouse = useRef(true);\n    const dropdownId = useUniqueId('dropdown');\n    for (const item of items) {\n      checkSafeUrl('ButtonDropdown', item.href);\n    }\n\n    const {\n      isOpen,\n      targetItem,\n      isHighlighted,\n      isExpanded,\n      highlightItem,\n      onKeyDown,\n      onKeyUp,\n      onItemActivate,\n      onGroupToggle,\n      toggleDropdown,\n    } = useButtonDropdown({\n      items,\n      onItemClick,\n      onItemFollow,\n      hasExpandableGroups: expandableGroups,\n      isInRestrictedView,\n      usingMouse,\n    });\n\n    const handleMouseEvent = () => {\n      usingMouse.current = true;\n    };\n\n    const baseProps = getBaseProps(props);\n\n    const dropdownRef = useRef<HTMLElement>(null);\n    useForwardFocus(ref, dropdownRef);\n\n    const clickHandler = () => {\n      if (!usingMouse.current) {\n        return;\n      }\n      if (!loading && !disabled) {\n        toggleDropdown();\n        if (dropdownRef.current) {\n          dropdownRef.current.focus();\n        }\n      }\n    };\n\n    const canBeOpened = !loading && !disabled;\n    const wasOpen = usePrevious(isOpen);\n\n    useEffect(() => {\n      if (!isOpen && dropdownRef.current && wasOpen) {\n        dropdownRef.current.focus();\n      }\n    }, [isOpen, wasOpen]);\n\n    const triggerVariant = variant === 'navigation' ? undefined : variant;\n    const iconProps: Partial<ButtonProps & { __iconClass?: string }> =\n      variant === 'icon'\n        ? {\n            iconName: 'ellipsis',\n          }\n        : {\n            iconName: 'caret-down-filled',\n            iconAlign: 'right',\n            __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down'],\n          };\n\n    const trigger = customTriggerBuilder ? (\n      customTriggerBuilder(clickHandler, dropdownRef, disabled, isOpen)\n    ) : (\n      <InternalButton\n        ref={dropdownRef}\n        {...iconProps}\n        variant={triggerVariant}\n        loading={loading}\n        disabled={disabled}\n        onClick={(event: Event) => {\n          event.preventDefault();\n          clickHandler();\n        }}\n        ariaLabel={ariaLabel}\n        aria-haspopup={true}\n        ariaExpanded={canBeOpened && isOpen}\n        formAction=\"none\"\n      >\n        {children}\n      </InternalButton>\n    );\n\n    const hasHeader = title || description;\n    const headerId = useUniqueId('awsui-button-dropdown__header');\n\n    return (\n      <div\n        {...baseProps}\n        onKeyDown={onKeyDown}\n        onKeyUp={onKeyUp}\n        onMouseDown={handleMouseEvent}\n        className={clsx(styles['button-dropdown'], styles[`variant-${variant}`], baseProps.className)}\n        aria-owns={expandToViewport && isOpen ? dropdownId : undefined}\n        ref={__internalRootRef}\n      >\n        <Dropdown\n          open={canBeOpened && isOpen}\n          stretchWidth={false}\n          stretchTriggerHeight={variant === 'navigation'}\n          expandToViewport={expandToViewport}\n          preferCenter={preferCenter}\n          onDropdownClose={() => {\n            toggleDropdown();\n          }}\n          trigger={trigger}\n          dropdownId={dropdownId}\n        >\n          {hasHeader && (\n            <div className={styles.header} id={headerId}>\n              {title && (\n                <InternalBox fontSize=\"heading-s\" fontWeight=\"bold\">\n                  <span className={styles.title}>{title}</span>\n                </InternalBox>\n              )}\n              {description && (\n                <InternalBox fontSize=\"body-s\">\n                  <span className={styles.description}>{description}</span>\n                </InternalBox>\n              )}\n            </div>\n          )}\n          <OptionsList\n            open={canBeOpened && isOpen}\n            position=\"static\"\n            role=\"menu\"\n            decreaseTopMargin={true}\n            ariaLabelledby={hasHeader ? headerId : undefined}\n          >\n            <ItemsList\n              items={items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              hasExpandableGroups={expandableGroups}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isExpanded={isExpanded}\n              highlightItem={highlightItem}\n              expandToViewport={expandToViewport}\n              variant={variant}\n            />\n          </OptionsList>\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\nexport default InternalButtonDropdown;\n"]},"metadata":{},"sourceType":"module"}