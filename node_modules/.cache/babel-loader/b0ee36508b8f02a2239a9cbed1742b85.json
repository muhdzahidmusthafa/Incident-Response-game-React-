{"ast":null,"code":"import { __assign, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { FormFieldContext, useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport InternalGrid from '../grid/internal';\nimport InternalIcon from '../icon/internal';\nimport { getAriaDescribedBy, getGridDefinition, getSlotIds } from './util';\nimport styles from './styles.css.js';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { joinStrings } from '../internal/utils/strings';\nexport var FormFieldError = function (_a) {\n  var id = _a.id,\n      children = _a.children;\n  return React.createElement(\"div\", {\n    className: styles.error\n  }, React.createElement(\"div\", {\n    className: styles['error-icon-shake-wrapper']\n  }, React.createElement(\"div\", {\n    className: styles['error-icon-scale-wrapper']\n  }, React.createElement(InternalIcon, {\n    name: \"status-warning\",\n    size: \"small\"\n  }))), React.createElement(\"span\", {\n    id: id,\n    className: styles.error__message\n  }, children));\n};\nexport default function InternalFormField(_a) {\n  var controlId = _a.controlId,\n      _b = _a.stretch,\n      stretch = _b === void 0 ? false : _b,\n      label = _a.label,\n      info = _a.info,\n      children = _a.children,\n      secondaryControl = _a.secondaryControl,\n      description = _a.description,\n      constraintText = _a.constraintText,\n      errorText = _a.errorText,\n      __hideLabel = _a.__hideLabel,\n      _c = _a.__internalRootRef,\n      __internalRootRef = _c === void 0 ? null : _c,\n      rest = __rest(_a, [\"controlId\", \"stretch\", \"label\", \"info\", \"children\", \"secondaryControl\", \"description\", \"constraintText\", \"errorText\", \"__hideLabel\", \"__internalRootRef\"]);\n\n  var baseProps = getBaseProps(rest);\n  var ref = useRef(null);\n  var isRefresh = useVisualRefresh(ref);\n  var instanceUniqueId = useUniqueId('formField');\n  var generatedControlId = controlId || instanceUniqueId;\n  var formFieldId = controlId || generatedControlId;\n  var slotIds = getSlotIds(formFieldId, label, description, constraintText, errorText);\n  var ariaDescribedBy = getAriaDescribedBy(slotIds);\n  var gridDefinition = getGridDefinition(stretch, !!secondaryControl, isRefresh);\n\n  var _d = useFormFieldContext({}),\n      parentAriaLabelledby = _d.ariaLabelledby,\n      parentAriaDescribedby = _d.ariaDescribedby,\n      parentInvalid = _d.invalid;\n\n  var contextValuesWithoutControlId = {\n    ariaLabelledby: joinStrings(parentAriaLabelledby, slotIds.label) || undefined,\n    ariaDescribedby: joinStrings(parentAriaDescribedby, ariaDescribedBy) || undefined,\n    invalid: !!errorText || !!parentInvalid\n  };\n  var mergedRef = useMergeRefs(ref, __internalRootRef);\n  return React.createElement(\"div\", __assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef\n  }), React.createElement(\"div\", {\n    className: clsx(__hideLabel && styles['visually-hidden'])\n  }, label && React.createElement(\"label\", {\n    className: styles.label,\n    id: slotIds.label,\n    htmlFor: generatedControlId\n  }, label), !__hideLabel && info && React.createElement(\"span\", {\n    className: styles.info\n  }, info)), description && React.createElement(\"div\", {\n    className: styles.description,\n    id: slotIds.description\n  }, description), React.createElement(\"div\", {\n    className: clsx(styles.controls, __hideLabel && styles['label-hidden'])\n  }, React.createElement(InternalGrid, {\n    gridDefinition: gridDefinition\n  }, React.createElement(FormFieldContext.Provider, {\n    value: __assign({\n      controlId: generatedControlId\n    }, contextValuesWithoutControlId)\n  }, children && React.createElement(\"div\", {\n    className: styles.control\n  }, children)), secondaryControl && React.createElement(FormFieldContext.Provider, {\n    value: contextValuesWithoutControlId\n  }, React.createElement(\"div\", {\n    className: styles['secondary-control']\n  }, secondaryControl)))), (constraintText || errorText) && React.createElement(\"div\", {\n    className: styles.hints\n  }, errorText && React.createElement(FormFieldError, {\n    id: slotIds.error\n  }, errorText), constraintText && React.createElement(\"div\", {\n    className: clsx(styles.constraint, errorText && styles['constraint-has-error']),\n    id: slotIds.constraint\n  }, constraintText)));\n}","map":{"version":3,"mappings":"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","names":["React","useRef","clsx","getBaseProps","FormFieldContext","useFormFieldContext","useUniqueId","useVisualRefresh","InternalGrid","InternalIcon","getAriaDescribedBy","getGridDefinition","getSlotIds","styles","useMergeRefs","joinStrings","FormFieldError","_a","id","children","className","error","name","size","error__message","InternalFormField","_b","stretch","label","info","secondaryControl","description","constraintText","errorText","__hideLabel","_c","__internalRootRef","rest","baseProps","ref","isRefresh","instanceUniqueId","generatedControlId","controlId","formFieldId","slotIds","ariaDescribedBy","gridDefinition","parentAriaLabelledby","parentAriaDescribedby","parentInvalid","contextValuesWithoutControlId","ariaLabelledby","undefined","ariaDescribedby","invalid","mergedRef","root","htmlFor","controls","Provider","value","control","hints","constraint"],"sourceRoot":"","sources":["../../../src/form-field/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { FormFieldContext, useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\n\nimport InternalGrid from '../grid/internal';\nimport InternalIcon from '../icon/internal';\nimport { getAriaDescribedBy, getGridDefinition, getSlotIds } from './util';\n\nimport styles from './styles.css.js';\nimport { InternalFormFieldProps } from './interfaces';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { joinStrings } from '../internal/utils/strings';\n\ninterface FormFieldErrorProps {\n  id?: string;\n  children?: React.ReactNode;\n}\n\nexport const FormFieldError = ({ id, children }: FormFieldErrorProps) => (\n  <div className={styles.error}>\n    <div className={styles['error-icon-shake-wrapper']}>\n      <div className={styles['error-icon-scale-wrapper']}>\n        <InternalIcon name=\"status-warning\" size=\"small\" />\n      </div>\n    </div>\n    <span id={id} className={styles.error__message}>\n      {children}\n    </span>\n  </div>\n);\n\nexport default function InternalFormField({\n  controlId,\n  stretch = false,\n  label,\n  info,\n  children,\n  secondaryControl,\n  description,\n  constraintText,\n  errorText,\n  __hideLabel,\n  __internalRootRef = null,\n  ...rest\n}: InternalFormFieldProps) {\n  const baseProps = getBaseProps(rest);\n  const ref = useRef<HTMLElement>(null);\n  const isRefresh = useVisualRefresh(ref);\n\n  const instanceUniqueId = useUniqueId('formField');\n  const generatedControlId = controlId || instanceUniqueId;\n  const formFieldId = controlId || generatedControlId;\n\n  const slotIds = getSlotIds(formFieldId, label, description, constraintText, errorText);\n\n  const ariaDescribedBy = getAriaDescribedBy(slotIds);\n\n  const gridDefinition = getGridDefinition(stretch, !!secondaryControl, isRefresh);\n\n  const {\n    ariaLabelledby: parentAriaLabelledby,\n    ariaDescribedby: parentAriaDescribedby,\n    invalid: parentInvalid,\n  } = useFormFieldContext({});\n\n  const contextValuesWithoutControlId = {\n    ariaLabelledby: joinStrings(parentAriaLabelledby, slotIds.label) || undefined,\n    ariaDescribedby: joinStrings(parentAriaDescribedby, ariaDescribedBy) || undefined,\n    invalid: !!errorText || !!parentInvalid,\n  };\n\n  const mergedRef = useMergeRefs(ref, __internalRootRef);\n\n  return (\n    <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={mergedRef}>\n      <div className={clsx(__hideLabel && styles['visually-hidden'])}>\n        {label && (\n          <label className={styles.label} id={slotIds.label} htmlFor={generatedControlId}>\n            {label}\n          </label>\n        )}\n        {!__hideLabel && info && <span className={styles.info}>{info}</span>}\n      </div>\n\n      {description && (\n        <div className={styles.description} id={slotIds.description}>\n          {description}\n        </div>\n      )}\n\n      <div className={clsx(styles.controls, __hideLabel && styles['label-hidden'])}>\n        <InternalGrid gridDefinition={gridDefinition}>\n          <FormFieldContext.Provider\n            value={{\n              controlId: generatedControlId,\n              ...contextValuesWithoutControlId,\n            }}\n          >\n            {children && <div className={styles.control}>{children}</div>}\n          </FormFieldContext.Provider>\n\n          {secondaryControl && (\n            <FormFieldContext.Provider value={contextValuesWithoutControlId}>\n              <div className={styles['secondary-control']}>{secondaryControl}</div>\n            </FormFieldContext.Provider>\n          )}\n        </InternalGrid>\n      </div>\n\n      {(constraintText || errorText) && (\n        <div className={styles.hints}>\n          {errorText && <FormFieldError id={slotIds.error}>{errorText}</FormFieldError>}\n          {constraintText && (\n            <div\n              className={clsx(styles.constraint, errorText && styles['constraint-has-error'])}\n              id={slotIds.constraint}\n            >\n              {constraintText}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}